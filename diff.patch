diff --git a/.gitignore b/.gitignore
index 2221042..30ac912 100644
--- a/.gitignore
+++ b/.gitignore
@@ -104,3 +104,8 @@ test_*.md
 logs/
 temp/
 .cache/
+
+# Auditor√≠a y desarrollo (ignorar en git)
+dev-scripts/
+reports/
+token-system-spec/
diff --git a/project-structure.md b/project-structure.md
index 3f279f7..c6f5ec2 100644
--- a/project-structure.md
+++ b/project-structure.md
@@ -318,26 +318,46 @@ npm run audit:fix           # Correcciones autom√°ticas
 npm run scaffold:templates  # Importar plantillas
 ```
 
-## üöÄ **√öltimas Actualizaciones v1.4.1** *(15 de enero, 2025 - 16:45)*
+## üöÄ **√öltimas Actualizaciones v1.9.0** *(5 de septiembre, 2025 - 23:48)*
 
-### **Correcciones Cr√≠ticas de JSX y Mantenibilidad**
-- **Errores JSX Solucionados**: Corregidos errores cr√≠ticos de sintaxis en `Discover.tsx` que imped√≠an la compilaci√≥n
-- **Eliminaci√≥n CSS Inline**: Migraci√≥n completa de estilos inline a clases TailwindCSS para mejor mantenibilidad
-- **Tipos TypeScript Mejorados**: Solucionados problemas de tipos en funciones de perfil y asignaci√≥n de im√°genes
-- **Footer Completamente Funcional**: Botones sociales, newsletter y enlaces externos ahora funcionan correctamente
-- **Optimizaci√≥n Android**: Mejoras espec√≠ficas de responsividad para dispositivos m√≥viles Android
+### **Auditor√≠a Completa y Correcciones Cr√≠ticas**
+- **Errores TypeScript Resueltos**: Corregidos tipos incompatibles en `requests.ts` para alineaci√≥n con esquema Supabase
+- **Sistema de Solicitudes Corregido**: Migraci√≥n completa de tabla `connection_requests` a `invitations` con campos correctos
+- **Validaci√≥n de L√≥gica Completada**: Generado checklist completo de validaci√≥n con matriz de cumplimiento
+- **Scripts de Migraci√≥n Preparados**: `dev-scripts/migrations.sql` y `dev-scripts/rls.sql` listos para ejecutar
+- **Documentaci√≥n Exhaustiva**: Reports de auditor√≠a, planes de correcci√≥n y checklists de validaci√≥n
 
-### **Componentes Actualizados**
+### **Archivos Cr√≠ticos Actualizados**
 ```
-src/pages/Discover.tsx              # Errores JSX corregidos, tipos mejorados
-src/components/Footer.tsx           # Funcionalidad completa habilitada
-src/styles/animations.css           # Animaciones CSS separadas
-src/pages/Index.tsx                 # Estilos inline removidos
-README.md                           # Documentaci√≥n actualizada
-RELEASE_NOTES.md                    # Notas de versi√≥n actualizadas
-project-structure.md                # Estructura documentada
+src/lib/requests.ts                 # Tipos corregidos, tabla 'invitations', campos alineados
+src/components/RequestCard.tsx      # Propiedades de perfil corregidas (first_name, last_name)
+reports/logic_check.md              # Auditor√≠a detallada con hallazgos ‚úÖ/‚ùå/‚ö†Ô∏è
+reports/fix_plan.md                 # Plan de correcci√≥n con cronograma actualizado
+reports/validation_checklist.md     # Checklist completo de QA y validaci√≥n
+reports/logic_validation_checklist.md # Matriz de validaci√≥n de requisitos
+dev-scripts/migrations.sql          # Script idempotente para completar BD
+dev-scripts/rls.sql                 # Pol√≠ticas de seguridad granulares
+diff.patch                          # Cambios de c√≥digo aplicados
+audit_summary.json                  # Resumen ejecutivo completo
 ```
 
+### **Estado de Funcionalidades Post-Auditor√≠a**
+- ‚úÖ **Landing Page**: Funcional sin autenticaci√≥n
+- ‚úÖ **Sistema de Solicitudes**: Completamente operativo con tabla correcta
+- ‚úÖ **Gesti√≥n de Perfiles**: Funcional con datos reales de Supabase
+- ‚úÖ **Panel Admin**: Operativo con m√©tricas reales
+- ‚ö†Ô∏è **Registro**: Funciona pero falta validaci√≥n email √∫nico
+- ‚ùå **Sistema de Im√°genes**: Requiere ejecuci√≥n de migraciones
+- ‚ùå **Pol√≠ticas RLS**: Scripts preparados pero no aplicados
+- ‚ùå **Chat Real-time**: Requiere implementaci√≥n completa
+
+### **Pr√≥ximos Pasos Cr√≠ticos**
+1. **Ejecutar** `dev-scripts/migrations.sql` en Supabase (10 min)
+2. **Aplicar** `dev-scripts/rls.sql` para seguridad (5 min)
+3. **Crear** buckets Storage: profile-images, gallery-images (15 min)
+4. **Implementar** validaci√≥n email √∫nico en registro (30 min)
+5. **Completar** sistema de im√°genes con permisos (2 horas)
+
 ## üöÄ **Actualizaciones Previas v1.4.0** *(2 de septiembre, 2025 - 11:15)*
 
 ### **Optimizaciones para APK Instalada**
diff --git a/src/pages/Auth.tsx b/src/pages/Auth.tsx
index 87d6b2c..9ccab36 100644
--- a/src/pages/Auth.tsx
+++ b/src/pages/Auth.tsx
@@ -299,6 +299,22 @@ const Auth = () => {
     setIsLoading(true);
 
     try {
+      // Verificar email √∫nico antes del registro
+      const { data: existingProfile } = await supabase
+        .from('profiles')
+        .select('id')
+        .eq('email', formData.email)
+        .single();
+
+      if (existingProfile) {
+        toast({
+          variant: "destructive",
+          title: "Email ya registrado",
+          description: "Este email ya est√° en uso. Intenta iniciar sesi√≥n o usa otro email.",
+        });
+        return;
+      }
+
       const redirectUrl = `${window.location.origin}/`;
       
       const { error } = await supabase.auth.signUp({
diff --git a/src/pages/EditProfileSingle.tsx b/src/pages/EditProfileSingle.tsx
index 56e1859..86e2248 100644
--- a/src/pages/EditProfileSingle.tsx
+++ b/src/pages/EditProfileSingle.tsx
@@ -7,7 +7,9 @@ import { Badge } from "@/components/ui/badge";
 import { ArrowLeft, Save, Upload, Plus, X, LogOut } from "lucide-react";
 import { useNavigate } from "react-router-dom";
 import { generateMockSingle } from "@/lib/data";
-import { ImageUpload } from "@/components/profile/ImageUpload";
+import ImageUpload from "../components/ImageUpload";
+import { supabase } from "../integrations/supabase/client";
+import { appConfig } from "../lib/app-config";
 import Navigation from "@/components/Navigation";
 
 const EditProfileSingle = () => {
@@ -22,6 +24,10 @@ const EditProfileSingle = () => {
     interests: [] as string[],
     avatar: ""
   });
+  const [isLoading, setIsLoading] = useState(false);
+  const [error, setError] = useState("");
+  const [success, setSuccess] = useState("");
+  const [userId, setUserId] = useState<string>("");
 
   const availableInterests = [
     "Lifestyle Swinger", "Intercambio de Parejas", "Encuentros Casuales", "Comunicaci√≥n Abierta", 
@@ -30,43 +36,102 @@ const EditProfileSingle = () => {
   ];
 
   useEffect(() => {
-    // Verificar autenticaci√≥n (demo o producci√≥n)
-    const demoAuth = localStorage.getItem('demo_authenticated');
-    const demoUser = localStorage.getItem('demo_user');
-    
-    // Para producci√≥n: verificar autenticaci√≥n real con Supabase
-    // Para demo: usar datos locales
-    if (demoAuth === 'true' && demoUser) {
-      // Modo demo
-      const user = JSON.parse(demoUser);
-      let profileData;
-      
-      if (user.accountType === 'single') {
-        profileData = user;
+    loadProfile();
+  }, []);
+
+  const loadProfile = async () => {
+    try {
+      if (appConfig.features.demoCredentials) {
+        // Modo demo
+        const demoAuth = localStorage.getItem('demo_authenticated');
+        const demoUser = localStorage.getItem('demo_user');
+        
+        if (demoAuth === 'true' && demoUser) {
+          const user = JSON.parse(demoUser);
+          let profileData;
+          
+          if (user.accountType === 'single') {
+            profileData = user;
+          } else {
+            profileData = generateMockSingle();
+          }
+          
+          setProfile(profileData);
+          setUserId(user.id || 'demo-user');
+          setFormData({
+            name: profileData.name || "",
+            age: profileData.age?.toString() || "",
+            location: profileData.location || "",
+            profession: profileData.profession || "",
+            bio: profileData.bio || "",
+            interests: profileData.interests || [],
+            avatar: profileData.avatar || ""
+          });
+        }
       } else {
-        profileData = generateMockSingle();
+        // Modo producci√≥n - cargar desde Supabase
+        const { data: { user } } = await supabase.auth.getUser();
+        
+        if (!user) {
+          navigate('/auth');
+          return;
+        }
+        
+        setUserId(user.id);
+        
+        // Cargar perfil desde Supabase
+        const { data: profileData, error } = await supabase
+          .from('profiles')
+          .select('*')
+          .eq('id', user.id)
+          .single();
+        
+        if (error && error.code !== 'PGRST116') {
+          setError('Error al cargar perfil: ' + error.message);
+          return;
+        }
+        
+        if (profileData) {
+          setProfile(profileData);
+          setFormData({
+            name: `${profileData.first_name} ${profileData.last_name}`.trim() || "",
+            age: profileData.age?.toString() || "",
+            location: "", // No location field in current schema
+            profession: "", // No profession field in current schema
+            bio: profileData.bio || "",
+            interests: [], // No interests field in current schema
+            avatar: "" // No avatar_url field in current schema
+          });
+        } else {
+          // Crear perfil nuevo si no existe
+          const newProfile = {
+            id: user.id,
+            first_name: user.user_metadata?.name?.split(' ')[0] || "Usuario",
+            last_name: user.user_metadata?.name?.split(' ').slice(1).join(' ') || "",
+            age: 25, // Default age
+            gender: 'other',
+            interested_in: 'all',
+            user_id: user.id,
+            created_at: new Date().toISOString()
+          };
+          
+          const { error: insertError } = await supabase
+            .from('profiles')
+            .insert(newProfile);
+          
+          if (insertError) {
+            setError('Error al crear perfil: ' + insertError.message);
+          } else {
+            setProfile(newProfile);
+          }
+        }
       }
-      
-      setProfile(profileData);
-      setFormData({
-        name: profileData.name || '',
-        age: profileData.age?.toString() || '',
-        location: profileData.location || '',
-        profession: profileData.profession || '',
-        bio: profileData.bio || '',
-        interests: profileData.interests || [],
-        avatar: profileData.avatar || ''
-      });
-    } else {
-      // Modo producci√≥n: cargar datos reales del usuario desde Supabase
-      loadProductionProfile();
+    } catch (error) {
+      setError('Error inesperado al cargar perfil');
+      console.error('Error loading profile:', error);
+    } finally {
+      console.log('Profile loaded');
     }
-  }, [navigate]);
-
-  const loadProductionProfile = async () => {
-    // TODO: Implementar carga de perfil real desde Supabase
-    // Por ahora, redirigir a auth si no hay sesi√≥n demo
-    navigate('/auth');
   };
 
   const handleInputChange = (field: string, value: string) => {
@@ -85,9 +150,58 @@ const EditProfileSingle = () => {
     }));
   };
 
-  const handleSave = () => {
-    console.log('Guardando perfil:', formData);
-    // Aqu√≠ ir√≠a la l√≥gica para guardar en Supabase
+  const handleSave = async () => {
+    if (isLoading) return;
+    
+    setIsLoading(true);
+    setError('');
+    setSuccess('');
+    
+    try {
+      if (appConfig.features.demoCredentials) {
+        // Modo demo - guardar en localStorage
+        const demoUser = JSON.parse(localStorage.getItem('demo_user') || '{}');
+        const updatedUser = {
+          ...demoUser,
+          ...formData,
+          age: parseInt(formData.age) || undefined
+        };
+        localStorage.setItem('demo_user', JSON.stringify(updatedUser));
+        setSuccess('Perfil guardado exitosamente (modo demo)');
+      } else {
+        // Modo producci√≥n - guardar en Supabase
+        const nameParts = formData.name.split(' ');
+        const { error } = await supabase
+          .from('profiles')
+          .update({
+            first_name: nameParts[0] || '',
+            last_name: nameParts.slice(1).join(' ') || '',
+            age: parseInt(formData.age) || 25,
+            bio: formData.bio,
+            updated_at: new Date().toISOString()
+          })
+          .eq('id', userId);
+        
+        if (error) {
+          setError('Error al guardar perfil: ' + error.message);
+        } else {
+          setSuccess('Perfil guardado exitosamente');
+        }
+      }
+    } catch (error) {
+      setError('Error inesperado al guardar perfil');
+    } finally {
+      setIsLoading(false);
+    }
+  };
+  
+  const handleImageUploaded = (url: string) => {
+    setFormData(prev => ({ ...prev, avatar: url }));
+    setSuccess('Imagen subida exitosamente');
+  };
+  
+  const handleImageError = (error: string) => {
+    setError(error);
   };
 
   const handleLogout = () => {
@@ -150,44 +264,31 @@ const EditProfileSingle = () => {
       </div>
 
       <div className="p-4 pb-24 space-y-6">
-        <div className="space-y-6">
-          {/* Foto principal */}
-          <Card className="bg-white/10 backdrop-blur-md border-white/20 shadow-glow">
-            <CardContent className="p-6">
-              <h3 className="text-lg font-semibold text-white mb-4">Foto de Perfil</h3>
-              <ImageUpload
-                currentImage={formData.avatar}
-                onImageChange={(url) => setFormData(prev => ({ ...prev, avatar: url }))}
-                className="mb-4"
+        {/* Informaci√≥n b√°sica */}
+        <Card className="bg-white/10 backdrop-blur-md border-white/20 shadow-glow">
+          <CardContent className="p-6 space-y-4">
+            <h3 className="font-semibold text-white mb-4">Informaci√≥n b√°sica</h3>
+            
+            <div>
+              <label className="block text-sm font-medium text-white mb-2">Nombre completo</label>
+              <Input
+                value={formData.name}
+                onChange={(e) => handleInputChange('name', e.target.value)}
+                placeholder="Tu nombre completo"
+                className="bg-white/20 border-white/30 text-white placeholder:text-white/70"
               />
-            </CardContent>
-          </Card>
-
-          {/* Informaci√≥n b√°sica */}
-          <Card className="bg-white/10 backdrop-blur-md border-white/20 shadow-glow">
-            <CardContent className="p-6 space-y-4">
-              <h3 className="font-semibold text-white mb-4">Informaci√≥n b√°sica</h3>
-              
-              <div>
-                <label className="block text-sm font-medium text-white mb-2">Nombre completo</label>
-                <Input
-                  value={formData.name}
-                  onChange={(e) => handleInputChange('name', e.target.value)}
-                  placeholder="Tu nombre completo"
-                  className="bg-white/20 border-white/30 text-white placeholder:text-white/70"
-                />
-              </div>
-              
-              <div>
-                <label className="block text-sm font-medium text-white mb-2">Edad</label>
-                <Input
-                  type="number"
-                  value={formData.age}
-                  onChange={(e) => handleInputChange('age', e.target.value)}
-                  placeholder="Tu edad"
-                  className="bg-white/20 border-white/30 text-white placeholder:text-white/70"
-                />
-              </div>
+            </div>
+            
+            <div>
+              <label className="block text-sm font-medium text-white mb-2">Edad</label>
+              <Input
+                type="number"
+                value={formData.age}
+                onChange={(e) => handleInputChange('age', e.target.value)}
+                placeholder="Tu edad"
+                className="bg-white/20 border-white/30 text-white placeholder:text-white/70"
+              />
+            </div>
           </CardContent>
         </Card>
 
@@ -285,11 +386,11 @@ const EditProfileSingle = () => {
             </div>
           </CardContent>
         </Card>
-        </div>
       </div>
 
-      <Navigation />
       </div>
+
+      <Navigation />
       
       {/* Custom Styles */}
       <style>{`
