[{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\AppLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\AppSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\BetaBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\DismissibleBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\Footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\HCaptchaWidget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\Header.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\HeaderNav.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\HeroSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\LoadingScreen.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\LoginLoadingScreen.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ModeIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\Navigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\NavigationEnhanced.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ProfileFilters.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ProfileGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ProfileLoadingScreen.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ProtectedRoute.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\RequestCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ResponsiveContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\SendRequestDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ThemeModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ThemeSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\WelcomeModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\accessibility\\AccessibilityAudit.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\accessibility\\AccessibilityProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\accessibility\\ContrastFixer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\AnalyticsPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\PerformancePanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\ProfileReportsPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\ReportsManagement.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\SecurityPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\TokenSystemPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\UserManagementPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\panels\\PerformancePanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\panels\\ReportsPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\panels\\SecurityPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\panels\\TokenSystemPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\panels\\UserManagementPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\admin\\panels\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ai\\ContentModerationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ai\\SmartMatchingModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\analytics\\ProfileAnalytics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\android\\AndroidOptimizedApp.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\android\\AndroidThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\android\\LazyImageLoader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\animations\\AnimationProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\animations\\AnimationSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\animations\\EnhancedComponents.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\animations\\GlobalAnimations.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\animations\\InteractiveAnimations.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\animations\\NotificationSystem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\animations\\PageTransitions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\AdminRoute.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\CoupleRegistrationForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\EmailValidation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\EmailVerification.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\InterestsSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\ModeratorRoute.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\NicknameValidator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\PasswordValidator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\SingleRegistrationForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\TermsModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\ThemeInfoModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\auth\\WorldIDButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\ChatBubble.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\ChatContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\ChatInput.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\ChatList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\ChatWindow.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\ChatWindowEnhanced.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\ChatWithLocation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\ModernChatInterface.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\RealtimeChatIntegration.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\RealtimeChatWindow.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\chat\\TypingIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\demo\\ProfileThemeShowcase.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\discover\\AdvancedFilters.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\discover\\DiscoverProfileCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\discover\\DiscoverSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\discover\\LocationSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\discover\\MatchScore.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\discover\\PreferenceSearch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\discover\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\forms\\EmailValidationForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\forms\\ModeratorApplicationForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\gamification\\Gamification.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\images\\ImageGallery.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":70,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":70,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":89,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":89,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Eye, Lock, Unlock, Trash2, MessageSquare } from 'lucide-react';\nimport { getUserImages, deleteImage, ImageUpload } from '@/lib/images';\nimport { useToast } from '@/hooks/use-toast';\nimport { useAuth } from '@/hooks/useAuth';\nimport { logger } from '@/lib/logger';\n\ninterface ImageGalleryProps {\n  images: string[];\n  onImageClick?: (index: number) => void;\n  _showUpload?: boolean;\n  onUpload?: (file: File) => void;\n}\n\nexport function ImageGallery({ images: _images, _onImageClick, _showUpload = false, _onUpload }: ImageGalleryProps) {\n  const [loading, setLoading] = useState(true);\n  const [images, setImages] = useState<ImageUpload[]>([]);\n  const [selectedImage, setSelectedImage] = useState<ImageUpload | null>(null);\n  const [requestingAccess, setRequestingAccess] = useState(false);\n  const { user } = useAuth();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    loadImages();\n  }, []);\n\n  const loadImages = async () => {\n    setLoading(true);\n    try {\n      const loadedImages = await getUserImages('', false);\n      setImages(loadedImages);\n    } catch (error) {\n      logger.error('Error loading images:', { error });\n      toast({\n        variant: \"destructive\",\n        title: \"Error al cargar imágenes\",\n        description: \"Error de conexión\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteImage = async (imageId: string) => {\n    if (!confirm('¿Estás seguro de que quieres eliminar esta imagen?')) {\n      return;\n    }\n\n    try {\n      const success = await deleteImage(imageId, profileId);\n      \n      if (success) {\n        setImages(images.filter(img => img.id !== imageId));\n        setSelectedImage(null);\n        toast({\n          title: \"Imagen eliminada\",\n          description: \"La imagen se eliminó correctamente.\",\n        });\n      } else {\n        toast({\n          variant: \"destructive\",\n          title: \"Error al eliminar\",\n          description: \"No se pudo eliminar la imagen\",\n        });\n      }\n    } catch (_error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error inesperado\",\n        description: \"No se pudo eliminar la imagen\",\n      });\n    }\n  };\n\n  const handleRequestAccess = async () => {\n    if (!user) return;\n\n    setRequestingAccess(true);\n    try {\n      // Funcionalidad de solicitud de acceso no implementada aún\n      toast({\n        title: \"Funcionalidad en desarrollo\",\n        description: \"La solicitud de acceso estará disponible pronto.\",\n      });\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Error inesperado\",\n        description: \"No se pudo enviar la solicitud\",\n      });\n    } finally {\n      setRequestingAccess(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        {[...Array(8)].map((_, i) => (\n          <div key={i} className=\"aspect-square bg-gray-200 animate-pulse rounded-lg\" />\n        ))}\n      </div>\n    );\n  }\n\n  const publicImages = images.filter(img => img.is_public);\n  const privateImages = images.filter(img => !img.is_public);\n  const hasPrivateImages = privateImages.length > 0;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Imágenes públicas */}\n      {publicImages.length > 0 && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n            <Unlock className=\"h-5 w-5\" />\n            Galería Pública ({publicImages.length})\n          </h3>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 sm:gap-4\">\n            {publicImages.map((image) => (\n              <ImageCard\n                key={image.id}\n                image={image}\n                isOwner={isOwner}\n                onView={setSelectedImage}\n                onDelete={handleDeleteImage}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Imágenes privadas */}\n      {privateImages.length > 0 && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n            <Lock className=\"h-5 w-5\" />\n            Galería Privada ({privateImages.length})\n          </h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n            {privateImages.map((image) => (\n              <ImageCard\n                key={image.id}\n                image={image}\n                isOwner={isOwner}\n                onView={setSelectedImage}\n                onDelete={handleDeleteImage}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Mensaje cuando no hay imágenes */}\n      {images.length === 0 && (\n        <Card className=\"p-8 text-center\">\n          <CardContent>\n            <Eye className=\"h-12 w-12 mx-auto mb-4 text-gray-400\" />\n            <h3 className=\"text-lg font-semibold mb-2\">No hay imágenes</h3>\n            <p className=\"text-muted-foreground\">\n              {isOwner \n                ? \"Sube tu primera imagen para comenzar tu galería\"\n                : \"Este perfil no tiene imágenes públicas disponibles\"\n              }\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Botón para solicitar acceso a galería privada */}\n      {!isOwner && hasPrivateImages && user && (\n        <Card className=\"p-4\">\n          <CardContent className=\"flex items-center justify-between\">\n            <div>\n              <h4 className=\"font-semibold\">Galería Privada</h4>\n              <p className=\"text-sm text-muted-foreground\">\n                Este perfil tiene imágenes privadas. Solicita acceso para verlas.\n              </p>\n            </div>\n            <Button\n              onClick={handleRequestAccess}\n              disabled={requestingAccess}\n              variant=\"outline\"\n            >\n              <MessageSquare className=\"h-4 w-4 mr-2\" />\n              {requestingAccess ? 'Enviando...' : 'Solicitar Acceso'}\n            </Button>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Modal de imagen */}\n      {selectedImage && (\n        <Dialog open={!!selectedImage} onOpenChange={() => setSelectedImage(null)}>\n          <DialogContent className=\"max-w-sm sm:max-w-md lg:max-w-4xl max-h-[90vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center gap-2 text-sm sm:text-base\">\n                {selectedImage.is_public ? (\n                  <Unlock className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                ) : (\n                  <Lock className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                )}\n                {selectedImage.title || 'Imagen'}\n              </DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-3 sm:space-y-4\">\n              <img\n                src={selectedImage.url}\n                alt={selectedImage.title || 'Imagen'}\n                className=\"w-full max-h-60 sm:max-h-80 lg:max-h-96 object-contain rounded-lg\"\n              />\n              {selectedImage.description && (\n                <p className=\"text-muted-foreground\">{selectedImage.description}</p>\n              )}\n              <div className=\"flex items-center justify-between\">\n                <Badge variant={selectedImage.is_public ? \"default\" : \"secondary\"}>\r\n                  {selectedImage.is_public ? 'Pública' : 'Privada'}\r\n                </Badge>\r\n                {isOwner && (\r\n                  <Button\r\n                    variant=\"destructive\"\r\n                    size=\"sm\"\r\n                    onClick={() => handleDeleteImage(selectedImage.id)}\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                    Eliminar\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ImageCardProps {\r\n  image: ImageUpload;\r\n  isOwner: boolean;\r\n  onView: (image: ImageUpload) => void;\r\n  onDelete: (imageId: string) => void;\r\n}\r\n\r\nfunction ImageCard({ image, isOwner, onView, onDelete }: ImageCardProps) {\r\n  return (\r\n    <Card className=\"overflow-hidden group cursor-pointer hover:shadow-lg transition-shadow\">\r\n      <div className=\"relative aspect-square\" onClick={() => onView(image)}>\r\n        <img\r\n          src={image.url}\r\n          alt={image.title || 'Imagen'}\r\n          className=\"w-full h-full object-cover\"\r\n        />\r\n        \r\n        {/* Overlay con controles */}\r\n        <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\">\r\n          <Button variant=\"secondary\" size=\"sm\">\r\n            <Eye className=\"h-4 w-4 mr-2\" />\r\n            Ver\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Badge de privacidad */}\r\n        <div className=\"absolute top-2 left-2\">\r\n          <Badge variant={image.is_public ? \"default\" : \"secondary\"} className=\"text-xs\">\r\n            {image.is_public ? (\r\n              <Unlock className=\"h-3 w-3 mr-1\" />\r\n            ) : (\r\n              <Lock className=\"h-3 w-3 mr-1\" />\r\n            )}\r\n            {image.is_public ? 'Pública' : 'Privada'}\r\n          </Badge>\r\n        </div>\r\n\r\n        {/* Botón eliminar para propietario */}\r\n        {isOwner && (\r\n          <Button\r\n            variant=\"destructive\"\r\n            size=\"sm\"\r\n            className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity h-8 w-8 p-0\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onDelete(image.id);\r\n            }}\r\n          >\r\n            <Trash2 className=\"h-4 w-4\" />\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Información de la imagen */}\r\n      {image.title && (\r\n        <CardContent className=\"p-3\">\r\n          <p className=\"text-sm font-medium truncate\">{image.title}</p>\r\n          {image.description && (\r\n            <p className=\"text-xs text-muted-foreground truncate mt-1\">\r\n              {image.description}\r\n            </p>\r\n          )}\r\n        </CardContent>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\images\\ImageUpload.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\invitations\\InvitationDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\layout\\ResponsiveLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\matches\\MatchCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\matches\\MatchFilters.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\mobile\\PWAManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\mobile\\TouchGestureManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\ActionButtonsModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\ComingSoonModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\CompatibilityModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\ContentModerationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\EventsModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\FeatureModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\InstallAppModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\PremiumModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\SmartMatchingModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\modals\\SuperLikesModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\navigation\\ResponsiveNavigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\notifications\\NotificationBell.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\notifications\\NotificationCenter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\notifications\\NotificationSystem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\notifications\\PushNotificationSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\performance\\CodeSplittingManager.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\performance\\ImageOptimizer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\performance\\LazyComponentLoader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\premium\\PremiumFeatures.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\premium\\PricingPlans.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\premium\\PrivateMatches.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\premium\\VIPEvents.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\premium\\VirtualGifts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\CoupleCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\CoupleImageGallery.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":95,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":95,"endColumn":19},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":158,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":158,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useRef } from 'react';\r\nimport { X, Image as ImageIcon, Loader2, Users, Eye, EyeOff, Heart } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Label } from '@/components/ui/label';\r\nimport { ProfileImageService, ImageUploadResult } from '@/lib/storage';\r\nimport { cn } from '@/lib/utils';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\ninterface CoupleImage {\r\n  id: string;\r\n  url: string;\r\n  isPublic: boolean;\r\n  uploadedBy: 'partner1' | 'partner2';\r\n  createdAt: string;\r\n  likes?: number;\r\n}\r\n\r\ninterface CoupleImageGalleryProps {\r\n  coupleId: string;\r\n  images: CoupleImage[];\r\n  onImagesUpdated: (images: CoupleImage[]) => void;\r\n  onError: (error: string) => void;\r\n  partnerNames?: {\r\n    partner1: string;\r\n    partner2: string;\r\n  };\r\n  currentPartner: 'partner1' | 'partner2';\r\n  canManageAll?: boolean; // Admin or both partners can manage\r\n  className?: string;\r\n  disabled?: boolean;\r\n  maxImages?: number;\r\n}\r\n\r\nexport const CoupleImageGallery: React.FC<CoupleImageGalleryProps> = ({\r\n  coupleId,\r\n  images,\r\n  onImagesUpdated,\r\n  onError,\r\n  partnerNames = { partner1: 'Pareja 1', partner2: 'Pareja 2' },\r\n  currentPartner,\r\n  canManageAll = false,\r\n  className = '',\r\n  disabled = false,\r\n  maxImages = 10\r\n}) => {\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [newImagePublic, setNewImagePublic] = useState(true);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const { toast } = useToast();\r\n\r\n  const handleFileSelect = async (files: FileList) => {\r\n    if (disabled || isUploading) return;\r\n\r\n    const fileArray = Array.from(files);\r\n    if (images.length + fileArray.length > maxImages) {\r\n      onError(`Máximo ${maxImages} imágenes permitidas en la galería`);\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      const uploadPromises = fileArray.map(async (file, index) => {\r\n        const result: ImageUploadResult = await ProfileImageService.uploadGalleryImage(\r\n          file, \r\n          `${coupleId}_gallery_${Date.now()}_${index}`\r\n        );\r\n\r\n        if (result.success && result.url) {\r\n          const newImage: CoupleImage = {\r\n            id: `${coupleId}_${Date.now()}_${index}`,\r\n            url: result.url,\r\n            isPublic: newImagePublic,\r\n            uploadedBy: currentPartner,\r\n            createdAt: new Date().toISOString(),\r\n            likes: 0\r\n          };\r\n          return newImage;\r\n        } else {\r\n          throw new Error(result.error || 'Error al subir imagen');\r\n        }\r\n      });\r\n\r\n      const newImages = await Promise.all(uploadPromises);\r\n      const updatedImages = [...images, ...newImages];\r\n      onImagesUpdated(updatedImages);\r\n\r\n      toast({\r\n        title: \"Imágenes subidas\",\r\n        description: `${newImages.length} imagen(es) añadida(s) a la galería de pareja`,\r\n      });\r\n\r\n    } catch (error) {\r\n      onError('Error al subir algunas imágenes a la galería');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      handleFileSelect(files);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragActive(false);\r\n    \r\n    const files = e.dataTransfer.files;\r\n    if (files && files.length > 0) {\r\n      handleFileSelect(files);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragActive(true);\r\n  };\r\n\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setDragActive(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!disabled && !isUploading) {\r\n      fileInputRef.current?.click();\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = async (imageId: string) => {\r\n    const imageToRemove = images.find(img => img.id === imageId);\r\n    if (!imageToRemove) return;\r\n\r\n    // Check permissions\r\n    if (!canManageAll && imageToRemove.uploadedBy !== currentPartner) {\r\n      onError('Solo puedes eliminar imágenes que hayas subido tú');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await ProfileImageService.deleteProfileImage(imageToRemove.url);\r\n      if (result.success) {\r\n        const updatedImages = images.filter(img => img.id !== imageId);\r\n        onImagesUpdated(updatedImages);\r\n        \r\n        toast({\r\n          title: \"Imagen eliminada\",\r\n          description: \"La imagen ha sido eliminada de la galería\",\r\n        });\r\n      } else {\r\n        onError(result.error || 'Error al eliminar imagen');\r\n      }\r\n    } catch (error) {\r\n      onError('Error inesperado al eliminar imagen');\r\n    }\r\n  };\r\n\r\n  const handleToggleVisibility = async (imageId: string) => {\r\n    const imageToUpdate = images.find(img => img.id === imageId);\r\n    if (!imageToUpdate) return;\r\n\r\n    // Check permissions\r\n    if (!canManageAll && imageToUpdate.uploadedBy !== currentPartner) {\r\n      onError('Solo puedes cambiar la visibilidad de imágenes que hayas subido tú');\r\n      return;\r\n    }\r\n\r\n    const updatedImages = images.map(img => \r\n      img.id === imageId \r\n        ? { ...img, isPublic: !img.isPublic }\r\n        : img\r\n    );\r\n    \r\n    onImagesUpdated(updatedImages);\r\n    \r\n    toast({\r\n      title: \"Visibilidad actualizada\",\r\n      description: `La imagen ahora es ${imageToUpdate.isPublic ? 'privada' : 'pública'}`,\r\n    });\r\n  };\r\n\r\n  const canManageImage = (image: CoupleImage) => {\r\n    return canManageAll || image.uploadedBy === currentPartner;\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <Users className=\"w-5 h-5 text-purple-600\" />\r\n          <h2 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\r\n            Galería de Pareja\r\n          </h2>\r\n          <span className=\"text-sm text-gray-500\">\r\n            ({images.length}/{maxImages})\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Upload Area */}\r\n      {images.length < maxImages && (\r\n        <div className=\"space-y-4\">\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            multiple\r\n            onChange={handleFileChange}\r\n            className=\"hidden\"\r\n            disabled={disabled || isUploading}\r\n          />\r\n\r\n          <div\r\n            onClick={handleClick}\r\n            onDrop={handleDrop}\r\n            onDragOver={handleDragOver}\r\n            onDragLeave={handleDragLeave}\r\n            className={cn(\r\n              \"border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-all duration-200\",\r\n              dragActive \r\n                ? 'border-purple-500 bg-purple-50 dark:bg-purple-900/20' \r\n                : 'border-gray-300 dark:border-gray-600 hover:border-purple-400 dark:hover:border-purple-500',\r\n              disabled || isUploading ? 'opacity-50 cursor-not-allowed' : ''\r\n            )}\r\n          >\r\n            {isUploading ? (\r\n              <div className=\"flex flex-col items-center gap-3\">\r\n                <Loader2 className=\"w-12 h-12 text-purple-500 animate-spin\" />\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  Subiendo imágenes a la galería...\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex flex-col items-center gap-3\">\r\n                <ImageIcon className=\"w-12 h-12 text-gray-400\" />\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                    Añadir imágenes a la galería de pareja\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                    Haz clic o arrastra imágenes aquí\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                    PNG, JPG, WEBP hasta 5MB cada una\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Privacy Setting for New Images */}\r\n          <div className=\"flex items-center space-x-2 justify-center\">\r\n            <Switch\r\n              id=\"new-image-public\"\r\n              checked={newImagePublic}\r\n              onCheckedChange={setNewImagePublic}\r\n              disabled={disabled || isUploading}\r\n            />\r\n            <Label htmlFor=\"new-image-public\" className=\"text-sm\">\r\n              {newImagePublic ? 'Nuevas imágenes públicas' : 'Nuevas imágenes privadas'}\r\n            </Label>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Image Grid */}\r\n      {images.length > 0 ? (\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n          {images.map((image) => (\r\n            <div key={image.id} className=\"relative group\">\r\n              <img\r\n                src={image.url}\r\n                alt=\"Imagen de pareja\"\r\n                className=\"w-full h-32 object-cover rounded-lg\"\r\n              />\r\n              \r\n              {/* Image Overlay */}\r\n              <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-200 rounded-lg\">\r\n                {/* Image Info */}\r\n                <div className=\"absolute top-2 left-2 flex items-center gap-1\">\r\n                  {image.isPublic ? (\r\n                    <Eye className=\"w-4 h-4 text-white\" />\r\n                  ) : (\r\n                    <EyeOff className=\"w-4 h-4 text-white\" />\r\n                  )}\r\n                  <span className=\"text-xs text-white\">\r\n                    {partnerNames[image.uploadedBy]}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Likes */}\r\n                {image.likes !== undefined && (\r\n                  <div className=\"absolute top-2 right-2 flex items-center gap-1 bg-black/60 rounded-full px-2 py-1\">\r\n                    <Heart className=\"w-3 h-3 text-red-400\" />\r\n                    <span className=\"text-xs text-white\">{image.likes}</span>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Action Buttons */}\r\n                {canManageImage(image) && (\r\n                  <div className=\"absolute bottom-2 right-2 flex gap-1\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"ghost\"\r\n                      className=\"h-8 w-8 p-0 bg-white/20 hover:bg-white/30\"\r\n                      onClick={() => handleToggleVisibility(image.id)}\r\n                      title={image.isPublic ? 'Hacer privada' : 'Hacer pública'}\r\n                    >\r\n                      {image.isPublic ? (\r\n                        <EyeOff className=\"w-4 h-4 text-white\" />\r\n                      ) : (\r\n                        <Eye className=\"w-4 h-4 text-white\" />\r\n                      )}\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"ghost\"\r\n                      className=\"h-8 w-8 p-0 bg-red-500/70 hover:bg-red-500/90\"\r\n                      onClick={() => handleRemoveImage(image.id)}\r\n                      title=\"Eliminar imagen\"\r\n                    >\r\n                      <X className=\"w-4 h-4 text-white\" />\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-12\">\r\n          <ImageIcon className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\r\n          <p className=\"text-gray-500 dark:text-gray-400\">\r\n            Aún no hay imágenes en la galería de pareja\r\n          </p>\r\n          <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-1\">\r\n            Sube algunas fotos para compartir vuestros momentos especiales\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Gallery Info */}\r\n      <div className=\"text-center\">\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n          Las imágenes públicas son visibles para todos. Las privadas requieren solicitud de acceso.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoupleImageGallery;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\CoupleImageUpload.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\CouplePhotoSection.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'partnerColor' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":89,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":89,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useRef } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { Camera, Upload, X, Heart, Star, Plus } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { logger } from '@/lib/logger';\r\n\r\ninterface CouplePhoto {\r\n  id: string;\r\n  url: string;\r\n  partner: 'el' | 'ella';\r\n  isMain: boolean;\r\n  uploadedAt: Date;\r\n}\r\n\r\ninterface CouplePhotoSectionProps {\r\n  photos: CouplePhoto[];\r\n  onPhotoUpload: (file: File, partner: 'el' | 'ella') => Promise<void>;\r\n  onPhotoDelete: (photoId: string) => Promise<void>;\r\n  onSetMainPhoto: (photoId: string, partner: 'el' | 'ella') => Promise<void>;\r\n  isEditable?: boolean;\r\n  maxPhotosPerPartner?: number;\r\n}\r\n\r\nexport const CouplePhotoSection: React.FC<CouplePhotoSectionProps> = ({\r\n  photos,\r\n  onPhotoUpload,\r\n  onPhotoDelete,\r\n  onSetMainPhoto,\r\n  isEditable = false,\r\n  maxPhotosPerPartner = 6\r\n}) => {\r\n  const [uploading, setUploading] = useState<'el' | 'ella' | null>(null);\r\n  const [selectedPhoto, setSelectedPhoto] = useState<string | null>(null);\r\n  const fileInputElRef = useRef<HTMLInputElement>(null);\r\n  const fileInputEllaRef = useRef<HTMLInputElement>(null);\r\n\r\n  const getPhotosByPartner = (partner: 'el' | 'ella') => {\r\n    return photos.filter(photo => photo.partner === partner);\r\n  };\r\n\r\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>, partner: 'el' | 'ella') => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    // Validar tipo de archivo\r\n    if (!file.type.startsWith('image/')) {\r\n      alert('Por favor selecciona un archivo de imagen válido');\r\n      return;\r\n    }\r\n\r\n    // Validar tamaño (máximo 5MB)\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      alert('La imagen debe ser menor a 5MB');\r\n      return;\r\n    }\r\n\r\n    // Verificar límite de fotos\r\n    const currentPhotos = getPhotosByPartner(partner);\r\n    if (currentPhotos.length >= maxPhotosPerPartner) {\r\n      alert(`Máximo ${maxPhotosPerPartner} fotos por persona`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(partner);\r\n      await onPhotoUpload(file, partner);\r\n    } catch (error) {\r\n      logger.error('Error uploading photo:', { error: error instanceof Error ? error.message : String(error) });\r\n      alert('Error al subir la foto. Inténtalo de nuevo.');\r\n    } finally {\r\n      setUploading(null);\r\n      // Limpiar input\r\n      event.target.value = '';\r\n    }\r\n  };\r\n\r\n  const handleUploadClick = (partner: 'el' | 'ella') => {\r\n    if (partner === 'el') {\r\n      fileInputElRef.current?.click();\r\n    } else {\r\n      fileInputEllaRef.current?.click();\r\n    }\r\n  };\r\n\r\n  const PhotoGrid: React.FC<{ partner: 'el' | 'ella' }> = ({ partner }) => {\r\n    const partnerPhotos = getPhotosByPartner(partner);\r\n    const partnerColor = partner === 'el' ? 'blue' : 'pink';\r\n    const partnerLabel = partner === 'el' ? 'Él' : 'Ella';\r\n\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {/* Header de la sección */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className={`w-3 h-3 rounded-full ${partner === 'el' ? 'bg-blue-500' : 'bg-pink-500'}`} />\r\n            <h3 className={`text-lg font-semibold ${partner === 'el' ? 'text-blue-600' : 'text-pink-600'}`}>\r\n              Fotos de {partnerLabel}\r\n            </h3>\r\n            <Badge variant=\"outline\" className=\"text-xs\">\r\n              {partnerPhotos.length}/{maxPhotosPerPartner}\r\n            </Badge>\r\n          </div>\r\n\r\n          {isEditable && partnerPhotos.length < maxPhotosPerPartner && (\r\n            <Button\r\n              onClick={() => handleUploadClick(partner)}\r\n              disabled={uploading === partner}\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              className={`${partner === 'el' ? 'border-blue-300 hover:bg-blue-50' : 'border-pink-300 hover:bg-pink-50'}`}\r\n            >\r\n              {uploading === partner ? (\r\n                <motion.div\r\n                  animate={{ rotate: 360 }}\r\n                  transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\r\n                  className=\"w-4 h-4\"\r\n                >\r\n                  <Upload className=\"w-4 h-4\" />\r\n                </motion.div>\r\n              ) : (\r\n                <>\r\n                  <Plus className=\"w-4 h-4 mr-1\" />\r\n                  Agregar\r\n                </>\r\n              )}\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Grid de fotos */}\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\r\n          <AnimatePresence>\r\n            {partnerPhotos.map((photo, index) => (\r\n              <motion.div\r\n                key={photo.id}\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                exit={{ opacity: 0, scale: 0.8 }}\r\n                transition={{ duration: 0.3, delay: index * 0.1 }}\r\n                className=\"relative group\"\r\n              >\r\n                <Card className=\"overflow-hidden border-2 border-transparent hover:border-gray-200 transition-all duration-300\">\r\n                  <div className=\"relative aspect-square\">\r\n                    <img\r\n                      src={photo.url}\r\n                      alt={`Foto de ${partnerLabel} ${index + 1}`}\r\n                      className=\"w-full h-full object-cover cursor-pointer transition-transform duration-300 group-hover:scale-105\"\r\n                      onClick={() => setSelectedPhoto(photo.id)}\r\n                    />\r\n                    \r\n                    {/* Badge de foto principal */}\r\n                    {photo.isMain && (\r\n                      <div className=\"absolute top-2 left-2\">\r\n                        <Badge className={`${partner === 'el' ? 'bg-blue-500' : 'bg-pink-500'} text-white`}>\r\n                          <Star className=\"w-3 h-3 mr-1\" />\r\n                          Principal\r\n                        </Badge>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Overlay con acciones */}\r\n                    {isEditable && (\r\n                      <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-40 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100\">\r\n                        <div className=\"flex gap-2\">\r\n                          {!photo.isMain && (\r\n                            <Button\r\n                              size=\"sm\"\r\n                              variant=\"secondary\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                onSetMainPhoto(photo.id, partner);\r\n                              }}\r\n                              className=\"bg-white bg-opacity-90 hover:bg-opacity-100\"\r\n                            >\r\n                              <Star className=\"w-4 h-4\" />\r\n                            </Button>\r\n                          )}\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"destructive\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              onPhotoDelete(photo.id);\r\n                            }}\r\n                            className=\"bg-red-500 bg-opacity-90 hover:bg-opacity-100\"\r\n                          >\r\n                            <X className=\"w-4 h-4\" />\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Card>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n\r\n          {/* Placeholder para agregar foto */}\r\n          {isEditable && partnerPhotos.length < maxPhotosPerPartner && (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: partnerPhotos.length * 0.1 }}\r\n            >\r\n              <Card \r\n                className={`aspect-square border-2 border-dashed cursor-pointer transition-all duration-300 hover:border-solid ${\r\n                  partner === 'el' \r\n                    ? 'border-blue-300 hover:border-blue-400 hover:bg-blue-50' \r\n                    : 'border-pink-300 hover:border-pink-400 hover:bg-pink-50'\r\n                }`}\r\n                onClick={() => handleUploadClick(partner)}\r\n              >\r\n                <div className=\"w-full h-full flex flex-col items-center justify-center text-gray-400 hover:text-gray-600\">\r\n                  <Camera className=\"w-8 h-8 mb-2\" />\r\n                  <span className=\"text-sm text-center px-2\">\r\n                    Agregar foto de {partnerLabel}\r\n                  </span>\r\n                </div>\r\n              </Card>\r\n            </motion.div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Mensaje cuando no hay fotos */}\r\n        {partnerPhotos.length === 0 && !isEditable && (\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            <Camera className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n            <p>No hay fotos de {partnerLabel} aún</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Inputs ocultos para subir archivos */}\r\n      <input\r\n        ref={fileInputElRef}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => handleFileSelect(e, 'el')}\r\n        className=\"hidden\"\r\n      />\r\n      <input\r\n        ref={fileInputEllaRef}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => handleFileSelect(e, 'ella')}\r\n        className=\"hidden\"\r\n      />\r\n\r\n      {/* Sección de fotos de Él */}\r\n      <PhotoGrid partner=\"el\" />\r\n\r\n      {/* Separador */}\r\n      <div className=\"relative\">\r\n        <div className=\"absolute inset-0 flex items-center\">\r\n          <div className=\"w-full border-t border-gray-200\" />\r\n        </div>\r\n        <div className=\"relative flex justify-center text-sm\">\r\n          <span className=\"px-4 bg-white text-gray-500 flex items-center gap-2\">\r\n            <Heart className=\"w-4 h-4 text-red-400\" />\r\n            Pareja\r\n            <Heart className=\"w-4 h-4 text-red-400\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sección de fotos de Ella */}\r\n      <PhotoGrid partner=\"ella\" />\r\n\r\n      {/* Modal de vista previa de foto */}\r\n      <AnimatePresence>\r\n        {selectedPhoto && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4\"\r\n            onClick={() => setSelectedPhoto(null)}\r\n          >\r\n            <motion.div\r\n              initial={{ scale: 0.8 }}\r\n              animate={{ scale: 1 }}\r\n              exit={{ scale: 0.8 }}\r\n              className=\"relative max-w-4xl max-h-full\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <img\r\n                src={photos.find(p => p.id === selectedPhoto)?.url}\r\n                alt=\"Vista previa\"\r\n                className=\"max-w-full max-h-full object-contain rounded-lg\"\r\n              />\r\n              <Button\r\n                variant=\"secondary\"\r\n                size=\"sm\"\r\n                className=\"absolute top-4 right-4\"\r\n                onClick={() => setSelectedPhoto(null)}\r\n              >\r\n                <X className=\"w-4 h-4\" />\r\n              </Button>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CouplePhotoSection;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\CoupleProfileCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\CoupleProfileHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\Gallery.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\ImageUpload.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":65,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":65,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":117,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":117,"endColumn":20}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useRef } from 'react';\r\nimport { Upload, X, Image as ImageIcon, Loader2 } from 'lucide-react';\r\nimport { ProfileImageService, ImageUploadResult } from '@/lib/storage';\r\n\r\ninterface ImageUploadProps {\r\n  onImageUploaded: (url: _string) => void;\r\n  onError: (error: _string) => void;\r\n  userId: string;\r\n  currentImage?: string;\r\n  type?: 'profile' | 'gallery';\r\n  className?: string;\r\n  disabled?: boolean;\r\n  // New props for couple profile support\r\n  profileType?: 'single' | 'couple';\r\n  partnerName?: string;\r\n}\r\n\r\nexport const ImageUpload: React.FC<ImageUploadProps> = ({\r\n  onImageUploaded,\r\n  onError,\r\n  userId,\r\n  currentImage,\r\n  type = 'profile',\r\n  className = '',\r\n  disabled = false,\r\n  profileType = 'single',\r\n  partnerName\r\n}) => {\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFileSelect = async (__file: any) => {\r\n    if (disabled || isUploading) return;\r\n\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      // Check if user is in demo mode\r\n      const isDemoMode = localStorage.getItem('demo_authenticated') === 'true';\r\n      \r\n      if (isDemoMode) {\r\n        // Simulate upload for demo users\r\n        await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate upload time\r\n        \r\n        // Create a temporary URL for the uploaded file\r\n        const tempUrl = URL.createObjectURL(file);\r\n        onImageUploaded(tempUrl);\r\n        return;\r\n      }\r\n\r\n      let result: ImageUploadResult;\r\n      \r\n      if (type === 'profile') {\r\n        result = await ProfileImageService.uploadProfileImage(file, userId);\r\n      } else {\r\n        result = await ProfileImageService.uploadGalleryImage(file, userId);\r\n      }\r\n\r\n      if (result.success && result.url) {\r\n        onImageUploaded(result.url);\r\n      } else {\r\n        onError(result.error || 'Error al subir imagen');\r\n      }\r\n    } catch (_error) {\r\n      onError('Error inesperado al subir imagen');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (__e: any) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      handleFileSelect(file);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (__e: any) => {\r\n    e.preventDefault();\r\n    setDragActive(false);\r\n    \r\n    const file = e.dataTransfer.files?.[0];\r\n    if (file) {\r\n      handleFileSelect(file);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (__e: any) => {\r\n    e.preventDefault();\r\n    setDragActive(true);\r\n  };\r\n\r\n  const handleDragLeave = (__e: any) => {\r\n    e.preventDefault();\r\n    setDragActive(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!disabled && !isUploading) {\r\n      fileInputRef.current?.click();\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = async () => {\r\n    if (!currentImage || disabled || isUploading) return;\r\n\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      const result = await ProfileImageService.deleteProfileImage(currentImage);\r\n      if (result.success) {\r\n        onImageUploaded(''); // Imagen vacía\r\n      } else {\r\n        onError(result.error || 'Error al eliminar imagen');\r\n      }\r\n    } catch (_error) {\r\n      onError('Error inesperado al eliminar imagen');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      <input\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n        className=\"hidden\"\r\n        disabled={disabled || isUploading}\r\n      />\r\n\r\n      {currentImage ? (\r\n        // Mostrar imagen actual\r\n        <div className=\"relative group\">\r\n          <img\r\n            src={currentImage}\r\n            alt={profileType === 'couple' && partnerName ? `Imagen de ${partnerName}` : \"Imagen de perfil\"}\r\n            className=\"w-full h-full object-cover rounded-lg\"\r\n          />\r\n          \r\n          {/* Overlay con acciones */}\r\n          <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-200 rounded-lg flex items-center justify-center\">\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                onClick={handleClick}\r\n                disabled={disabled || isUploading}\r\n                className=\"p-2 bg-white/20 hover:bg-white/30 rounded-full transition-colors\"\r\n                title=\"Cambiar imagen\"\r\n              >\r\n                {isUploading ? (\r\n                  <Loader2 className=\"w-5 h-5 text-white animate-spin\" />\r\n                ) : (\r\n                  <Upload className=\"w-5 h-5 text-white\" />\r\n                )}\r\n              </button>\r\n              \r\n              <button\r\n                onClick={handleRemoveImage}\r\n                disabled={disabled || isUploading}\r\n                className=\"p-2 bg-red-500/70 hover:bg-red-500/90 rounded-full transition-colors\"\r\n                title=\"Eliminar imagen\"\r\n              >\r\n                <X className=\"w-5 h-5 text-white\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        // Área de subida cuando no hay imagen\r\n        <div\r\n          onClick={handleClick}\r\n          onDrop={handleDrop}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          className={`\r\n            border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-all duration-200\r\n            ${dragActive \r\n              ? 'border-purple-500 bg-purple-50 dark:bg-purple-900/20' \r\n              : 'border-gray-300 dark:border-gray-600 hover:border-purple-400 dark:hover:border-purple-500'\r\n            }\r\n            ${disabled || isUploading ? 'opacity-50 cursor-not-allowed' : ''}\r\n          `}\r\n        >\r\n          {isUploading ? (\r\n            <div className=\"flex flex-col items-center gap-3\">\r\n              <Loader2 className=\"w-12 h-12 text-purple-500 animate-spin\" />\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Subiendo imagen...\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex flex-col items-center gap-3\">\r\n              <ImageIcon className=\"w-12 h-12 text-gray-400\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  Haz clic o arrastra una imagen aquí\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                  PNG, JPG, WEBP hasta {type === 'profile' ? '3MB' : '5MB'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\MainProfileCard.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'showQuickActions' is assigned a value but never used. Allowed unused args must match /^_/u.","line":54,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":54,"endColumn":19},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":60,"column":12,"nodeType":null,"messageId":"unusedVar","endLine":60,"endColumn":18},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'isOnline' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":65,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":65,"endColumn":17},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'lastSeen' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":66,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":66,"endColumn":17},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'onlineStatus' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":67,"column":72,"nodeType":null,"messageId":"unusedVar","endLine":67,"endColumn":84},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'e' is defined but never used. Allowed unused args must match /^_/u.","line":122,"column":23,"nodeType":null,"messageId":"unusedVar","endLine":122,"endColumn":24}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Heart, MapPin, Verified, Star, X, Zap } from \"lucide-react\";\r\nimport { useUserOnlineStatus } from \"@/hooks/useOnlineStatus\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { logger } from '@/lib/logger';\r\nimport { useProfileTheme, Gender, ProfileType, Theme } from '@/hooks/useProfileTheme';\r\nimport { cn } from '@/lib/utils';\r\nimport { validateProfileCard } from '@/lib/zod-schemas';\r\n\r\ninterface ProfileCardProps {\r\n  profile: {\r\n    id: string | number;\r\n    name: string;\r\n    age?: number;\r\n    location?: string;\r\n    image?: string;\r\n    interests?: string[];\r\n    bio?: string;\r\n    isOnline?: boolean;\r\n    lastSeen?: string;\r\n    verified?: boolean;\r\n    rating?: number;\r\n    // Propiedades para personalización visual\r\n    gender?: Gender;\r\n    partnerGender?: Gender;\r\n    accountType?: ProfileType;\r\n    theme?: Theme;\r\n    // Propiedades específicas para parejas\r\n    couple_name?: string;\r\n    partner1_first_name?: string;\r\n    partner1_age?: number;\r\n    partner2_first_name?: string;\r\n    partner2_age?: number;\r\n  };\r\n  onLike?: (id: _string) => void;\r\n  onSuperLike?: (profile: ProfileCardProps['profile']) => void;\r\n  onOpenModal?: () => void;\r\n  // Props de configuración\r\n  useThemeBackground?: boolean;\r\n  variant?: 'single' | 'couple' | 'discover' | 'animated';\r\n  showQuickActions?: boolean;\r\n  showViewProfile?: boolean;\r\n}\r\n\r\nexport const MainProfileCard = ({ \r\n  profile, \r\n  onLike, \r\n  onSuperLike, \r\n  onOpenModal, \r\n  useThemeBackground = false,\r\n  variant = 'single',\r\n  showQuickActions = true,\r\n  showViewProfile = true \r\n}: ProfileCardProps) => {\r\n  // Validar props con Zod\r\n  try {\r\n    validateProfileCard(profile);\r\n  } catch (_error) {\r\n    logger.error('❌ Error validando ProfileCard:', { error });\r\n  }\r\n  const { getUserOnlineStatus, getLastSeenTime } = useUserOnlineStatus();\r\n  const profileId = String(profile.id);\r\n  const isOnline = profile.isOnline ?? getUserOnlineStatus(profileId);\r\n  const lastSeen = profile.lastSeen ?? getLastSeenTime(profileId);\r\n  const { id, name, age, location, interests, image, rating, isOnline: onlineStatus = false, gender = 'male', partnerGender, accountType = 'single', theme } = profile;\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const [imageError, setImageError] = useState(false);\r\n\r\n  // Configurar géneros para el hook de tema\r\n  const genders: Gender[] = accountType === 'couple' && partnerGender \r\n    ? [gender, partnerGender] \r\n    : [gender];\r\n  \r\n  // Obtener configuración de tema\r\n  const themeConfig = useProfileTheme(accountType, genders, theme);\r\n\r\n  const handleViewProfile = () => {\r\n    navigate(`/profile/${id}`);\r\n  };\r\n\r\n  const handleLike = (__e: any) => {\r\n    e.stopPropagation();\r\n    if (onLike) onLike(String(id));\r\n    if (onOpenModal) onOpenModal();\r\n  };\r\n\r\n  const handleSuperLike = (__e: any) => {\r\n    e.stopPropagation();\r\n    if (onSuperLike) onSuperLike(profile);\r\n    if (onOpenModal) onOpenModal();\r\n  };\r\n\r\n  const handleDislike = (__e: any) => {\r\n    e.stopPropagation();\r\n    if (onOpenModal) onOpenModal();\r\n    toast({\r\n      title: \"Perfil omitido\",\r\n      description: `Has pasado el perfil de ${variant === 'couple' ? profile.couple_name || name : name}`,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={cn(\r\n        \"group relative rounded-2xl overflow-hidden shadow-soft hover:shadow-glow transition-all duration-500 transform hover:scale-105 cursor-pointer\",\r\n        useThemeBackground \r\n          ? `${themeConfig.backgroundClass} ${themeConfig.textClass}` \r\n          : \"bg-card-gradient\"\r\n      )}\r\n      onClick={showViewProfile ? _handleViewProfile : undefined}\r\n    >\r\n      {/* Image Container */}\r\n      <div className=\"relative aspect-[3/4] overflow-hidden\">\r\n        {!imageError && image ? (\r\n          <img \r\n            src={image} \r\n            alt={name}\r\n            className=\"w-full h-full object-cover transition-transform duration-700 group-hover:scale-110\"\r\n            onError={(e) => {\r\n              logger.info('Error loading image:', { image });\r\n              setImageError(true);\r\n            }}\r\n            onLoad={() => logger.info('Image loaded successfully:', { image })}\r\n          />\r\n        ) : (\r\n          <div className={cn(\r\n            \"w-full h-full flex items-center justify-center\",\r\n            useThemeBackground \r\n              ? themeConfig.backgroundClass \r\n              : \"bg-gradient-to-br from-purple-400 to-pink-400\"\r\n          )}>\r\n            <div className={cn(\r\n              \"text-center\",\r\n              useThemeBackground ? themeConfig.textClass : \"text-white\"\r\n            )}>\r\n              <div className=\"text-6xl mb-2\">👤</div>\r\n              <p className=\"text-sm opacity-80\">Imagen no disponible</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Online Status */}\r\n        <div className=\"absolute top-2 sm:top-4 left-2 sm:left-4 flex items-center space-x-1 sm:space-x-2 bg-black/60 backdrop-blur-sm rounded-full px-2 sm:px-3 py-1\">\r\n          <div className=\"w-1.5 h-1.5 sm:w-2 sm:h-2 bg-green-500 rounded-full animate-pulse\" />\r\n          <span className=\"text-[10px] sm:text-xs font-medium text-white\">En línea</span>\r\n        </div>\r\n\r\n        {/* Rating */}\r\n        <div className=\"absolute top-2 sm:top-4 right-2 sm:right-4 flex items-center space-x-1 bg-black/60 backdrop-blur-sm rounded-full px-2 sm:px-3 py-1\">\r\n          <Star className=\"w-2.5 h-2.5 sm:w-3 sm:h-3 text-yellow-400 fill-current\" />\r\n          <span className=\"text-[10px] sm:text-xs font-medium text-white\">{rating || 4.9}</span>\r\n        </div>\r\n\r\n        {/* Gradient Overlay */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\" />\r\n        \r\n        {/* Quick Actions */}\r\n        <div className=\"absolute bottom-2 sm:bottom-4 left-2 sm:left-4 right-2 sm:right-4 flex justify-center items-end opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\r\n          <div className=\"flex space-x-1 sm:space-x-2\">\r\n            <Button \r\n              size=\"icon\" \r\n              variant=\"ghost\" \r\n              className=\"w-8 h-8 sm:w-10 sm:h-10 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white border-none\"\r\n              onClick={handleDislike}\r\n            >\r\n              <X className=\"w-4 h-4 sm:w-5 sm:h-5\" strokeWidth={2.5} />\r\n            </Button>\r\n            <Button \r\n              size=\"icon\" \r\n              variant=\"ghost\" \r\n              className=\"w-8 h-8 sm:w-10 sm:h-10 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white border-none\"\r\n              onClick={handleSuperLike}\r\n            >\r\n              <Zap className=\"w-4 h-4 sm:w-5 sm:h-5\" strokeWidth={2.5} />\r\n            </Button>\r\n            <Button \r\n              size=\"icon\" \r\n              variant=\"ghost\" \r\n              className=\"w-8 h-8 sm:w-10 sm:h-10 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white border-none\"\r\n              onClick={handleLike}\r\n            >\r\n              <Heart className=\"w-4 h-4 sm:w-5 sm:h-5\" strokeWidth={2.5} />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Verification Badge */}\r\n        {profile.verified && (\r\n          <div className=\"absolute bottom-12 sm:bottom-16 left-2 sm:left-4 bg-blue-500 text-white px-2 py-1 rounded-full text-[10px] sm:text-xs font-medium flex items-center gap-1\">\r\n            <Verified className=\"h-2.5 w-2.5 sm:h-3 sm:w-3\" />\r\n            <span className=\"hidden sm:inline\">Verificado</span>\r\n            <span className=\"sm:hidden\">✓</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Card Footer */}\r\n      <div className=\"p-4\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <h3 className={cn(\r\n            \"text-base sm:text-lg font-semibold group-hover:text-primary transition-colors truncate\",\r\n            useThemeBackground ? themeConfig.textClass : \"text-gray-800\"\r\n          )}>\r\n            {name}, {age}\r\n          </h3>\r\n          <div className={cn(\r\n            \"flex items-center space-x-1\",\r\n            useThemeBackground ? themeConfig.accentClass : \"text-gray-600\"\r\n          )}>\r\n            <MapPin className=\"w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0\" />\r\n            <span className=\"text-xs sm:text-sm truncate\">{location}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Interests */}\r\n        <div className=\"flex flex-wrap gap-1 sm:gap-2 mb-4\">\r\n          {interests?.slice(0, 3).map((interest: string, index: _number) => (\r\n            <span \r\n              key={index}\r\n              className=\"px-2 sm:px-3 py-1 bg-purple-100 text-purple-700 text-[10px] sm:text-xs rounded-full transition-colors hover:bg-purple-200 truncate max-w-[80px] sm:max-w-none\"\r\n            >\r\n              {interest}\r\n            </span>\r\n          ))}\r\n          {interests && interests.length > 3 && (\r\n            <span className=\"px-2 sm:px-3 py-1 bg-gray-100 text-gray-600 text-[10px] sm:text-xs rounded-full\">\r\n              +{interests.length - 3}\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex space-x-2\">\r\n          <Button \r\n            variant=\"outline\" \r\n            size=\"sm\" \r\n            className=\"flex-1 bg-background border-border text-gray-600 hover:bg-muted hover:text-gray-800 font-semibold\"\r\n            onClick={handleDislike}\r\n          >\r\n            <X className=\"w-4 h-4 sm:w-5 sm:h-5 mr-1 sm:mr-2\" strokeWidth={2.5} />\r\n            <span className=\"hidden sm:inline\">Pasar</span>\r\n            <span className=\"sm:hidden\">✕</span>\r\n          </Button>\r\n          <Button variant=\"love\" size=\"sm\" className=\"flex-1\" onClick={handleLike} disabled={!onLike}>\r\n            <Heart className=\"w-4 h-4 sm:w-5 sm:h-5 mr-1 sm:mr-2\" strokeWidth={2.5} />\r\n            <span className=\"hidden sm:inline\">Me Gusta</span>\r\n            <span className=\"sm:hidden\">♥</span>\r\n          </Button>\r\n        </div>\r\n        \r\n        {/* View Profile Button */}\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleViewProfile();\r\n          }}\r\n          className=\"w-full mt-2 text-gray-600 hover:text-gray-800 transition-colors text-xs sm:text-sm py-2 hover:bg-gray-100 rounded-md font-medium\"\r\n        >\r\n          Ver Perfil Completo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export alias for backward compatibility\r\nexport { MainProfileCard as ProfileCard };","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\PrivateImageGallery.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\PrivateImageRequest.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'isOpen' is defined but never used. Allowed unused args must match /^_/u.","line":21,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":9},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'onClose' is defined but never used. Allowed unused args must match /^_/u.","line":22,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":22,"endColumn":10}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { EyeOff, Lock, Send, X } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { logger } from '@/lib/logger';\r\n\r\ninterface PrivateImageRequestProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  profileId: string;\r\n  profileName: string;\r\n  profileType: 'single' | 'couple';\r\n  onRequestSent?: () => void;\r\n  onCancel?: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const PrivateImageRequest: React.FC<PrivateImageRequestProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  profileId,\r\n  profileName,\r\n  profileType = 'single',\r\n  onRequestSent,\r\n  onCancel,\r\n  className = ''\r\n}) => {\r\n  const [message, setMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  const handleSendRequest = async () => {\r\n    if (isLoading) return;\r\n\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      // Simular envío de solicitud (en producción sería una llamada a la API)\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Log de la solicitud\r\n      logger.info('Solicitud de acceso a imágenes privadas enviada', {\r\n        profileId,\r\n        profileName,\r\n        profileType,\r\n        message: message.trim() || 'Sin mensaje personalizado'\r\n      });\r\n\r\n      toast({\r\n        title: \"Solicitud enviada\",\r\n        description: `Tu solicitud de acceso a las imágenes privadas de ${profileName} ha sido enviada.`,\r\n      });\r\n\r\n      onRequestSent?.();\r\n    } catch (error) {\r\n      logger.error('Error enviando solicitud de acceso', { error });\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"No se pudo enviar la solicitud. Inténtalo de nuevo.\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={`bg-white/10 backdrop-blur-md border-white/20 shadow-glow ${className}`}>\r\n      <CardContent className=\"p-6\">\r\n        <div className=\"text-center mb-6\">\r\n          <div className=\"w-16 h-16 mx-auto mb-4 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\r\n            <Lock className=\"h-8 w-8 text-white\" />\r\n          </div>\r\n          <h3 className=\"text-lg font-semibold text-white mb-2\">\r\n            Imágenes Privadas\r\n          </h3>\r\n          <p className=\"text-sm text-white/80\">\r\n            {profileName} tiene imágenes privadas. Envía una solicitud para acceder a ellas.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-white mb-2\">\r\n              Mensaje personalizado (opcional)\r\n            </label>\r\n            <Textarea\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n              placeholder=\"Escribe un mensaje para acompañar tu solicitud...\"\r\n              rows={3}\r\n              className=\"resize-none bg-white/20 border-white/30 text-white placeholder:text-white/70\"\r\n              maxLength={200}\r\n            />\r\n            <p className=\"text-xs text-white/60 mt-1\">\r\n              {message.length}/200 caracteres\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"flex gap-3\">\r\n            <Button\r\n              onClick={handleSendRequest}\r\n              disabled={isLoading}\r\n              className=\"flex-1 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white\"\r\n            >\r\n              <Send className=\"h-4 w-4 mr-2\" />\r\n              {isLoading ? 'Enviando...' : 'Enviar Solicitud'}\r\n            </Button>\r\n            \r\n            {onCancel && (\r\n              <Button\r\n                onClick={onCancel}\r\n                variant=\"outline\"\r\n                className=\"border-white/30 text-white hover:bg-white/10\"\r\n              >\r\n                <X className=\"h-4 w-4\" />\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 p-4 bg-white/5 rounded-lg border border-white/10\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <EyeOff className=\"h-5 w-5 text-purple-400 mt-0.5 flex-shrink-0\" />\r\n            <div className=\"text-xs text-white/80\">\r\n              <p className=\"font-medium mb-1\">Política de Privacidad</p>\r\n              <p>\r\n                Las imágenes privadas son contenido exclusivo que requiere autorización. \r\n                El usuario puede aceptar o rechazar tu solicitud. Respeta siempre las decisiones \r\n                de otros miembros de la comunidad.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrivateImageRequest;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\ProfileNavTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\ProfileNavigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\ProfileStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\ProfileTabs.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'singleProfile' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":268,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":268,"endColumn":26},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'coupleProfile' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":344,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":344,"endColumn":26}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { \r\n  User, \r\n  Users, \r\n  Heart, \r\n  MessageCircle, \r\n  Image as ImageIcon, \r\n  Settings, \r\n  MapPin,\r\n  Star,\r\n  Eye,\r\n  Calendar,\r\n  Grid3X3,\r\n  Upload,\r\n  Trash2\r\n} from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ntype ProfileType = 'single' | 'couple';\r\n\r\ninterface SingleProfile {\r\n  id?: string;\r\n  first_name?: string;\r\n  last_name?: string;\r\n  age?: number;\r\n  bio?: string;\r\n  gender?: string;\r\n  location?: string;\r\n  likes?: number;\r\n  matches?: number;\r\n  views?: number;\r\n  interests?: string[] | null;\r\n}\r\n\r\ninterface CoupleProfile {\r\n  id: string;\r\n  couple_name: string;\r\n  partner1_first_name: string;\r\n  partner1_last_name: string;\r\n  partner1_age: number;\r\n  partner1_bio: string;\r\n  partner1_gender: string;\r\n  partner2_first_name: string;\r\n  partner2_last_name: string;\r\n  partner2_age: number;\r\n  partner2_bio: string;\r\n  partner2_gender: string;\r\n  location?: string;\r\n  interests?: string[];\r\n  couple_bio?: string;\r\n  is_verified?: boolean;\r\n  is_premium?: boolean;\r\n  couple_images?: any[];\r\n  likes?: number;\r\n  matches?: number;\r\n  views?: number;\r\n}\r\n\r\ninterface ProfileTabsProps {\r\n  profileType: ProfileType;\r\n  profile: SingleProfile | CoupleProfile;\r\n  onEditProfile?: () => void;\r\n  onMessage?: () => void;\r\n  onLike?: () => void;\r\n  isOwnProfile?: boolean;\r\n  className?: string;\r\n}\r\n\r\ntype TabType = 'overview' | 'gallery' | 'stats' | 'individual';\r\n\r\nexport const ProfileTabs: React.FC<ProfileTabsProps> = ({\r\n  profileType,\r\n  profile,\r\n  onEditProfile,\r\n  onMessage,\r\n  onLike,\r\n  isOwnProfile = false,\r\n  className = ''\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState<TabType>('overview');\r\n\r\n  const tabs = [\r\n    {\r\n      id: 'overview' as TabType,\r\n      label: 'Información',\r\n      icon: profileType === 'single' ? User : Users,\r\n      available: true\r\n    },\r\n    {\r\n      id: 'gallery' as TabType,\r\n      label: 'Galería',\r\n      icon: ImageIcon,\r\n      available: true\r\n    },\r\n    {\r\n      id: 'stats' as TabType,\r\n      label: 'Estadísticas',\r\n      icon: Star,\r\n      available: true\r\n    },\r\n    {\r\n      id: 'individual' as TabType,\r\n      label: 'Individual',\r\n      icon: User,\r\n      available: profileType === 'couple'\r\n    }\r\n  ].filter(tab => tab.available);\r\n\r\n  const renderTabContent = () => {\r\n    switch (activeTab) {\r\n      case 'overview':\r\n        return renderOverviewTab();\r\n      case 'gallery':\r\n        return renderGalleryTab();\r\n      case 'stats':\r\n        return renderStatsTab();\r\n      case 'individual':\r\n        return renderIndividualTab();\r\n      default:\r\n        return renderOverviewTab();\r\n    }\r\n  };\r\n\r\n  const renderOverviewTab = () => {\r\n    if (profileType === 'single') {\r\n      const singleProfile = profile as SingleProfile;\r\n      return (\r\n        <div className=\"space-y-6\">\r\n          {/* Basic Info */}\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-white flex items-center gap-2\">\r\n                <User className=\"w-5 h-5\" />\r\n                Información Personal\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <p className=\"text-sm text-white/70\">Nombre</p>\r\n                  <p className=\"font-medium\">{singleProfile.first_name} {singleProfile.last_name}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-white/70\">Edad</p>\r\n                  <p className=\"font-medium\">{singleProfile.age} años</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-white/70\">Género</p>\r\n                  <p className=\"font-medium capitalize\">{(singleProfile as any).gender || 'No especificado'}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-white/70\">Ubicación</p>\r\n                  <p className=\"font-medium flex items-center gap-1\">\r\n                    <MapPin className=\"w-4 h-4\" />\r\n                    {singleProfile.location || 'No especificada'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              {singleProfile.bio && (\r\n                <div>\r\n                  <p className=\"text-sm text-white/70 mb-2\">Biografía</p>\r\n                  <p className=\"text-white/90 leading-relaxed\">{singleProfile.bio}</p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Interests */}\r\n          {singleProfile.interests && singleProfile.interests.length > 0 && (\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-white\">Intereses</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {singleProfile.interests.map((interest, index) => (\r\n                    <Badge \r\n                      key={index} \r\n                      variant=\"secondary\" \r\n                      className=\"bg-gradient-to-r from-pink-500/20 to-purple-600/20 text-white border-pink-400/30\"\r\n                    >\r\n                      {interest}\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      const coupleProfile = profile as CoupleProfile;\r\n      return (\r\n        <div className=\"space-y-6\">\r\n          {/* Couple Info */}\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-white flex items-center gap-2\">\r\n                <Users className=\"w-5 h-5\" />\r\n                Información de Pareja\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-xl font-bold mb-2\">{coupleProfile.couple_name}</h3>\r\n                <p className=\"text-white/90 flex items-center justify-center gap-1\">\r\n                  <MapPin className=\"w-4 h-4\" />\r\n                  {coupleProfile.location || 'Ubicación no especificada'}\r\n                </p>\r\n              </div>\r\n              \r\n              {coupleProfile.couple_bio && (\r\n                <div className=\"bg-white/10 rounded-lg p-4\">\r\n                  <p className=\"text-sm text-white/70 mb-2\">Sobre nosotros</p>\r\n                  <p className=\"text-white/90 leading-relaxed\">{coupleProfile.couple_bio}</p>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div className=\"text-center p-4 bg-pink-500/20 rounded-lg border border-pink-400/30\">\r\n                  <h4 className=\"font-semibold text-white mb-1\">{coupleProfile.partner1_first_name}</h4>\r\n                  <p className=\"text-sm text-white/80\">{coupleProfile.partner1_age} años</p>\r\n                  <p className=\"text-xs text-white/70 capitalize\">{coupleProfile.partner1_gender}</p>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-purple-500/20 rounded-lg border border-purple-400/30\">\r\n                  <h4 className=\"font-semibold text-white mb-1\">{coupleProfile.partner2_first_name}</h4>\r\n                  <p className=\"text-sm text-white/80\">{coupleProfile.partner2_age} años</p>\r\n                  <p className=\"text-xs text-white/70 capitalize\">{coupleProfile.partner2_gender}</p>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Interests */}\r\n          {coupleProfile.interests && coupleProfile.interests.length > 0 && (\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-white\">Intereses Compartidos</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {coupleProfile.interests.map((interest, index) => (\r\n                    <Badge \r\n                      key={index} \r\n                      variant=\"secondary\" \r\n                      className=\"bg-gradient-to-r from-purple-500/20 to-pink-600/20 text-white border-purple-400/30\"\r\n                    >\r\n                      {interest}\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderGalleryTab = () => {\r\n    const isDemoMode = localStorage.getItem('demo_authenticated') === 'true';\r\n    \r\n    if (profileType === 'single') {\r\n      const singleProfile = profile as SingleProfile;\r\n      return (\r\n        <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between\">\r\n              <CardTitle className=\"text-white flex items-center gap-2\">\r\n                <ImageIcon className=\"w-5 h-5\" />\r\n                Mi Galería\r\n              </CardTitle>\r\n              {(isOwnProfile || isDemoMode) && (\r\n                <div className=\"flex gap-2\">\r\n                  <Button size=\"sm\" variant=\"outline\" className=\"border-white/30 text-white hover:bg-white/10\">\r\n                    <Upload className=\"w-4 h-4 mr-2\" />\r\n                    Subir\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {isDemoMode ? (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n                  <div className=\"aspect-square bg-gradient-to-br from-pink-400 to-purple-600 rounded-lg overflow-hidden relative group\">\r\n                    <img src=\"/placeholder.svg\" alt=\"Foto demo 1\" className=\"w-full h-full object-cover\" />\r\n                    {isOwnProfile && (\r\n                      <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\">\r\n                        <Button size=\"sm\" variant=\"destructive\" className=\"opacity-90\">\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"aspect-square bg-gradient-to-br from-purple-400 to-blue-600 rounded-lg overflow-hidden relative group\">\r\n                    <img src=\"/placeholder.svg\" alt=\"Foto demo 2\" className=\"w-full h-full object-cover\" />\r\n                    {isOwnProfile && (\r\n                      <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\">\r\n                        <Button size=\"sm\" variant=\"destructive\" className=\"opacity-90\">\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"aspect-square bg-gradient-to-br from-blue-400 to-teal-600 rounded-lg overflow-hidden relative group\">\r\n                    <img src=\"/placeholder.svg\" alt=\"Foto demo 3\" className=\"w-full h-full object-cover\" />\r\n                    {isOwnProfile && (\r\n                      <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center\">\r\n                        <Button size=\"sm\" variant=\"destructive\" className=\"opacity-90\">\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"bg-yellow-500/20 border border-yellow-500/30 rounded-lg p-3\">\r\n                  <p className=\"text-yellow-200 text-sm text-center\">\r\n                    📱 Modo Demo: Las funciones de edición están simuladas\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-12\">\r\n                <Grid3X3 className=\"w-12 h-12 mx-auto mb-4 text-white/40\" />\r\n                <p className=\"text-white/60 mb-4\">No hay posts aún</p>\r\n                {isOwnProfile && (\r\n                  <Button variant=\"outline\" className=\"border-white/30 text-white hover:bg-white/10\">\r\n                    <Upload className=\"w-4 h-4 mr-2\" />\r\n                    Subir primera foto\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    } else {\r\n      const coupleProfile = profile as CoupleProfile;\r\n      return (\r\n        <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-white flex items-center gap-2\">\r\n              <ImageIcon className=\"w-5 h-5\" />\r\n              Galería de Pareja\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\r\n              <div className=\"aspect-square bg-gradient-to-br from-pink-200 to-purple-200 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-gray-600 text-sm\">Pareja Foto 1</span>\r\n              </div>\r\n              <div className=\"aspect-square bg-gradient-to-br from-purple-200 to-blue-200 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-gray-600 text-sm\">Pareja Foto 2</span>\r\n              </div>\r\n              <div className=\"aspect-square bg-gradient-to-br from-blue-200 to-pink-200 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-gray-600 text-sm\">Pareja Foto 3</span>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderStatsTab = () => {\r\n    const stats = [\r\n      {\r\n        icon: Heart,\r\n        label: 'Likes',\r\n        value: profile.likes || 0,\r\n        color: 'text-pink-400'\r\n      },\r\n      {\r\n        icon: MessageCircle,\r\n        label: 'Conversaciones',\r\n        value: profile.matches || 0,\r\n        color: 'text-purple-400'\r\n      },\r\n      {\r\n        icon: Eye,\r\n        label: 'Visitas',\r\n        value: profile.views || 0,\r\n        color: 'text-blue-400'\r\n      },\r\n      {\r\n        icon: Calendar,\r\n        label: 'Compatibilidad',\r\n        value: '95%',\r\n        color: 'text-green-400'\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-4\">\r\n        {stats.map((stat, index) => (\r\n          <Card key={index} className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n            <CardContent className=\"p-4 text-center\">\r\n              <stat.icon className={cn(\"w-8 h-8 mx-auto mb-2\", stat.color)} />\r\n              <div className=\"text-2xl font-bold\">{stat.value}</div>\r\n              <div className=\"text-sm text-white/70\">{stat.label}</div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderIndividualTab = () => {\r\n    if (profileType !== 'couple') return null;\r\n    \r\n    const coupleProfile = profile as CoupleProfile;\r\n    return (\r\n      <div className=\"grid md:grid-cols-2 gap-6\">\r\n        {/* Partner 1 */}\r\n        <Card className=\"bg-gradient-to-br from-pink-500/20 to-rose-500/20 backdrop-blur-md border-pink-400/30 text-white\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-white text-center\">\r\n              {coupleProfile.partner1_first_name}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"w-24 h-24 rounded-full bg-gradient-to-br from-pink-400 to-purple-600 flex items-center justify-center text-white text-2xl font-bold mx-auto mb-3\">\r\n                {coupleProfile.partner1_first_name?.[0]?.toUpperCase()}\r\n              </div>\r\n              <p className=\"text-white/90 font-medium\">{coupleProfile.partner1_age} años</p>\r\n              <p className=\"text-sm text-white/80 capitalize\">{coupleProfile.partner1_gender}</p>\r\n            </div>\r\n            \r\n            {coupleProfile.partner1_bio && (\r\n              <div>\r\n                <h4 className=\"font-semibold text-white mb-2\">Sobre {coupleProfile.partner1_first_name}:</h4>\r\n                <p className=\"text-sm text-white/90 leading-relaxed\">{coupleProfile.partner1_bio}</p>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Partner 2 */}\r\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-blue-500/20 backdrop-blur-md border-purple-400/30 text-white\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-white text-center\">\r\n              {coupleProfile.partner2_first_name}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"w-24 h-24 rounded-full bg-gradient-to-br from-purple-400 to-pink-600 flex items-center justify-center text-white text-2xl font-bold mx-auto mb-3\">\r\n                {coupleProfile.partner2_first_name?.[0]?.toUpperCase()}\r\n              </div>\r\n              <p className=\"text-white/90 font-medium\">{coupleProfile.partner2_age} años</p>\r\n              <p className=\"text-sm text-white/80 capitalize\">{coupleProfile.partner2_gender}</p>\r\n            </div>\r\n            \r\n            {coupleProfile.partner2_bio && (\r\n              <div>\r\n                <h4 className=\"font-semibold text-white mb-2\">Sobre {coupleProfile.partner2_first_name}:</h4>\r\n                <p className=\"text-sm text-white/90 leading-relaxed\">{coupleProfile.partner2_bio}</p>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"space-y-6\", className)}>\r\n      {/* Tab Navigation */}\r\n      <div className=\"flex flex-wrap gap-2 p-1 bg-white/10 backdrop-blur-md rounded-lg border border-white/20\">\r\n        {tabs.map((tab) => (\r\n          <Button\r\n            key={tab.id}\r\n            variant={activeTab === tab.id ? \"default\" : \"ghost\"}\r\n            size=\"sm\"\r\n            onClick={() => setActiveTab(tab.id)}\r\n            className={cn(\r\n              \"flex items-center gap-2 transition-all duration-200\",\r\n              activeTab === tab.id\r\n                ? \"bg-white/20 text-white shadow-lg\"\r\n                : \"text-white/70 hover:text-white hover:bg-white/10\"\r\n            )}\r\n          >\r\n            <tab.icon className=\"w-4 h-4\" />\r\n            <span className=\"hidden sm:inline\">{tab.label}</span>\r\n          </Button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <div className=\"min-h-[400px]\">\r\n        {renderTabContent()}\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      {!isOwnProfile && (\r\n        <div className=\"flex gap-3\">\r\n          {onLike && (\r\n            <Button \r\n              onClick={onLike}\r\n              className=\"flex-1 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700\"\r\n            >\r\n              <Heart className=\"h-4 w-4 mr-2\" />\r\n              Me Gusta\r\n            </Button>\r\n          )}\r\n          {onMessage && (\r\n            <Button \r\n              onClick={onMessage}\r\n              className=\"flex-1 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700\"\r\n            >\r\n              <MessageCircle className=\"h-4 w-4 mr-2\" />\r\n              Mensaje\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Edit Button for Own Profile */}\r\n      {isOwnProfile && onEditProfile && (\r\n        <div className=\"text-center\">\r\n          <Button \r\n            onClick={onEditProfile}\r\n            className=\"bg-white/20 hover:bg-white/30 text-white border-white/30 flex items-center gap-2\"\r\n          >\r\n            <Settings className=\"w-4 h-4\" />\r\n            Editar Perfil\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileTabs;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\ProfileThemeDemo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\profile\\SingleCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\reports\\ProfileReportButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\reports\\ProfileReportModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\security\\BiometricAuth.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\security\\DynamicWatermark.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\security\\MediaUploadSecure.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\security\\ProtectedMedia.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\settings\\BiometricSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\settings\\LocationSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\settings\\NotificationSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\settings\\PrivacySettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\settings\\ProfileSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\sidebar\\CollapsedUserProfile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\sidebar\\NavGroup.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\sidebar\\QuickActions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\sidebar\\UserProfile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\social\\EventCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\social\\GroupCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\social\\ShareProfile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\stories\\CreateStory.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\stories\\StoriesContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\stories\\StoryReportDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\stories\\StoryService.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_e' is defined but never used.","line":17,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":17,"endColumn":16},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'userId' is defined but never used. Allowed unused args must match /^_/u.","line":99,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":99,"endColumn":26},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":112,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":112,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":157,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":157,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":198,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":198,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":236,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":236,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":255,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":255,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":279,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":279,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":297,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":297,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":322,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":322,"endColumn":20}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Story, CreateStoryData, StoryLike, StoryComment } from './StoryTypes';\r\n\r\n// Mock data for demo mode - adapts to user profile type\r\nconst getDemoStories = (): Story[] => {\r\n  const demoUser = localStorage.getItem('demo_user');\r\n  const userType = localStorage.getItem('userType') || 'single';\r\n  \r\n  let userName = \"Usuario Demo\";\r\n  let userAvatar = \"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face\";\r\n  \r\n  if (demoUser) {\r\n    try {\r\n      const parsedUser = JSON.parse(demoUser);\r\n      userName = userType === 'couple' \r\n        ? `${parsedUser.first_name} & Pareja`\r\n        : parsedUser.first_name || \"Usuario Demo\";\r\n    } catch (_e) {\r\n      // Fallback to default\r\n    }\r\n  }\r\n\r\n  return [\r\n    {\r\n      id: 1,\r\n      userId: 101,\r\n      user: {\r\n        name: userName,\r\n        avatar: userAvatar\r\n      },\r\n    content: {\r\n      type: 'image',\r\n      url: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=400&h=600&fit=crop\"\r\n    },\r\n    createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), // 2 horas atrás\r\n    expiresAt: new Date(Date.now() + 22 * 60 * 60 * 1000).toISOString(), // 22 horas restantes\r\n    views: 12,\r\n    isViewed: false,\r\n    description: \"Disfrutando un día soleado en la ciudad\",\r\n    visibility: 'public',\r\n    location: \"CDMX\",\r\n    likes: [\r\n      {\r\n        id: \"like1\",\r\n        storyId: \"1\",\r\n        userId: \"102\",\r\n        createdAt: new Date(),\r\n        user: { id: \"102\", name: \"Miguel López\", avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\" }\r\n      }\r\n    ],\r\n    comments: [\r\n      {\r\n        id: \"comment1\",\r\n        storyId: \"1\",\r\n        userId: \"103\",\r\n        comment: \"¡Qué hermosa foto!\",\r\n        createdAt: new Date(),\r\n        user: { id: \"103\", name: \"Ana Martínez\", avatar: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face\" }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    userId: 102,\r\n    user: {\r\n      name: \"Miguel & Carmen\",\r\n      avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\"\r\n    },\r\n    content: {\r\n      type: 'image',\r\n      url: \"https://images.unsplash.com/photo-1511593358241-7eea1f3c84e5?w=400&h=600&fit=crop\"\r\n    },\r\n    createdAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(), // 5 horas atrás\r\n    expiresAt: new Date(Date.now() + 19 * 60 * 60 * 1000).toISOString(), // 19 horas restantes\r\n    views: 8,\r\n    isViewed: true,\r\n    description: \"Noche romántica en pareja\",\r\n    visibility: 'private',\r\n    location: \"Guadalajara\",\r\n    likes: [],\r\n    comments: []\r\n  }\r\n  ];\r\n};\r\n\r\nclass StoryService {\r\n  private isDemoMode(): boolean {\r\n    return localStorage.getItem('demo_authenticated') === 'true';\r\n  }\r\n\r\n  private getDemoStories(): Story[] {\r\n    const stored = localStorage.getItem('demo_stories');\r\n    return stored ? JSON.parse(stored) : getDemoStories();\r\n  }\r\n\r\n  private saveDemoStories(stories: Story[]): void {\r\n    localStorage.setItem('demo_stories', JSON.stringify(stories));\r\n  }\r\n\r\n  async getStories(userId?: number): Promise<Story[]> {\r\n    if (this.isDemoMode()) {\r\n      const stories = this.getDemoStories();\r\n      // Filtrar historias expiradas\r\n      const activeStories = stories.filter(story => new Date(story.expiresAt) > new Date());\r\n      return activeStories;\r\n    }\r\n\r\n    // TODO: Implementar llamada a API real para producción\r\n    try {\r\n      // const response = await fetch('/api/stories');\r\n      // return await response.json();\r\n      return [];\r\n    } catch (_error) {\r\n      console.error('Error fetching stories:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async createStory(data: CreateStoryData): Promise<Story | null> {\r\n    if (this.isDemoMode()) {\r\n      const stories = this.getDemoStories();\r\n      const newStory: Story = {\r\n        id: Date.now(),\r\n        userId: 1, // Usuario demo\r\n        user: {\r\n          name: \"Usuario Demo\",\r\n          avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\"\r\n        },\r\n        content: {\r\n          type: 'image',\r\n          url: data.contentUrl\r\n        },\r\n        createdAt: new Date().toISOString(),\r\n        expiresAt: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(), // 24 horas\r\n        views: 0,\r\n        isViewed: false,\r\n        description: data.description,\r\n        visibility: data.visibility || 'public',\r\n        location: data.location,\r\n        likes: [],\r\n        comments: []\r\n      };\r\n\r\n      stories.push(newStory);\r\n      this.saveDemoStories(stories);\r\n      return newStory;\r\n    }\r\n\r\n    // TODO: Implementar llamada a API real para producción\r\n    try {\r\n      // const response = await fetch('/api/stories', {\r\n      //   method: 'POST',\r\n      //   headers: { 'Content-Type': 'application/json' },\r\n      //   body: JSON.stringify(data)\r\n      // });\r\n      // return await response.json();\r\n      return null;\r\n    } catch (_error) {\r\n      console.error('Error creating story:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async likeStory(storyId: number): Promise<boolean> {\r\n    if (this.isDemoMode()) {\r\n      const stories = this.getDemoStories();\r\n      const story = stories.find(s => s.id === storyId);\r\n      \r\n      if (story) {\r\n        const existingLike = story.likes?.find(like => like.userId === \"1\");\r\n        \r\n        if (existingLike) {\r\n          // Quitar like\r\n          story.likes = story.likes?.filter(like => like.userId !== \"1\") || [];\r\n        } else {\r\n          // Agregar like\r\n          const newLike: StoryLike = {\r\n            id: `like_${Date.now()}`,\r\n            storyId: storyId.toString(),\r\n            userId: \"1\",\r\n            createdAt: new Date(),\r\n            user: { id: \"1\", name: \"Usuario Demo\", avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\" }\r\n          };\r\n          story.likes = story.likes || [];\r\n          story.likes.push(newLike);\r\n        }\r\n        \r\n        this.saveDemoStories(stories);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // TODO: Implementar llamada a API real para producción\r\n    try {\r\n      // const response = await fetch(`/api/stories/${storyId}/like`, { method: 'POST' });\r\n      // return response.ok;\r\n      return false;\r\n    } catch (_error) {\r\n      console.error('Error liking story:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async commentStory(storyId: number, comment: string): Promise<boolean> {\r\n    if (this.isDemoMode()) {\r\n      const stories = this.getDemoStories();\r\n      const story = stories.find(s => s.id === storyId);\r\n      \r\n      if (story) {\r\n        const newComment: StoryComment = {\r\n          id: `comment_${Date.now()}`,\r\n          storyId: storyId.toString(),\r\n          userId: \"1\",\r\n          comment,\r\n          createdAt: new Date(),\r\n          user: { id: \"1\", name: \"Usuario Demo\", avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\" }\r\n        };\r\n        \r\n        story.comments = story.comments || [];\r\n        story.comments.push(newComment);\r\n        this.saveDemoStories(stories);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // TODO: Implementar llamada a API real para producción\r\n    try {\r\n      // const response = await fetch(`/api/stories/${storyId}/comment`, {\r\n      //   method: 'POST',\r\n      //   headers: { 'Content-Type': 'application/json' },\r\n      //   body: JSON.stringify({ comment })\r\n      // });\r\n      // return response.ok;\r\n      return false;\r\n    } catch (_error) {\r\n      console.error('Error commenting story:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async deleteStory(storyId: number): Promise<boolean> {\r\n    if (this.isDemoMode()) {\r\n      const stories = this.getDemoStories();\r\n      const filteredStories = stories.filter(s => s.id !== storyId);\r\n      this.saveDemoStories(filteredStories);\r\n      return true;\r\n    }\r\n\r\n    // TODO: Implementar llamada a API real para producción\r\n    try {\r\n      // const response = await fetch(`/api/stories/${storyId}`, { method: 'DELETE' });\r\n      // return response.ok;\r\n      return false;\r\n    } catch (_error) {\r\n      console.error('Error deleting story:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async deleteComment(storyId: number, commentId: string): Promise<boolean> {\r\n    if (this.isDemoMode()) {\r\n      const stories = this.getDemoStories();\r\n      const story = stories.find(s => s.id === storyId);\r\n      \r\n      if (story && story.comments) {\r\n        story.comments = story.comments.filter(c => c.id !== commentId);\r\n        this.saveDemoStories(stories);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // TODO: Implementar llamada a API real para producción\r\n    try {\r\n      // const response = await fetch(`/api/stories/${storyId}/comments/${commentId}`, { method: 'DELETE' });\r\n      // return response.ok;\r\n      return false;\r\n    } catch (_error) {\r\n      console.error('Error deleting comment:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async shareStory(storyId: number): Promise<string | null> {\r\n    if (this.isDemoMode()) {\r\n      // Generar URL de compartir demo\r\n      return `${window.location.origin}/stories/${storyId}?demo=true`;\r\n    }\r\n\r\n    // TODO: Implementar lógica de compartir para producción\r\n    try {\r\n      // const response = await fetch(`/api/stories/${storyId}/share`, { method: 'POST' });\r\n      // const data = await response.json();\r\n      // return data.shareUrl;\r\n      return null;\r\n    } catch (_error) {\r\n      console.error('Error sharing story:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async markAsViewed(storyId: number): Promise<boolean> {\r\n    if (this.isDemoMode()) {\r\n      const stories = this.getDemoStories();\r\n      const story = stories.find(s => s.id === storyId);\r\n      \r\n      if (story) {\r\n        story.isViewed = true;\r\n        story.views += 1;\r\n        this.saveDemoStories(stories);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // TODO: Implementar llamada a API real para producción\r\n    try {\r\n      // const response = await fetch(`/api/stories/${storyId}/view`, { method: 'POST' });\r\n      // return response.ok;\r\n      return false;\r\n    } catch (_error) {\r\n      console.error('Error marking story as viewed:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport const storyService = new StoryService();\r\nexport default StoryService;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\stories\\StoryTypes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\stories\\StoryViewer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\swipe\\ReportDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\swipe\\SwipeCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\templates\\ButtonEffectsTemplate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\templates\\ChatTemplate.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\tokens\\StakingModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\tokens\\TokenBalance.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\tokens\\TokenChatBot.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\tokens\\TokenDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\AccessibilityEnhancer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\AnimatedButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\AnimatedCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\AnimatedLoader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\AnimatedProfileCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\AnimatedTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\ChatBubble.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\CrossBrowserOptimizer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\EventCard.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'id' is defined but never used. Allowed unused args must match /^_/u.","line":36,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":36,"endColumn":5}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { UnifiedCard } from '@/components/ui/UnifiedCard';\r\nimport { UnifiedButton } from '@/components/ui/UnifiedButton';\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Calendar, MapPin, Users, Clock, Star, Lock } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface EventCardProps {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  date: string;\r\n  time: string;\r\n  location: string;\r\n  image?: string;\r\n  organizer: {\r\n    name: string;\r\n    avatar?: string;\r\n    verified?: boolean;\r\n  };\r\n  attendees: number;\r\n  maxAttendees?: number;\r\n  price?: number;\r\n  isPrivate?: boolean;\r\n  isPremium?: boolean;\r\n  tags?: string[];\r\n  onJoin?: () => void;\r\n  onView?: () => void;\r\n  className?: string;\r\n  variant?: 'card' | 'list' | 'featured';\r\n}\r\n\r\nexport const EventCard: React.FC<EventCardProps> = ({\r\n  id,\r\n  title,\r\n  description,\r\n  date,\r\n  time,\r\n  location,\r\n  image,\r\n  organizer,\r\n  attendees,\r\n  maxAttendees,\r\n  price,\r\n  isPrivate = false,\r\n  isPremium = false,\r\n  tags = [],\r\n  onJoin,\r\n  onView,\r\n  className,\r\n  variant = 'card'\r\n}) => {\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: { opacity: 1, y: 0 },\r\n    hover: { y: -4, scale: 1.02 }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('es-ES', {\r\n      weekday: 'short',\r\n      day: 'numeric',\r\n      month: 'short'\r\n    });\r\n  };\r\n\r\n  const getAvailabilityColor = () => {\r\n    if (!maxAttendees) return \"text-green-600\";\r\n    const percentage = (attendees / maxAttendees) * 100;\r\n    if (percentage >= 90) return \"text-red-600\";\r\n    if (percentage >= 70) return \"text-yellow-600\";\r\n    return \"text-green-600\";\r\n  };\r\n\r\n  if (variant === 'list') {\r\n    return (\r\n      <motion.div\r\n        variants={cardVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        whileHover=\"hover\"\r\n        className={cn(\"cursor-pointer\", className)}\r\n        onClick={onView}\r\n      >\r\n        <UnifiedCard glass hover className=\"p-4\">\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"w-20 h-20 rounded-lg overflow-hidden flex-shrink-0\">\r\n              <img\r\n                src={image || '/compliceslogo.png'}\r\n                alt={title}\r\n                className=\"w-full h-full object-cover\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"flex-1 min-w-0\">\r\n              <div className=\"flex items-start justify-between mb-2\">\r\n                <h3 className=\"font-semibold text-gray-900 truncate pr-2\">\r\n                  {title}\r\n                </h3>\r\n                <div className=\"flex gap-1 flex-shrink-0\">\r\n                  {isPrivate && <Lock className=\"h-4 w-4 text-gray-500\" />}\r\n                  {isPremium && <Star className=\"h-4 w-4 text-yellow-500\" />}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\r\n                <span className=\"flex items-center gap-1\">\r\n                  <Calendar className=\"h-3 w-3\" />\r\n                  {formatDate(date)}\r\n                </span>\r\n                <span className=\"flex items-center gap-1\">\r\n                  <Clock className=\"h-3 w-3\" />\r\n                  {time}\r\n                </span>\r\n                <span className=\"flex items-center gap-1\">\r\n                  <MapPin className=\"h-3 w-3\" />\r\n                  {location}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center justify-between\">\r\n                <span className={cn(\"text-sm font-medium\", getAvailabilityColor())}>\r\n                  <Users className=\"h-3 w-3 inline mr-1\" />\r\n                  {attendees} {maxAttendees && `/ ${maxAttendees}`} asistentes\r\n                </span>\r\n                \r\n                {price !== undefined && (\r\n                  <Badge variant={price === 0 ? \"secondary\" : \"default\"}>\r\n                    {price === 0 ? 'Gratis' : `$${price}`}\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <UnifiedButton size=\"sm\" gradient onClick={onJoin}>\r\n              Unirse\r\n            </UnifiedButton>\r\n          </div>\r\n        </UnifiedCard>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  if (variant === 'featured') {\r\n    return (\r\n      <motion.div\r\n        variants={cardVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        whileHover=\"hover\"\r\n        className={cn(\"cursor-pointer\", className)}\r\n        onClick={onView}\r\n      >\r\n        <UnifiedCard glass hover className=\"overflow-hidden\">\r\n          <div className=\"relative h-64\">\r\n            <img\r\n              src={image || '/compliceslogo.png'}\r\n              alt={title}\r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent\" />\r\n            \r\n            {/* Badges */}\r\n            <div className=\"absolute top-4 left-4 flex gap-2\">\r\n              {isPremium && (\r\n                <Badge className=\"bg-yellow-500 text-white\">\r\n                  <Star className=\"h-3 w-3 mr-1 fill-current\" />\r\n                  Premium\r\n                </Badge>\r\n              )}\r\n              {isPrivate && (\r\n                <Badge className=\"bg-gray-800 text-white\">\r\n                  <Lock className=\"h-3 w-3 mr-1\" />\r\n                  Privado\r\n                </Badge>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Price */}\r\n            {price !== undefined && (\r\n              <div className=\"absolute top-4 right-4\">\r\n                <Badge className={cn(\r\n                  \"text-lg font-bold\",\r\n                  price === 0 ? \"bg-green-500\" : \"bg-blue-500\"\r\n                )}>\r\n                  {price === 0 ? 'GRATIS' : `$${price}`}\r\n                </Badge>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Event info overlay */}\r\n            <div className=\"absolute bottom-0 left-0 right-0 p-6\">\r\n              <h2 className=\"text-white text-2xl font-bold mb-2\">\r\n                {title}\r\n              </h2>\r\n              \r\n              <div className=\"flex items-center gap-4 text-white/90 mb-4\">\r\n                <span className=\"flex items-center gap-1\">\r\n                  <Calendar className=\"h-4 w-4\" />\r\n                  {formatDate(date)}\r\n                </span>\r\n                <span className=\"flex items-center gap-1\">\r\n                  <Clock className=\"h-4 w-4\" />\r\n                  {time}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center gap-2 text-white/80\">\r\n                <MapPin className=\"h-4 w-4\" />\r\n                <span>{location}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"p-6\">\r\n            {description && (\r\n              <p className=\"text-gray-600 mb-4 line-clamp-2\">\r\n                {description}\r\n              </p>\r\n            )}\r\n            \r\n            {/* Organizer */}\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <Avatar className=\"w-8 h-8\">\r\n                <AvatarImage src={organizer.avatar} alt={organizer.name} />\r\n                <AvatarFallback className=\"text-xs\">\r\n                  {organizer.name.charAt(0).toUpperCase()}\r\n                </AvatarFallback>\r\n              </Avatar>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-900 flex items-center gap-1\">\r\n                  Organizado por {organizer.name}\r\n                  {organizer.verified && <Star className=\"h-3 w-3 text-yellow-500 fill-current\" />}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Tags */}\r\n            {tags.length > 0 && (\r\n              <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                {tags.slice(0, 3).map((tag, index) => (\r\n                  <Badge key={index} variant=\"secondary\" className=\"text-xs\">\r\n                    {tag}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n            )}\r\n            \r\n            {/* Attendees and action */}\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className={cn(\"text-sm font-medium\", getAvailabilityColor())}>\r\n                <Users className=\"h-4 w-4 inline mr-1\" />\r\n                {attendees} {maxAttendees && `/ ${maxAttendees}`} asistentes\r\n              </span>\r\n              \r\n              <UnifiedButton gradient onClick={onJoin}>\r\n                Unirse al evento\r\n              </UnifiedButton>\r\n            </div>\r\n          </div>\r\n        </UnifiedCard>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  // Default card variant\r\n  return (\r\n    <motion.div\r\n      variants={cardVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      whileHover=\"hover\"\r\n      className={cn(\"cursor-pointer\", className)}\r\n      onClick={onView}\r\n    >\r\n      <UnifiedCard glass hover className=\"overflow-hidden\">\r\n        <div className=\"relative h-48\">\r\n          <img\r\n            src={image || '/compliceslogo.png'}\r\n            alt={title}\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\" />\r\n          \r\n          {/* Badges */}\r\n          <div className=\"absolute top-3 left-3 flex gap-2\">\r\n            {isPremium && (\r\n              <Badge className=\"bg-yellow-500 text-white text-xs\">\r\n                <Star className=\"h-3 w-3 mr-1 fill-current\" />\r\n                Premium\r\n              </Badge>\r\n            )}\r\n            {isPrivate && (\r\n              <Badge className=\"bg-gray-800 text-white text-xs\">\r\n                <Lock className=\"h-3 w-3 mr-1\" />\r\n                Privado\r\n              </Badge>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Price */}\r\n          {price !== undefined && (\r\n            <div className=\"absolute top-3 right-3\">\r\n              <Badge className={cn(\r\n                \"font-semibold\",\r\n                price === 0 ? \"bg-green-500\" : \"bg-blue-500\"\r\n              )}>\r\n                {price === 0 ? 'GRATIS' : `$${price}`}\r\n              </Badge>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Date overlay */}\r\n          <div className=\"absolute bottom-3 left-3\">\r\n            <div className=\"bg-white/90 backdrop-blur-sm rounded-lg p-2 text-center\">\r\n              <div className=\"text-xs font-medium text-gray-600\">\r\n                {formatDate(date).split(' ')[1]}\r\n              </div>\r\n              <div className=\"text-lg font-bold text-gray-900\">\r\n                {formatDate(date).split(' ')[0]}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"p-4\">\r\n          <h3 className=\"font-semibold text-gray-900 mb-2 line-clamp-1\">\r\n            {title}\r\n          </h3>\r\n          \r\n          <div className=\"space-y-2 mb-4\">\r\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n              <Clock className=\"h-3 w-3\" />\r\n              <span>{time}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\r\n              <MapPin className=\"h-3 w-3\" />\r\n              <span className=\"truncate\">{location}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {description && (\r\n            <p className=\"text-sm text-gray-600 mb-4 line-clamp-2\">\r\n              {description}\r\n            </p>\r\n          )}\r\n          \r\n          <div className=\"flex items-center justify-between\">\r\n            <span className={cn(\"text-sm font-medium\", getAvailabilityColor())}>\r\n              <Users className=\"h-3 w-3 inline mr-1\" />\r\n              {attendees} asistentes\r\n            </span>\r\n            \r\n            <UnifiedButton size=\"sm\" gradient onClick={onJoin}>\r\n              Unirse\r\n            </UnifiedButton>\r\n          </div>\r\n        </div>\r\n      </UnifiedCard>\r\n    </motion.div>\r\n  );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\FilterDemoCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\GlassCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\InfoCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\LazyImage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\LogoutButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\MatchCard.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'id' is defined but never used. Allowed unused args must match /^_/u.","line":30,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":30,"endColumn":5}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { UnifiedCard } from '@/components/ui/UnifiedCard';\r\nimport { UnifiedButton } from '@/components/ui/UnifiedButton';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Heart, X, Star, MapPin, Users, Sparkles } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface MatchCardProps {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n  bio?: string;\r\n  location?: string;\r\n  avatar?: string;\r\n  images?: string[];\r\n  distance?: number;\r\n  compatibility: number;\r\n  reasons?: string[];\r\n  verified?: boolean;\r\n  accountType?: 'single' | 'couple';\r\n  onLike: () => void;\r\n  onPass: () => void;\r\n  onSuperLike?: () => void;\r\n  className?: string;\r\n  variant?: 'swipe' | 'grid';\r\n}\r\n\r\nexport const MatchCard: React.FC<MatchCardProps> = ({\r\n  id,\r\n  name,\r\n  age,\r\n  bio,\r\n  location,\r\n  avatar,\r\n  images = [],\r\n  distance,\r\n  compatibility,\r\n  reasons = [],\r\n  verified = false,\r\n  accountType = 'single',\r\n  onLike,\r\n  onPass,\r\n  onSuperLike,\r\n  className,\r\n  variant = 'swipe'\r\n}) => {\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, scale: 0.8, rotateY: -30 },\r\n    visible: { \r\n      opacity: 1, \r\n      scale: 1, \r\n      rotateY: 0,\r\n      transition: { \r\n        type: \"spring\", \r\n        stiffness: 300, \r\n        damping: 30 \r\n      }\r\n    },\r\n    exit: { \r\n      opacity: 0, \r\n      scale: 0.8, \r\n      rotateY: 30,\r\n      transition: { duration: 0.3 }\r\n    }\r\n  };\r\n\r\n  const getCompatibilityColor = () => {\r\n    if (compatibility >= 80) return \"from-green-400 to-emerald-500\";\r\n    if (compatibility >= 60) return \"from-yellow-400 to-orange-500\";\r\n    return \"from-pink-400 to-red-500\";\r\n  };\r\n\r\n  const getDistanceText = () => {\r\n    if (!distance) return null;\r\n    if (distance <= 5) return \"Muy cerca de ti\";\r\n    if (distance <= 15) return \"En tu zona\";\r\n    return `${distance}km`;\r\n  };\r\n\r\n  if (variant === 'grid') {\r\n    return (\r\n      <motion.div\r\n        variants={cardVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        className={cn(\"w-full max-w-sm\", className)}\r\n      >\r\n        <UnifiedCard glass hover className=\"overflow-hidden\">\r\n          <div className=\"relative\">\r\n            <div className=\"aspect-[3/4] relative\">\r\n              <img\r\n                src={avatar || images[0] || '/compliceslogo.png'}\r\n                alt={name}\r\n                className=\"w-full h-full object-cover\"\r\n              />\r\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent\" />\r\n              \r\n              {/* Badges */}\r\n              <div className=\"absolute top-3 left-3 flex flex-col gap-2\">\r\n                {verified && (\r\n                  <Badge className=\"bg-blue-500 text-white text-xs\">\r\n                    <Star className=\"h-3 w-3 mr-1 fill-current\" />\r\n                    Verificado\r\n                  </Badge>\r\n                )}\r\n                {accountType === 'couple' && (\r\n                  <Badge className=\"bg-purple-500 text-white text-xs\">\r\n                    <Users className=\"h-3 w-3 mr-1\" />\r\n                    Pareja\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Compatibility */}\r\n              <div className=\"absolute top-3 right-3\">\r\n                <div className={cn(\r\n                  \"px-3 py-1 rounded-full text-white text-sm font-semibold\",\r\n                  \"bg-gradient-to-r shadow-lg\",\r\n                  getCompatibilityColor()\r\n                )}>\r\n                  {compatibility}%\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Info overlay */}\r\n              <div className=\"absolute bottom-0 left-0 right-0 p-4\">\r\n                <h3 className=\"text-white text-xl font-bold mb-1\">\r\n                  {name}, {age}\r\n                </h3>\r\n                \r\n                {location && (\r\n                  <p className=\"text-white/90 text-sm flex items-center gap-1 mb-2\">\r\n                    <MapPin className=\"h-3 w-3\" />\r\n                    {location} {distance && `• ${getDistanceText()}`}\r\n                  </p>\r\n                )}\r\n                \r\n                {bio && (\r\n                  <p className=\"text-white/80 text-sm line-clamp-2 mb-3\">\r\n                    {bio}\r\n                  </p>\r\n                )}\r\n                \r\n                {/* Reasons */}\r\n                {reasons.length > 0 && (\r\n                  <div className=\"flex flex-wrap gap-1 mb-3\">\r\n                    {reasons.slice(0, 2).map((reason, index) => (\r\n                      <Badge key={index} className=\"bg-white/20 text-white text-xs backdrop-blur-sm\">\r\n                        {reason}\r\n                      </Badge>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Actions */}\r\n            <div className=\"p-4 flex justify-center gap-4\">\r\n              <UnifiedButton\r\n                variant=\"outline\"\r\n                size=\"lg\"\r\n                className=\"w-14 h-14 rounded-full border-2 border-gray-300 hover:border-red-400 hover:bg-red-50\"\r\n                onClick={onPass}\r\n              >\r\n                <X className=\"h-6 w-6 text-gray-600 hover:text-red-500\" />\r\n              </UnifiedButton>\r\n              \r\n              {onSuperLike && (\r\n                <UnifiedButton\r\n                  variant=\"outline\"\r\n                  size=\"lg\"\r\n                  className=\"w-14 h-14 rounded-full border-2 border-blue-300 hover:border-blue-500 hover:bg-blue-50\"\r\n                  onClick={onSuperLike}\r\n                >\r\n                  <Sparkles className=\"h-6 w-6 text-blue-500\" />\r\n                </UnifiedButton>\r\n              )}\r\n              \r\n              <UnifiedButton\r\n                variant=\"outline\"\r\n                size=\"lg\"\r\n                className=\"w-14 h-14 rounded-full border-2 border-pink-300 hover:border-pink-500 hover:bg-pink-50\"\r\n                onClick={onLike}\r\n              >\r\n                <Heart className=\"h-6 w-6 text-pink-500\" />\r\n              </UnifiedButton>\r\n            </div>\r\n          </div>\r\n        </UnifiedCard>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  // Swipe variant (default)\r\n  return (\r\n    <motion.div\r\n      variants={cardVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n      className={cn(\"w-full max-w-sm mx-auto\", className)}\r\n      drag=\"x\"\r\n      dragConstraints={{ left: -200, right: 200 }}\r\n      onDragEnd={(_, info) => {\r\n        if (info.offset.x > 100) {\r\n          onLike();\r\n        } else if (info.offset.x < -100) {\r\n          onPass();\r\n        }\r\n      }}\r\n    >\r\n      <UnifiedCard glass className=\"overflow-hidden cursor-grab active:cursor-grabbing\">\r\n        <div className=\"relative\">\r\n          <div className=\"aspect-[3/4] relative\">\r\n            <img\r\n              src={avatar || images[0] || '/compliceslogo.png'}\r\n              alt={name}\r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent\" />\r\n            \r\n            {/* Swipe indicators */}\r\n            <motion.div\r\n              className=\"absolute inset-0 flex items-center justify-center\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 0 }}\r\n            >\r\n              <div className=\"text-6xl font-bold text-green-500 transform rotate-12 opacity-0\">\r\n                LIKE\r\n              </div>\r\n            </motion.div>\r\n            \r\n            {/* Badges */}\r\n            <div className=\"absolute top-4 left-4 flex flex-col gap-2\">\r\n              {verified && (\r\n                <Badge className=\"bg-blue-500 text-white\">\r\n                  <Star className=\"h-4 w-4 mr-1 fill-current\" />\r\n                  Verificado\r\n                </Badge>\r\n              )}\r\n              {accountType === 'couple' && (\r\n                <Badge className=\"bg-purple-500 text-white\">\r\n                  <Users className=\"h-4 w-4 mr-1\" />\r\n                  Pareja\r\n                </Badge>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Compatibility score */}\r\n            <div className=\"absolute top-4 right-4\">\r\n              <motion.div\r\n                className={cn(\r\n                  \"px-4 py-2 rounded-full text-white font-bold text-lg shadow-lg\",\r\n                  \"bg-gradient-to-r\",\r\n                  getCompatibilityColor()\r\n                )}\r\n                whileHover={{ scale: 1.1 }}\r\n              >\r\n                {compatibility}%\r\n              </motion.div>\r\n            </div>\r\n            \r\n            {/* Main info */}\r\n            <div className=\"absolute bottom-0 left-0 right-0 p-6\">\r\n              <motion.div\r\n                initial={{ y: 20, opacity: 0 }}\r\n                animate={{ y: 0, opacity: 1 }}\r\n                transition={{ delay: 0.2 }}\r\n              >\r\n                <h2 className=\"text-white text-3xl font-bold mb-2\">\r\n                  {name}, {age}\r\n                </h2>\r\n                \r\n                {location && (\r\n                  <p className=\"text-white/90 flex items-center gap-2 mb-3\">\r\n                    <MapPin className=\"h-4 w-4\" />\r\n                    {location} {distance && `• ${getDistanceText()}`}\r\n                  </p>\r\n                )}\r\n                \r\n                {bio && (\r\n                  <p className=\"text-white/90 text-sm leading-relaxed mb-4 line-clamp-3\">\r\n                    {bio}\r\n                  </p>\r\n                )}\r\n                \r\n                {/* Match reasons */}\r\n                {reasons.length > 0 && (\r\n                  <div className=\"space-y-2\">\r\n                    <p className=\"text-white/80 text-sm font-medium\">\r\n                      ¿Por qué es un match?\r\n                    </p>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                      {reasons.slice(0, 3).map((reason, index) => (\r\n                        <Badge key={index} className=\"bg-white/20 text-white backdrop-blur-sm\">\r\n                          {reason}\r\n                        </Badge>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Action buttons */}\r\n          <div className=\"p-6 bg-white flex justify-center gap-6\">\r\n            <UnifiedButton\r\n              variant=\"outline\"\r\n              size=\"lg\"\r\n              className=\"w-16 h-16 rounded-full border-2 border-gray-300 hover:border-red-400 hover:bg-red-50 transition-all duration-200\"\r\n              onClick={onPass}\r\n            >\r\n              <X className=\"h-8 w-8 text-gray-600 hover:text-red-500\" />\r\n            </UnifiedButton>\r\n            \r\n            {onSuperLike && (\r\n              <UnifiedButton\r\n                variant=\"outline\"\r\n                size=\"lg\"\r\n                className=\"w-16 h-16 rounded-full border-2 border-blue-300 hover:border-blue-500 hover:bg-blue-50 transition-all duration-200\"\r\n                onClick={onSuperLike}\r\n              >\r\n                <Sparkles className=\"h-8 w-8 text-blue-500\" />\r\n              </UnifiedButton>\r\n            )}\r\n            \r\n            <UnifiedButton\r\n              gradient\r\n              size=\"lg\"\r\n              className=\"w-16 h-16 rounded-full transition-all duration-200 hover:scale-110\"\r\n              onClick={onLike}\r\n            >\r\n              <Heart className=\"h-8 w-8 text-white\" />\r\n            </UnifiedButton>\r\n          </div>\r\n        </div>\r\n      </UnifiedCard>\r\n    </motion.div>\r\n  );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\MobileOptimizer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\NavigationEnhanced.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\OptimizedImage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\ProfileCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\ProfileImagePlaceholder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\ResponsiveContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\ResponsiveGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\TemplateIntegrator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\TermsModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\ThemeProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\ThemeSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\ThemeToggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\UnifiedButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\UnifiedCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\UnifiedInput.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\UnifiedModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\UnifiedTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\accordion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\alert-dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\aspect-ratio.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\avatar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\breadcrumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\calendar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\carousel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\chart.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'props' is defined but never used. Allowed unused args must match /^_/u.","line":135,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":135,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\"\r\nimport * as RechartsPrimitive from \"recharts\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Format: { THEME_NAME: CSS_SELECTOR }\r\nconst THEMES = { light: \"\", dark: \".dark\" } as const\r\n\r\nexport type ChartConfig = {\r\n  [k in string]: {\r\n    label?: React.ReactNode\r\n    icon?: React.ComponentType\r\n  } & (\r\n    | { color?: string; theme?: never }\r\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\r\n  )\r\n}\r\n\r\ntype ChartContextProps = {\r\n  config: ChartConfig\r\n}\r\n\r\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\r\n\r\nfunction useChart() {\r\n  const context = React.useContext(ChartContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst ChartContainer = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    config: ChartConfig\r\n    children: React.ComponentProps<\r\n      typeof RechartsPrimitive.ResponsiveContainer\r\n    >[\"children\"]\r\n  }\r\n>(({ id, className, children, config, ...props }, ref) => {\r\n  const uniqueId = React.useId()\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-chart={chartId}\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>\r\n          {children}\r\n        </RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  )\r\n})\r\nChartContainer.displayName = \"Chart\"\r\n\r\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\r\n  const colorConfig = Object.entries(config).filter(\r\n    ([_, config]) => config.theme || config.color\r\n  )\r\n\r\n  if (!colorConfig.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(\r\n            ([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n  .map(([key, itemConfig]) => {\r\n    const color =\r\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\r\n      itemConfig.color\r\n    return color ? `  --color-${key}: ${color};` : null\r\n  })\r\n  .join(\"\\n\")}\r\n}\r\n`\r\n          )\r\n          .join(\"\\n\"),\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst ChartTooltip = RechartsPrimitive.Tooltip\r\n\r\nconst ChartTooltipContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n      active?: boolean\r\n      payload?: any[]\r\n      label?: string\r\n      hideLabel?: boolean\r\n      hideIndicator?: boolean\r\n      indicator?: \"line\" | \"dot\" | \"dashed\"\r\n      nameKey?: string\r\n      labelKey?: string\r\n      labelFormatter?: (value: any, name: string) => React.ReactNode\r\n      labelClassName?: string\r\n      formatter?: (value: any, name: string, item: any, index: number, payload: any) => React.ReactNode\r\n      color?: string\r\n    }\r\n>(\r\n  (\r\n    {\r\n      active,\r\n      payload,\r\n      className,\r\n      indicator = \"dot\",\r\n      hideLabel = false,\r\n      hideIndicator = false,\r\n      label,\r\n      labelFormatter,\r\n      labelClassName,\r\n      formatter,\r\n      color,\r\n      nameKey,\r\n      labelKey,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    const tooltipLabel = React.useMemo(() => {\r\n      if (hideLabel || !payload?.length) {\r\n        return null\r\n      }\r\n\r\n      const [item] = payload\r\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\r\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n      const value =\r\n        !labelKey && typeof label === \"string\"\r\n          ? config[label as keyof typeof config]?.label || label\r\n          : itemConfig?.label\r\n\r\n      if (labelFormatter) {\r\n        return (\r\n          <div className={cn(\"font-medium\", labelClassName)}>\r\n            {labelFormatter(value, label || \"\")}\r\n          </div>\r\n        )\r\n      }\r\n\r\n      if (!value) {\r\n        return null\r\n      }\r\n\r\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\r\n    }, [\r\n      label,\r\n      labelFormatter,\r\n      payload,\r\n      hideLabel,\r\n      labelClassName,\r\n      config,\r\n      labelKey,\r\n    ])\r\n\r\n    if (!active || !payload?.length) {\r\n      return null\r\n    }\r\n\r\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\r\n          className\r\n        )}\r\n      >\r\n        {!nestLabel ? tooltipLabel : null}\r\n        <div className=\"grid gap-1.5\">\r\n          {payload.map((item: any, index: number) => {\r\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\r\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n            const indicatorColor = color || item.payload.fill || item.color\r\n\r\n            return (\r\n              <div\r\n                key={item.dataKey}\r\n                className={cn(\r\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\r\n                  indicator === \"dot\" && \"items-center\"\r\n                )}\r\n              >\r\n                {formatter && item?.value !== undefined && item.name ? (\r\n                  formatter(item.value, item.name, item, index, item.payload)\r\n                ) : (\r\n                  <>\r\n                    {itemConfig?.icon ? (\r\n                      <itemConfig.icon />\r\n                    ) : (\r\n                      !hideIndicator && (\r\n                        <div\r\n                          className={cn(\r\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\r\n                            {\r\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\r\n                              \"w-1\": indicator === \"line\",\r\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\r\n                                indicator === \"dashed\",\r\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\r\n                            }\r\n                          )}\r\n                          style={\r\n                            {\r\n                              \"--color-bg\": indicatorColor,\r\n                              \"--color-border\": indicatorColor,\r\n                            } as React.CSSProperties\r\n                          }\r\n                        />\r\n                      )\r\n                    )}\r\n                    <div\r\n                      className={cn(\r\n                        \"flex flex-1 justify-between leading-none\",\r\n                        nestLabel ? \"items-end\" : \"items-center\"\r\n                      )}\r\n                    >\r\n                      <div className=\"grid gap-1.5\">\r\n                        {nestLabel ? tooltipLabel : null}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {itemConfig?.label || item.name}\r\n                        </span>\r\n                      </div>\r\n                      {item.value && (\r\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\r\n                          {item.value.toLocaleString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartTooltipContent.displayName = \"ChartTooltip\"\r\n\r\nconst ChartLegend = RechartsPrimitive.Legend\r\n\r\nconst ChartLegendContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n      hideIcon?: boolean\r\n      nameKey?: string\r\n      payload?: any[]\r\n      verticalAlign?: \"top\" | \"bottom\"\r\n    }\r\n>(\r\n  (\r\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    if (!payload?.length) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex items-center justify-center gap-4\",\r\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\r\n          className\r\n        )}\r\n      >\r\n        {payload.map((item: any) => {\r\n          const key = `${nameKey || item.dataKey || \"value\"}`\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n\r\n          return (\r\n            <div\r\n              key={item.value}\r\n              className={cn(\r\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\r\n              )}\r\n            >\r\n              {itemConfig?.icon && !hideIcon ? (\r\n                <itemConfig.icon />\r\n              ) : (\r\n                <div\r\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                  style={{\r\n                    backgroundColor: item.color,\r\n                  }}\r\n                />\r\n              )}\r\n              {itemConfig?.label}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartLegendContent.displayName = \"ChartLegend\"\r\n\r\n// Helper to extract item config from a payload.\r\nfunction getPayloadConfigFromPayload(\r\n  config: ChartConfig,\r\n  payload: unknown,\r\n  key: string\r\n) {\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    return undefined\r\n  }\r\n\r\n  const payloadPayload =\r\n    \"payload\" in payload &&\r\n    typeof payload.payload === \"object\" &&\r\n    payload.payload !== null\r\n      ? payload.payload\r\n      : undefined\r\n\r\n  let configLabelKey: string = key\r\n\r\n  if (\r\n    key in payload &&\r\n    typeof payload[key as keyof typeof payload] === \"string\"\r\n  ) {\r\n    configLabelKey = payload[key as keyof typeof payload] as string\r\n  } else if (\r\n    payloadPayload &&\r\n    key in payloadPayload &&\r\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\r\n  ) {\r\n    configLabelKey = payloadPayload[\r\n      key as keyof typeof payloadPayload\r\n    ] as string\r\n  }\r\n\r\n  return configLabelKey in config\r\n    ? config[configLabelKey]\r\n    : config[key as keyof typeof config]\r\n}\r\n\r\nexport {\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartStyle,\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\checkbox.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\collapsible.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\command.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\context-menu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\drawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\dropdown-menu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\form.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\hover-card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\input-otp.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\label.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\menubar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\navigation-menu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\pagination.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\popover.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\progress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\radio-group.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\resizable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\scroll-area.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\separator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\sheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\sidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\skeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\slider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\sonner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\switch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\table.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\tabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\textarea.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\toaster.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\toggle-group.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\toggle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\tooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\ui\\verification-badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\components\\video\\VideoCallWindow.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'callId' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":41,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":41,"endColumn":11}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { \r\n  Video, \r\n  VideoOff, \r\n  Mic, \r\n  MicOff, \r\n  Phone, \r\n  PhoneOff,\r\n  Maximize2,\r\n  Minimize2,\r\n  Settings\r\n} from 'lucide-react';\r\nimport { useVideoChat } from '@/hooks/useVideoChat';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { logger } from '@/lib/logger';\r\n\r\ninterface VideoCallWindowProps {\r\n  targetUserId?: string;\r\n  onCallEnd?: () => void;\r\n  className?: string;\r\n}\r\n\r\nexport const VideoCallWindow: React.FC<VideoCallWindowProps> = ({\r\n  targetUserId,\r\n  onCallEnd,\r\n  className = ''\r\n}) => {\r\n  const { user } = useAuth();\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [showControls, setShowControls] = useState(true);\r\n  const [incomingCall, setIncomingCall] = useState<{\r\n    callId: string;\r\n    fromUserId: string;\r\n  } | null>(null);\r\n\r\n  const {\r\n    isInCall,\r\n    isConnecting,\r\n    isMuted,\r\n    isVideoEnabled,\r\n    callId,\r\n    remoteUserId,\r\n    error,\r\n    localVideoRef,\r\n    remoteVideoRef,\r\n    startCall,\r\n    acceptCall,\r\n    rejectCall,\r\n    endCall,\r\n    toggleMute,\r\n    toggleVideo,\r\n    isCallActive,\r\n    hasLocalStream\r\n  } = useVideoChat({\r\n    userId: user?.id || '',\r\n    onIncomingCall: (callId, fromUserId) => {\r\n      setIncomingCall({ callId, fromUserId });\r\n    },\r\n    onCallAccepted: (callId) => {\r\n      logger.info('Video call started', { callId, context: 'video-call' });\r\n      setIncomingCall(null);\r\n    },\r\n    onCallRejected: (callId) => {\r\n      logger.info('Call rejected', { callId, context: 'video-call' });\r\n      setIncomingCall(null);\r\n    },\r\n    onCallEnded: (callId) => {\r\n      logger.info('Video call ended', { callId, context: 'video-call' });\r\n      setIncomingCall(null);\r\n      onCallEnd?.();\r\n    },\r\n    onError: (error) => {\r\n      logger.error('Error in video call', { error: String(error), context: 'video-call' });\r\n    }\r\n  });\r\n\r\n  const handleStartCall = async () => {\r\n    if (targetUserId) {\r\n      await startCall(targetUserId);\r\n    }\r\n  };\r\n\r\n  const handleAcceptCall = async () => {\r\n    if (incomingCall) {\r\n      // Note: In a real implementation, you'd need to get the offer from the signaling\r\n      // This is simplified for demonstration\r\n      await acceptCall(incomingCall.callId, incomingCall.fromUserId, {} as RTCSessionDescriptionInit);\r\n    }\r\n  };\r\n\r\n  const handleRejectCall = () => {\r\n    if (incomingCall) {\r\n      rejectCall(incomingCall.callId, incomingCall.fromUserId);\r\n      setIncomingCall(null);\r\n    }\r\n  };\r\n\r\n  const handleEndCall = () => {\r\n    endCall();\r\n    onCallEnd?.();\r\n  };\r\n\r\n  const toggleFullscreen = () => {\r\n    setIsFullscreen(!isFullscreen);\r\n  };\r\n\r\n  // Incoming call modal\r\n  if (incomingCall && !isCallActive) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-2xl p-8 max-w-md w-full mx-4\">\r\n          <div className=\"text-center\">\r\n            <div className=\"w-24 h-24 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full mx-auto mb-4 flex items-center justify-center\">\r\n              <Video className=\"h-12 w-12 text-white\" />\r\n            </div>\r\n            \r\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n              Llamada entrante\r\n            </h3>\r\n            \r\n            <p className=\"text-gray-600 mb-8\">\r\n              Usuario {incomingCall.fromUserId.slice(0, 8)} te está llamando\r\n            </p>\r\n            \r\n            <div className=\"flex space-x-4\">\r\n              <button\r\n                onClick={handleRejectCall}\r\n                className=\"flex-1 bg-red-500 hover:bg-red-600 text-white py-3 px-6 rounded-xl font-medium transition-colors flex items-center justify-center space-x-2\"\r\n              >\r\n                <PhoneOff className=\"h-5 w-5\" />\r\n                <span>Rechazar</span>\r\n              </button>\r\n              \r\n              <button\r\n                onClick={handleAcceptCall}\r\n                className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-3 px-6 rounded-xl font-medium transition-colors flex items-center justify-center space-x-2\"\r\n              >\r\n                <Phone className=\"h-5 w-5\" />\r\n                <span>Aceptar</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`relative bg-gray-900 rounded-2xl overflow-hidden ${\r\n      isFullscreen ? 'fixed inset-0 z-50' : 'aspect-video'\r\n    } ${className}`}>\r\n      \r\n      {/* Remote video */}\r\n      <video\r\n        ref={remoteVideoRef}\r\n        autoPlay\r\n        playsInline\r\n        className=\"w-full h-full object-cover\"\r\n      />\r\n      \r\n      {/* Local video (picture-in-picture) */}\r\n      <div className=\"absolute top-4 right-4 w-32 h-24 bg-gray-800 rounded-lg overflow-hidden border-2 border-white shadow-lg\">\r\n        <video\r\n          ref={localVideoRef}\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          className=\"w-full h-full object-cover\"\r\n        />\r\n        \r\n        {!isVideoEnabled && (\r\n          <div className=\"absolute inset-0 bg-gray-800 flex items-center justify-center\">\r\n            <VideoOff className=\"h-6 w-6 text-gray-400\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Connection status */}\r\n      {isConnecting && (\r\n        <div className=\"absolute top-4 left-4 bg-black bg-opacity-50 text-white px-3 py-2 rounded-lg\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-2 h-2 bg-yellow-400 rounded-full animate-pulse\" />\r\n            <span className=\"text-sm\">Conectando...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error message */}\r\n      {error && (\r\n        <div className=\"absolute top-4 left-4 bg-red-500 text-white px-3 py-2 rounded-lg max-w-xs\">\r\n          <p className=\"text-sm\">{error}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Controls */}\r\n      {(showControls || !isInCall) && (\r\n        <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent p-6\">\r\n          <div className=\"flex items-center justify-center space-x-4\">\r\n            \r\n            {/* Mute button */}\r\n            <button\r\n              onClick={toggleMute}\r\n              disabled={!hasLocalStream}\r\n              className={`p-4 rounded-full transition-colors ${\r\n                isMuted \r\n                  ? 'bg-red-500 hover:bg-red-600' \r\n                  : 'bg-gray-700 hover:bg-gray-600'\r\n              } disabled:opacity-50 disabled:cursor-not-allowed`}\r\n            >\r\n              {isMuted ? (\r\n                <MicOff className=\"h-6 w-6 text-white\" />\r\n              ) : (\r\n                <Mic className=\"h-6 w-6 text-white\" />\r\n              )}\r\n            </button>\r\n\r\n            {/* Video toggle button */}\r\n            <button\r\n              onClick={toggleVideo}\r\n              disabled={!hasLocalStream}\r\n              className={`p-4 rounded-full transition-colors ${\r\n                !isVideoEnabled \r\n                  ? 'bg-red-500 hover:bg-red-600' \r\n                  : 'bg-gray-700 hover:bg-gray-600'\r\n              } disabled:opacity-50 disabled:cursor-not-allowed`}\r\n            >\r\n              {isVideoEnabled ? (\r\n                <Video className=\"h-6 w-6 text-white\" />\r\n              ) : (\r\n                <VideoOff className=\"h-6 w-6 text-white\" />\r\n              )}\r\n            </button>\r\n\r\n            {/* Call/End call button */}\r\n            {isCallActive ? (\r\n              <button\r\n                onClick={handleEndCall}\r\n                className=\"p-4 bg-red-500 hover:bg-red-600 rounded-full transition-colors\"\r\n              >\r\n                <PhoneOff className=\"h-6 w-6 text-white\" />\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={handleStartCall}\r\n                disabled={!targetUserId}\r\n                className=\"p-4 bg-green-500 hover:bg-green-600 rounded-full transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                <Phone className=\"h-6 w-6 text-white\" />\r\n              </button>\r\n            )}\r\n\r\n            {/* Fullscreen toggle */}\r\n            <button\r\n              onClick={toggleFullscreen}\r\n              className=\"p-4 bg-gray-700 hover:bg-gray-600 rounded-full transition-colors\"\r\n            >\r\n              {isFullscreen ? (\r\n                <Minimize2 className=\"h-6 w-6 text-white\" />\r\n              ) : (\r\n                <Maximize2 className=\"h-6 w-6 text-white\" />\r\n              )}\r\n            </button>\r\n\r\n            {/* Settings */}\r\n            <button\r\n              onClick={() => setShowControls(!showControls)}\r\n              className=\"p-4 bg-gray-700 hover:bg-gray-600 rounded-full transition-colors\"\r\n            >\r\n              <Settings className=\"h-6 w-6 text-white\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Call info */}\r\n      {isInCall && remoteUserId && (\r\n        <div className=\"absolute top-4 left-4 bg-black bg-opacity-50 text-white px-3 py-2 rounded-lg\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-2 h-2 bg-green-400 rounded-full\" />\r\n            <span className=\"text-sm\">\r\n              En llamada con {remoteUserId.slice(0, 8)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* No video placeholder */}\r\n      {!isInCall && !isConnecting && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-800\">\r\n          <div className=\"text-center text-white\">\r\n            <Video className=\"h-16 w-16 mx-auto mb-4 text-gray-400\" />\r\n            <h3 className=\"text-xl font-semibold mb-2\">Video Chat</h3>\r\n            <p className=\"text-gray-400 mb-6\">\r\n              {targetUserId ? 'Presiona el botón para iniciar la llamada' : 'Selecciona un usuario para llamar'}\r\n            </p>\r\n            \r\n            {targetUserId && (\r\n              <button\r\n                onClick={handleStartCall}\r\n                className=\"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white px-6 py-3 rounded-xl font-medium transition-all transform hover:scale-105\"\r\n              >\r\n                Iniciar llamada\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCallWindow;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\config\\demo-production.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\debug.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\demo\\AppFactory.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\demo\\DemoProvider.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'password' is defined but never used. Allowed unused args must match /^_/u.","line":57,"column":34,"nodeType":null,"messageId":"unusedVar","endLine":57,"endColumn":42}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Provider para lógica demo - ComplicesConecta\r\n * Maneja datos mock y comportamiento demo sin afectar producción\r\n */\r\n\r\nimport React, { createContext, useContext, ReactNode } from 'react';\r\nimport { logger } from '@/lib/logger';\r\nimport { Database } from '@/integrations/supabase/types';\r\nimport { demoProfiles } from '@/demo/demoData';\r\n\r\ntype Profile = Database['public']['Tables']['profiles']['Row'];\r\n\r\ninterface DemoContextType {\r\n  profiles: Profile[];\r\n  isDemo: true;\r\n  getDemoProfile: (id: string) => Profile | null;\r\n  getDemoProfiles: (filters?: any) => Profile[];\r\n  mockAuth: {\r\n    login: (email: string, password: string) => Promise<{ success: boolean; user?: any }>;\r\n    logout: () => Promise<void>;\r\n    getCurrentUser: () => any | null;\r\n  };\r\n}\r\n\r\nconst DemoContext = createContext<DemoContextType | null>(null);\r\n\r\ninterface DemoProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const DemoProvider: React.FC<DemoProviderProps> = ({ children }) => {\r\n  const getDemoProfile = (id: string): Profile | null => {\r\n    return (demoProfiles as any[]).find((p: any) => p.id === id) as Profile || null;\r\n  };\r\n\r\n  const getDemoProfiles = (filters?: any): Profile[] => {\r\n    let filtered = [...(demoProfiles as any[])];\r\n    \r\n    if (filters?.ageRange) {\r\n      filtered = filtered.filter((p: any) => \r\n        p.age && p.age >= filters.ageRange.min && p.age <= filters.ageRange.max\r\n      );\r\n    }\r\n    \r\n    if (filters?.interests) {\r\n      filtered = filtered.filter((p: any) => {\r\n        return p.interests?.some((interest: string) => \r\n          filters.interests.includes(interest)\r\n        );\r\n      });\r\n    }\r\n    \r\n    return filtered as Profile[];\r\n  };\r\n\r\n  const mockAuth = {\r\n    login: async (email: string, password: string) => {\r\n      logger.info('Demo login attempt:', { email });\r\n      \r\n      // Mock successful login for demo users\r\n      if (email.includes('demo') || email.includes('test')) {\r\n        return {\r\n          success: true,\r\n          user: {\r\n            id: 'demo-user-1',\r\n            email,\r\n            profile: demoProfiles[0]\r\n          }\r\n        };\r\n      }\r\n      \r\n      return { success: false };\r\n    },\r\n    \r\n    logout: async () => {\r\n      logger.info('Demo logout');\r\n      // Mock logout - no real session to clear\r\n    },\r\n    \r\n    getCurrentUser: () => {\r\n      // Return mock user for demo\r\n      return {\r\n        id: 'demo-user-1',\r\n        email: 'demo@complicesconecta.com',\r\n        profile: demoProfiles[0]\r\n      };\r\n    }\r\n  };\r\n\r\n  const contextValue: DemoContextType = {\r\n    profiles: demoProfiles as any as Profile[],\r\n    isDemo: true,\r\n    getDemoProfile,\r\n    getDemoProfiles,\r\n    mockAuth\r\n  };\r\n\r\n  return (\r\n    <DemoContext.Provider value={contextValue}>\r\n      {children}\r\n    </DemoContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDemoContext = (): DemoContextType => {\r\n  const context = useContext(DemoContext);\r\n  if (!context) {\r\n    throw new Error('useDemoContext debe usarse dentro de DemoProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default DemoProvider;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\demo\\RealProvider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\demo\\demoData.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'i' is defined but never used. Allowed unused args must match /^_/u.","line":65,"column":44,"nodeType":null,"messageId":"unusedVar","endLine":65,"endColumn":45}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Datos demo para ComplicesConecta\r\n * Perfiles mock para desarrollo y testing\r\n */\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { pickProfileImage, resetImageCounters, type ProfileType, type Gender } from '@/lib/media';\r\n\r\nexport interface DemoProfile {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n  location: string;\r\n  distance: number;\r\n  interests: string[];\r\n  image: string;\r\n  bio: string;\r\n  isOnline: boolean;\r\n  lastActive: string;\r\n  isVerified: boolean;\r\n  isPremium: boolean;\r\n  rating: number;\r\n  matchScore: number;\r\n  profileType: ProfileType;\r\n  gender?: Gender;\r\n  partnerGender?: Gender;\r\n  theme?: 'romantic' | 'adventurous';\r\n  isDemo: true;\r\n}\r\n\r\nexport const generateDemoProfiles = (count: number = 20): DemoProfile[] => {\r\n  const nombres = [\r\n    'Alejandro', 'María', 'Carlos', 'Ana', 'José', 'Laura', 'Miguel', 'Carmen',\r\n    'Antonio', 'Isabel', 'Manuel', 'Pilar', 'Francisco', 'Dolores', 'David',\r\n    'Cristina', 'Javier', 'Rosa', 'Daniel', 'Antonia', 'Rafael', 'Francisca',\r\n    'José Luis', 'Lucía', 'Jesús', 'Mercedes', 'Ángel', 'Josefa', 'Marcos',\r\n    'Elena', 'Pedro', 'Teresa', 'Sergio', 'Raquel', 'Pablo', 'Manuela'\r\n  ];\r\n\r\n  const ubicaciones = [\r\n    'Ciudad de México', 'Guadalajara', 'Monterrey', 'Puebla', 'Tijuana',\r\n    'León', 'Juárez', 'Torreón', 'Querétaro', 'San Luis Potosí',\r\n    'Mérida', 'Mexicali', 'Aguascalientes', 'Cuernavaca', 'Saltillo'\r\n  ];\r\n\r\n  const bios = [\r\n    'Aventurero en busca de nuevas experiencias y conexiones auténticas.',\r\n    'Amante de la vida, los viajes y las buenas conversaciones.',\r\n    'Explorando el mundo del lifestyle swinger con mente abierta.',\r\n    'Buscando parejas y personas afines para compartir momentos únicos.',\r\n    'Discreto, respetuoso y con ganas de conocer gente interesante.',\r\n    'Pareja liberal en busca de otras parejas para intercambios.',\r\n    'Nuevo en esto, pero con muchas ganas de aprender y disfrutar.',\r\n    'Experiencia y diversión garantizada. Siempre con respeto.'\r\n  ];\r\n\r\n  const interesesList = [\r\n    ['Viajes', 'Gastronomía', 'Música'], ['Deportes', 'Cine', 'Lectura'],\r\n    ['Arte', 'Baile', 'Fotografía'], ['Cocina', 'Yoga', 'Naturaleza'],\r\n    ['Tecnología', 'Fitness', 'Aventura'], ['Teatro', 'Vino', 'Historia']\r\n  ];\r\n\r\n  resetImageCounters();\r\n\r\n  return Array.from({ length: count }, (_, i) => {\r\n    const profileType: ProfileType = Math.random() > 0.7 ? 'couple' : 'single';\r\n    const gender: Gender = Math.random() > 0.5 ? 'male' : 'female';\r\n    const partnerGender: Gender = gender === 'male' ? 'female' : 'male';\r\n    \r\n    return {\r\n      id: uuidv4(),\r\n      name: nombres[Math.floor(Math.random() * nombres.length)],\r\n      age: Math.floor(Math.random() * 20) + 25,\r\n      location: ubicaciones[Math.floor(Math.random() * ubicaciones.length)],\r\n      distance: Math.floor(Math.random() * 50) + 1,\r\n      interests: interesesList[Math.floor(Math.random() * interesesList.length)],\r\n      image: pickProfileImage({ id: uuidv4(), name: nombres[Math.floor(Math.random() * nombres.length)], type: profileType, gender }, new Set()),\r\n      bio: bios[Math.floor(Math.random() * bios.length)],\r\n      isOnline: Math.random() > 0.3,\r\n      lastActive: `Hace ${Math.floor(Math.random() * 60)} min`,\r\n      isVerified: Math.random() > 0.4,\r\n      isPremium: Math.random() > 0.7,\r\n      rating: Math.floor(Math.random() * 2) + 4,\r\n      matchScore: Math.floor(Math.random() * 30) + 70,\r\n      profileType,\r\n      gender,\r\n      partnerGender: profileType === 'couple' ? partnerGender : undefined,\r\n      theme: Math.random() > 0.5 ? 'romantic' : 'adventurous',\r\n      isDemo: true as const\r\n    };\r\n  });\r\n};\r\n\r\nexport const demoStats = {\r\n  totalUsers: 15420,\r\n  activeToday: 2341,\r\n  newThisWeek: 187,\r\n  premiumUsers: 892,\r\n  verifiedProfiles: 7234,\r\n  successfulMatches: 3456,\r\n  averageAge: 32,\r\n  topLocation: 'Ciudad de México'\r\n};\r\n\r\nexport const demoProfiles = [\r\n  {\r\n    id: 'demo-1',\r\n    first_name: 'Ana',\r\n    last_name: 'García',\r\n    display_name: 'Ana & Carlos'\r\n  },\r\n  {\r\n    id: 'demo-6',\r\n    first_name: 'Javier',\r\n    last_name: 'Morales',\r\n    display_name: 'Javier M.',\r\n    age: 31,\r\n    bio: 'Emprendedor de Tijuana con éxito en los negocios y mente abierta para nuevas experiencias. Busco conexiones auténticas y momentos especiales.',\r\n    email: 'javier.morales@demo.com',\r\n    profile_type: 'single',\r\n    is_demo: true,\r\n    is_verified: false,\r\n    is_premium: false,\r\n    role: 'user',\r\n    latitude: 32.5149,\r\n    longitude: -117.0382,\r\n    created_at: '2024-02-20T13:10:00Z',\r\n    updated_at: '2024-02-20T13:10:00Z',\r\n    avatar_url: '/profile-2.jpg',\r\n    interests: ['negocios', 'networking', 'lujo', 'experiencias_exclusivas', 'vida_social'],\r\n    location: 'Tijuana, Baja California'\r\n  },\r\n  {\r\n    id: 'demo-2',\r\n    first_name: 'Carlos',\r\n    last_name: 'Rodríguez',\r\n    display_name: 'Carlos R.',\r\n    age: 32,\r\n    bio: 'Soltero de Guadalajara con mente abierta. Disfruto de la buena compañía, eventos sociales y experiencias nuevas. Busco conexiones genuinas.',\r\n    email: 'carlos.demo@complicesconecta.com',\r\n    profile_type: 'single',\r\n    is_demo: true,\r\n    is_verified: false,\r\n    is_premium: true,\r\n    role: 'user',\r\n    location: 'Barcelona, España',\r\n    interests: ['Lifestyle Swinger', 'Intercambio de Parejas', 'Eventos Lifestyle', 'Mentalidad Abierta'],\r\n    created_at: '2024-01-16T14:30:00Z',\r\n    updated_at: '2024-01-16T14:30:00Z'\r\n  },\r\n  {\r\n    id: 'demo-couple-1',\r\n    first_name: 'María & Juan',\r\n    last_name: 'López',\r\n    display_name: 'María & Juan',\r\n    age: 29,\r\n    bio: 'Pareja aventurera buscando nuevas experiencias y amistades.',\r\n    email: 'pareja.demo@complicesconecta.com',\r\n    profile_type: 'couple',\r\n    is_demo: true,\r\n    is_verified: true,\r\n    is_premium: true,\r\n    role: 'user',\r\n    location: 'Valencia, España',\r\n    interests: ['Intercambio de Parejas', 'Fiestas Temáticas', 'Clubs Privados', 'Experiencias Nuevas'],\r\n    created_at: '2024-01-17T09:15:00Z',\r\n    updated_at: '2024-01-17T09:15:00Z'\r\n  },\r\n  {\r\n    id: 'demo-3',\r\n    first_name: 'Laura',\r\n    last_name: 'Martínez',\r\n    display_name: 'Laura M.',\r\n    age: 26,\r\n    bio: 'Artista y diseñadora. Me encanta crear y conectar con personas creativas.',\r\n    email: 'laura.demo@complicesconecta.com',\r\n    profile_type: 'single',\r\n    is_demo: true,\r\n    is_verified: true,\r\n    is_premium: false,\r\n    role: 'user',\r\n    location: 'Sevilla, España',\r\n    interests: ['Arte Erótico', 'Fotografía Erótica', 'Ambiente Sensual', 'Conexiones Auténticas'],\r\n    created_at: '2024-01-18T16:45:00Z',\r\n    updated_at: '2024-01-18T16:45:00Z'\r\n  },\r\n  {\r\n    id: 'demo-4',\r\n    first_name: 'Miguel',\r\n    last_name: 'Fernández',\r\n    display_name: 'Miguel F.',\r\n    age: 35,\r\n    bio: 'Chef profesional y amante de la buena comida. Siempre experimentando.',\r\n    email: 'miguel.demo@complicesconecta.com',\r\n    profile_type: 'single',\r\n    is_demo: true,\r\n    is_verified: false,\r\n    is_premium: false,\r\n    role: 'user',\r\n    location: 'Bilbao, España',\r\n    interests: ['Cenas Íntimas', 'Cócteles Afrodisíacos', 'Experiencias Sensuales', 'Diversión Adulta'],\r\n    created_at: '2024-01-19T11:20:00Z',\r\n    updated_at: '2024-01-19T11:20:00Z'\r\n  }\r\n];\r\n\r\nexport const demoMessages = [\r\n  {\r\n    id: 'msg-1',\r\n    content: '¡Hola! Me encanta tu perfil, tenemos muchos intereses en común.',\r\n    sender_id: 'demo-1',\r\n    receiver_id: 'demo-2',\r\n    created_at: '2024-01-20T10:30:00Z',\r\n    read: false\r\n  },\r\n  {\r\n    id: 'msg-2',\r\n    content: 'Gracias Ana! También me llamó la atención tu pasión por la fotografía.',\r\n    sender_id: 'demo-2',\r\n    receiver_id: 'demo-1',\r\n    created_at: '2024-01-20T10:45:00Z',\r\n    read: true\r\n  },\r\n  {\r\n    id: 'msg-3',\r\n    content: '¿Te gustaría quedar para tomar un café y hablar de viajes?',\r\n    sender_id: 'demo-1',\r\n    receiver_id: 'demo-2',\r\n    created_at: '2024-01-20T11:00:00Z',\r\n    read: false\r\n  }\r\n];\r\n\r\nexport const demoInvitations = [\r\n  {\r\n    id: 'inv-1',\r\n    from_profile: 'demo-3',\r\n    to_profile: 'demo-1',\r\n    type: 'profile',\r\n    message: 'Me encantaría conocerte mejor, ¿te interesa conectar?',\r\n    status: 'pending',\r\n    created_at: '2024-01-20T09:00:00Z'\r\n  },\r\n  {\r\n    id: 'inv-2',\r\n    from_profile: 'demo-4',\r\n    to_profile: 'demo-couple-1',\r\n    type: 'gallery',\r\n    message: 'Hola! Me gustaría ver más fotos de vuestras aventuras.',\r\n    status: 'accepted',\r\n    created_at: '2024-01-19T15:30:00Z'\r\n  }\r\n];\r\n\r\nexport const demoEvents = [\r\n  {\r\n    id: 'event-1',\r\n    title: 'Noche de Fotografía',\r\n    description: 'Encuentro para amantes de la fotografía nocturna',\r\n    date: '2024-02-15T20:00:00Z',\r\n    location: 'Parque del Retiro, Madrid',\r\n    organizer: 'demo-1',\r\n    attendees: ['demo-2', 'demo-3'],\r\n    max_attendees: 10,\r\n    is_premium: false\r\n  },\r\n  {\r\n    id: 'event-2',\r\n    title: 'Cena Gastronómica',\r\n    description: 'Experiencia culinaria con chef profesional',\r\n    date: '2024-02-20T19:30:00Z',\r\n    location: 'Restaurante Demo, Barcelona',\r\n    organizer: 'demo-4',\r\n    attendees: ['demo-couple-1'],\r\n    max_attendees: 8,\r\n    is_premium: true\r\n  }\r\n];\r\n\r\nexport const demoMatches = [\r\n  {\r\n    id: 'match-1',\r\n    profile1: 'demo-1',\r\n    profile2: 'demo-2',\r\n    compatibility_score: 85,\r\n    matched_at: '2024-01-20T08:00:00Z',\r\n    status: 'active'\r\n  },\r\n  {\r\n    id: 'match-2',\r\n    profile1: 'demo-3',\r\n    profile2: 'demo-4',\r\n    compatibility_score: 72,\r\n    matched_at: '2024-01-19T14:20:00Z',\r\n    status: 'pending'\r\n  }\r\n];\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\examples\\hcaptcha-example.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'handleVerify' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":24,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":24,"endColumn":21},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'handleError' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":38,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":38,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'handleExpire' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":45,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":45,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Validado por Auditoría ComplicesConecta v2.1.2\r\n// Fecha: 2025-01-06\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { XCircle, CheckCircle, Shield } from 'lucide-react';\r\nimport { logger } from '@/lib/logger';\r\n\r\n/**\r\n * Ejemplo completo de implementación de hCaptcha\r\n * Muestra cómo integrar y verificar hCaptcha en un formulario\r\n */\r\nexport const HCaptchaExample: React.FC = () => {\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [token, setToken] = useState<string>('');\r\n  const [error, setError] = useState<string>('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Site key de hCaptcha (obtener de hcaptcha.com)\r\n  const HCAPTCHA_SITE_KEY = import.meta.env.VITE_HCAPTCHA_SITE_KEY || '10000000-ffff-ffff-ffff-000000000001';\r\n\r\n  const handleVerify = (captchaToken: string, isValid: boolean) => {\r\n    logger.info('Verificación hCaptcha:', { token: captchaToken.substring(0, 10) + '...', valid: isValid });\r\n    \r\n    if (isValid) {\r\n      setToken(captchaToken);\r\n      setIsVerified(true);\r\n      setError('');\r\n    } else {\r\n      setToken('');\r\n      setIsVerified(false);\r\n      setError('Verificación de hCaptcha falló');\r\n    }\r\n  };\r\n\r\n  const handleError = (errorMessage: string) => {\r\n    logger.error('Error hCaptcha:', { error: errorMessage });\r\n    setError(`Error: ${errorMessage}`);\r\n    setIsVerified(false);\r\n    setToken('');\r\n  };\r\n\r\n  const handleExpire = () => {\r\n    logger.info('hCaptcha expirado', {});\r\n    setIsVerified(false);\r\n    setToken('');\r\n    setError('La verificación ha expirado. Por favor, verifica nuevamente.');\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!isVerified || !token) {\r\n      setError('Por favor, completa la verificación hCaptcha');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      // Aquí harías la llamada a tu API para procesar el formulario\r\n      // La API debe verificar el token en el servidor\r\n      logger.info('Enviando formulario con token:', { token: token.substring(0, 10) + '...' });\r\n      \r\n      // Simulación de envío\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      alert('¡Formulario enviado exitosamente!');\r\n      \r\n    } catch (error) {\r\n      logger.error('Error enviando formulario:', { error });\r\n      setError('Error al enviar el formulario');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-4\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Shield className=\"h-5 w-5\" />\r\n            Ejemplo hCaptcha\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          {/* Widget de hCaptcha */}\r\n          <div className=\"space-y-2\">\r\n            <label className=\"text-sm font-medium\">\r\n              Verificación de seguridad:\r\n            </label>\r\n            <div className=\"flex justify-center p-4 border-2 border-dashed border-gray-300 rounded-lg\">\r\n              <div className=\"text-center text-gray-500\">\r\n                <Shield className=\"h-8 w-8 mx-auto mb-2\" />\r\n                <p>hCaptcha Widget Placeholder</p>\r\n                <p className=\"text-sm\">Install @hcaptcha/react-hcaptcha to enable</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Estado de verificación */}\r\n          {isVerified && (\r\n            <Alert className=\"border-green-500 bg-green-50 dark:bg-green-950\">\r\n              <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n              <AlertDescription className=\"text-green-700 dark:text-green-300\">\r\n                ✅ Verificación completada exitosamente\r\n              </AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {/* Errores */}\r\n          {error && (\r\n            <Alert className=\"border-red-500 bg-red-50 dark:bg-red-950\">\r\n              <XCircle className=\"h-4 w-4 text-red-600\" />\r\n              <AlertDescription className=\"text-red-700 dark:text-red-300\">\r\n                {error}\r\n              </AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {/* Botón de envío */}\r\n          <Button \r\n            onClick={handleSubmit}\r\n            disabled={!isVerified || isSubmitting}\r\n            className=\"w-full\"\r\n          >\r\n            {isSubmitting ? 'Enviando...' : 'Enviar Formulario'}\r\n          </Button>\r\n\r\n          {/* Información de desarrollo */}\r\n          <div className=\"text-xs text-muted-foreground space-y-1\">\r\n            <p><strong>Site Key:</strong> {HCAPTCHA_SITE_KEY}</p>\r\n            <p><strong>Token:</strong> {token ? `${token.substring(0, 20)}...` : 'No generado'}</p>\r\n            <p><strong>Estado:</strong> {isVerified ? 'Verificado' : 'Pendiente'}</p>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\use-mobile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\use-toast.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'actionTypes' is assigned a value but only used as a type. Allowed unused vars must match /^_/u.","line":18,"column":7,"nodeType":null,"messageId":"usedOnlyAsType","endLine":18,"endColumn":18}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import * as React from \"react\"\r\n\r\nimport type {\r\n  ToastActionElement,\r\n  ToastProps,\r\n} from \"@/components/ui/toast\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 5000\r\n\r\ntype ToasterToast = ToastProps & {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n  ADD_TOAST: \"ADD_TOAST\",\r\n  UPDATE_TOAST: \"UPDATE_TOAST\",\r\n  DISMISS_TOAST: \"DISMISS_TOAST\",\r\n  REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\r\n  return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"]\r\n      toast: ToasterToast\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"]\r\n      toast: Partial<ToasterToast>\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"]\r\n      toastId?: ToasterToast[\"id\"]\r\n    }\r\n\r\ninterface State {\r\n  toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return\r\n  }\r\n\r\n    if (typeof window === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId)\r\n    dispatch({\r\n      type: \"REMOVE_TOAST\",\r\n      toastId: toastId,\r\n    })\r\n  }, TOAST_REMOVE_DELAY)\r\n\r\n  toastTimeouts.set(toastId, timeout)\r\n}\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      }\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      }\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId)\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id)\r\n        })\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      }\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      }\r\n  }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action)\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState)\r\n  })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n  const id = genId()\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: \"UPDATE_TOAST\",\r\n      toast: { ...props, id },\r\n    })\r\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\r\n\r\n  dispatch({\r\n    type: \"ADD_TOAST\",\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss()\r\n      },\r\n    },\r\n  })\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  }\r\n}\r\n\r\nfunction useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState)\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState)\r\n    return () => {\r\n      const index = listeners.indexOf(setState)\r\n      if (index > -1) {\r\n        listeners.splice(index, 1)\r\n      }\r\n    }\r\n  }, [state])\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\r\n  }\r\n}\r\n\r\nexport { useToast, toast }\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useAuth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useAuthMode.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useBiometricAuth.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'data' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":92,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":92,"endColumn":19},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'credentialId' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":165,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":165,"endColumn":25}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useCallback } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { logger } from '@/lib/logger';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\n/**\r\n * Hook para gestión de autenticación biométrica\r\n * Integra WebAuthn API para navegadores y gestiona configuración del usuario\r\n */\r\n\r\ninterface BiometricAuthResult {\r\n  success: boolean;\r\n  method: 'fingerprint' | 'face' | 'biometric';\r\n  confidence: number;\r\n  sessionId: string;\r\n  expiresAt: string;\r\n  error?: string;\r\n}\r\n\r\ninterface BiometricAvailability {\r\n  available: boolean;\r\n  methods: string[];\r\n}\r\n\r\nexport const useBiometricAuth = () => {\r\n  const { user } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEnabled, setIsEnabled] = useState<boolean | null>(null);\r\n\r\n  /**\r\n   * Verificar disponibilidad de autenticación biométrica\r\n   */\r\n  const checkBiometricAvailability = useCallback(async (): Promise<BiometricAvailability> => {\r\n    try {\r\n      // Verificar soporte de WebAuthn\r\n      if (!window.PublicKeyCredential) {\r\n        return { available: false, methods: [] };\r\n      }\r\n\r\n      const available = await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\r\n      \r\n      return {\r\n        available,\r\n        methods: available ? ['fingerprint', 'face'] : []\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error verificando disponibilidad biométrica:', { \r\n        error: error instanceof Error ? error.message : String(error) \r\n      });\r\n      return { available: false, methods: [] };\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Obtener configuración biométrica del usuario\r\n   */\r\n  const getBiometricConfig = useCallback(async (): Promise<boolean> => {\r\n    if (!user?.id) return false;\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select('biometric_enabled')\r\n        .eq('user_id', user.id)\r\n        .single() as { data: any | null, error: any };\r\n\r\n      if (error) {\r\n        logger.warn('Error obteniendo configuración biométrica:', { error: error.message });\r\n        return false;\r\n      }\r\n\r\n      const enabled = data?.biometric_enabled || false;\r\n      setIsEnabled(enabled);\r\n      return enabled;\r\n    } catch (error) {\r\n      logger.error('Error en getBiometricConfig:', { \r\n        error: error instanceof Error ? error.message : String(error) \r\n      });\r\n      return false;\r\n    }\r\n  }, [user?.id]);\r\n\r\n  /**\r\n   * Activar/desactivar autenticación biométrica\r\n   */\r\n  const setBiometricEnabled = useCallback(async (enabled: boolean): Promise<boolean> => {\r\n    if (!user?.id) return false;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .update({ \r\n          // Removed biometric_enabled as it doesn't exist in profiles table\r\n          updated_at: new Date().toISOString()\r\n        } as any)\r\n        .eq('id', user.id);\r\n\r\n      if (error) {\r\n        logger.error('Error actualizando configuración biométrica:', { error: error.message });\r\n        return false;\r\n      }\r\n\r\n      setIsEnabled(enabled);\r\n      logger.info('Configuración biométrica actualizada:', { enabled, userId: user.id });\r\n      return true;\r\n    } catch (error) {\r\n      logger.error('Error en setBiometricEnabled:', { \r\n        error: error instanceof Error ? error.message : String(error) \r\n      });\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user?.id]);\r\n\r\n  /**\r\n   * Registrar credencial biométrica\r\n   */\r\n  const registerBiometric = useCallback(async (): Promise<BiometricAuthResult> => {\r\n    if (!user?.id) {\r\n      return {\r\n        success: false,\r\n        method: 'biometric',\r\n        confidence: 0,\r\n        sessionId: '',\r\n        expiresAt: '',\r\n        error: 'Usuario no autenticado'\r\n      };\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const challenge = crypto.getRandomValues(new Uint8Array(32));\r\n      \r\n      const credential = await navigator.credentials.create({\r\n        publicKey: {\r\n          challenge,\r\n          rp: {\r\n            name: \"Complices Conecta\",\r\n            id: window.location.hostname,\r\n          },\r\n          user: {\r\n            id: new TextEncoder().encode(user.id),\r\n            name: user.email || 'usuario',\r\n            displayName: user.email || 'Usuario'\r\n          },\r\n          pubKeyCredParams: [{ alg: -7, type: \"public-key\" }],\r\n          authenticatorSelection: {\r\n            authenticatorAttachment: \"platform\",\r\n            userVerification: \"required\"\r\n          },\r\n          timeout: 60000,\r\n          attestation: \"direct\"\r\n        }\r\n      }) as PublicKeyCredential;\r\n\r\n      if (!credential) {\r\n        throw new Error('No se pudo crear la credencial');\r\n      }\r\n\r\n      // Guardar credencial en base de datos\r\n      const credentialId = Array.from(new Uint8Array(credential.rawId))\r\n        .map(b => b.toString(16).padStart(2, '0'))\r\n        .join('');\r\n\r\n      const sessionId = crypto.randomUUID();\r\n      const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(); // 24 horas\r\n\r\n      const deviceId = 'web-device-' + Date.now();\r\n      const method = 'fingerprint';\r\n      \r\n      // Store biometric session in localStorage instead of non-existent table\r\n      const sessionData = {\r\n        user_id: user.id,\r\n        session_type: method,\r\n        success: true,\r\n        created_at: new Date().toISOString()\r\n      };\r\n      \r\n      localStorage.setItem('biometric_session', JSON.stringify(sessionData));\r\n      logger.info('Sesión biométrica guardada localmente:', sessionData);\r\n\r\n      // No error variable exists after localStorage implementation\r\n\r\n      logger.info('Registro biométrico exitoso:', { userId: user.id, deviceId });\r\n\r\n      return {\r\n        success: true,\r\n        method,\r\n        confidence: 1.0,\r\n        sessionId,\r\n        expiresAt\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error en registro biométrico:', { \r\n        error: error instanceof Error ? error.message : String(error) \r\n      });\r\n      \r\n      return {\r\n        success: false,\r\n        method: 'biometric',\r\n        confidence: 0,\r\n        sessionId: '',\r\n        expiresAt: '',\r\n        error: error instanceof Error ? error.message : 'Error desconocido'\r\n      };\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user?.id, user?.email]);\r\n\r\n  /**\r\n   * Autenticar con biometría\r\n   */\r\n  const authenticateWithBiometric = useCallback(async (method: 'fingerprint' | 'face'): Promise<BiometricAuthResult> => {\r\n    if (!user?.id) {\r\n      return {\r\n        success: false,\r\n        method: 'biometric',\r\n        confidence: 0,\r\n        sessionId: '',\r\n        expiresAt: '',\r\n        error: 'Usuario no autenticado'\r\n      };\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const challenge = crypto.getRandomValues(new Uint8Array(32));\r\n\r\n      const assertion = await navigator.credentials.get({\r\n        publicKey: {\r\n          challenge,\r\n          timeout: 60000,\r\n          userVerification: \"required\"\r\n        }\r\n      }) as PublicKeyCredential;\r\n\r\n      if (!assertion) {\r\n        throw new Error('Autenticación fallida');\r\n      }\r\n\r\n      const sessionId = crypto.randomUUID();\r\n      const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString();\r\n\r\n      // Update biometric session in localStorage instead of non-existent table\r\n      const existingSession = localStorage.getItem('biometric_session');\r\n      if (existingSession) {\r\n        const sessionData = JSON.parse(existingSession);\r\n        sessionData.last_used_at = new Date().toISOString();\r\n        sessionData.is_active = true;\r\n        localStorage.setItem('biometric_session', JSON.stringify(sessionData));\r\n        logger.info('Sesión biométrica actualizada localmente:', sessionData);\r\n      }\r\n\r\n      // updateError variable no longer exists after localStorage implementation\r\n\r\n      logger.info('Autenticación biométrica exitosa:', { userId: user.id, sessionId });\r\n\r\n      return {\r\n        success: true,\r\n        method,\r\n        confidence: 1.0,\r\n        sessionId,\r\n        expiresAt\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error en autenticación biométrica:', { \r\n        error: error instanceof Error ? error.message : String(error) \r\n      });\r\n      \r\n      return {\r\n        success: false,\r\n        method: 'biometric',\r\n        confidence: 0,\r\n        sessionId: '',\r\n        expiresAt: '',\r\n        error: error instanceof Error ? error.message : 'Error de autenticación'\r\n      };\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [user?.id]);\r\n\r\n  /**\r\n   * Verificar sesión biométrica activa\r\n   */\r\n  const verifyBiometricSession = useCallback(async (sessionId: string): Promise<boolean> => {\r\n    if (!user?.id) return false;\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('biometric_sessions')\r\n        .select('expires_at, is_active')\r\n        .eq('session_id', sessionId)\r\n        .eq('user_id', user.id)\r\n        .single() as { data: any | null, error: any };\r\n\r\n      if (error || !data) {\r\n        return false;\r\n      }\r\n\r\n      const now = new Date();\r\n      const expiresAt = new Date(data.expires_at);\r\n\r\n      if (now > expiresAt || !data.is_active) {\r\n        // Limpiar sesión expirada\r\n        await supabase\r\n          .from('biometric_sessions')\r\n          .update({ is_active: false } as any)\r\n          .eq('session_id', sessionId);\r\n        \r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.error('Error verificando sesión biométrica:', { \r\n        error: error instanceof Error ? error.message : String(error) \r\n      });\r\n      return false;\r\n    }\r\n  }, [user?.id]);\r\n\r\n  /**\r\n   * Limpiar sesiones biométricas del usuario\r\n   */\r\n  const clearBiometricSessions = useCallback(async (sessionId?: string): Promise<boolean> => {\r\n    if (!user?.id) return false;\r\n\r\n    try {\r\n      let query = supabase\r\n        .from('biometric_sessions')\r\n        .update({ success: false });\r\n      \r\n      if (sessionId) {\r\n        query = query.eq('session_id', sessionId);\r\n      } else {\r\n        query = query.eq('user_id', user.id);\r\n      }\r\n      \r\n      const { error } = await query;\r\n\r\n      if (error) {\r\n        logger.error('Error limpiando sesiones biométricas:', { error: error.message });\r\n        return false;\r\n      }\r\n\r\n      logger.info('Sesiones biométricas limpiadas:', { userId: user.id });\r\n      return true;\r\n    } catch (error) {\r\n      logger.error('Error en clearBiometricSessions:', { \r\n        error: error instanceof Error ? error.message : String(error) \r\n      });\r\n      return false;\r\n    }\r\n  }, [user?.id]);\r\n\r\n  return {\r\n    isLoading,\r\n    isEnabled,\r\n    checkBiometricAvailability,\r\n    getBiometricConfig,\r\n    setBiometricEnabled,\r\n    registerBiometric,\r\n    authenticateWithBiometric,\r\n    verifyBiometricSession,\r\n    clearBiometricSessions\r\n  };\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useCouplePhotos.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'uploadData' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":80,"column":21,"nodeType":null,"messageId":"unusedVar","endLine":80,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Hook para gestión de fotos de pareja con Supabase\r\nimport { useState, useEffect } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { logger } from '@/lib/logger';\r\n\r\ninterface CouplePhoto {\r\n  id: string;\r\n  url: string;\r\n  partner: 'el' | 'ella';\r\n  isMain: boolean;\r\n  uploadedAt: Date;\r\n  profileId: string;\r\n}\r\n\r\ninterface UseCouplePhotosReturn {\r\n  photos: CouplePhoto[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  uploadPhoto: (file: File, partner: 'el' | 'ella') => Promise<void>;\r\n  deletePhoto: (photoId: string) => Promise<void>;\r\n  setMainPhoto: (photoId: string, partner: 'el' | 'ella') => Promise<void>;\r\n  refreshPhotos: () => Promise<void>;\r\n}\r\n\r\nexport const useCouplePhotos = (profileId?: string): UseCouplePhotosReturn => {\r\n  const { user } = useAuth();\r\n  const [photos, setPhotos] = useState<CouplePhoto[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const currentProfileId = profileId || user?.id;\r\n\r\n  // Cargar fotos del perfil\r\n  const loadPhotos = async () => {\r\n    if (!currentProfileId) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const { data, error: fetchError } = await supabase\r\n        .from('couple_profiles')\r\n        .select('couple_images, id, created_at')\r\n        .eq('id', currentProfileId!)\r\n        .single();\r\n\r\n      if (fetchError) throw fetchError;\r\n\r\n      const photosWithUrls = data?.couple_images?.map((url, index) => ({\r\n        id: `${data.id}-${index}`,\r\n        url: url,\r\n        partner: (index % 2 === 0 ? 'el' : 'ella') as 'el' | 'ella',\r\n        isMain: index === 0,\r\n        profileId: data.id,\r\n        uploadedAt: new Date(data.created_at || new Date())\r\n      })) || [];\r\n\r\n      setPhotos(photosWithUrls);\r\n    } catch (err) {\r\n      logger.error('Error loading couple photos:', { error: err instanceof Error ? err.message : String(err) });\r\n      setError('Error al cargar las fotos');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Subir nueva foto\r\n  const uploadPhoto = async (file: File, partner: 'el' | 'ella') => {\r\n    if (!currentProfileId) throw new Error('No hay usuario autenticado');\r\n\r\n    try {\r\n      setError(null);\r\n\r\n      // Generar nombre único para el archivo\r\n      const fileExt = file.name.split('.').pop();\r\n      const fileName = `${currentProfileId}/${partner}/${Date.now()}.${fileExt}`;\r\n\r\n      // Subir archivo a Supabase Storage\r\n      const { data: uploadData, error: uploadError } = await supabase.storage\r\n        .from('profile-images')\r\n        .upload(fileName, file, {\r\n          cacheControl: '3600',\r\n          upsert: false\r\n        });\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      // Obtener URL pública\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('profile-images')\r\n        .getPublicUrl(fileName);\r\n\r\n      // Verificar si es la primera foto de este partner (será principal por defecto)\r\n      const existingPhotos = photos.filter(p => p.partner === partner);\r\n      const isFirstPhoto = existingPhotos.length === 0;\r\n\r\n      // Obtener las imágenes actuales del perfil\r\n      const { data: currentProfile, error: profileError } = await supabase\r\n        .from('couple_profiles')\r\n        .select('couple_images')\r\n        .eq('id', currentProfileId!)\r\n        .single();\r\n\r\n      if (profileError) throw profileError;\r\n\r\n      // Agregar la nueva imagen al array\r\n      const updatedImages = [...(currentProfile.couple_images || []), publicUrl];\r\n\r\n      // Actualizar el perfil con las nuevas imágenes\r\n      const { error: insertError } = await supabase\r\n        .from('couple_profiles')\r\n        .update({ couple_images: updatedImages })\r\n        .eq('id', currentProfileId!);\r\n\r\n      if (insertError) throw insertError;\r\n\r\n      // Actualizar estado local\r\n      const newPhotoData: CouplePhoto = {\r\n        id: `${currentProfileId}-${updatedImages.length - 1}`,\r\n        url: publicUrl,\r\n        partner,\r\n        isMain: isFirstPhoto,\r\n        uploadedAt: new Date(),\r\n        profileId: currentProfileId\r\n      };\r\n\r\n      setPhotos(prev => [newPhotoData, ...prev]);\r\n\r\n    } catch (err) {\r\n      logger.error('Error uploading photo:', { error: err instanceof Error ? err.message : String(err) });\r\n      throw new Error('Error al subir la foto');\r\n    }\r\n  };\r\n\r\n  // Eliminar foto\r\n  const deletePhoto = async (photoId: string) => {\r\n    try {\r\n      setError(null);\r\n\r\n      // Obtener información de la foto\r\n      const photoToDelete = photos.find(p => p.id === photoId);\r\n      if (!photoToDelete) throw new Error('Foto no encontrada');\r\n\r\n      // Obtener las imágenes actuales del perfil\r\n      const { data: currentProfile, error: fetchError } = await supabase\r\n        .from('couple_profiles')\r\n        .select('couple_images')\r\n        .eq('id', currentProfileId!)\r\n        .single();\r\n\r\n      if (fetchError) throw fetchError;\r\n\r\n      // Obtener la URL de la imagen a eliminar\r\n      const photoToDeleteUrl = photoToDelete.url;\r\n      \r\n      // Eliminar archivo de storage (extraer path de la URL)\r\n      const urlParts = photoToDeleteUrl.split('/');\r\n      const storagePath = urlParts.slice(-3).join('/');\r\n      const { error: storageError } = await supabase.storage\r\n        .from('profile-images')\r\n        .remove([storagePath]);\r\n\r\n      if (storageError) {\r\n        logger.warn('Error deleting from storage:', storageError);\r\n      }\r\n\r\n      // Eliminar de la base de datos (remover de array)\r\n      const updatedImages = currentProfile.couple_images?.filter(url => url !== photoToDeleteUrl) || [];\r\n      const { error: dbError } = await supabase\r\n        .from('couple_profiles')\r\n        .update({ couple_images: updatedImages })\r\n        .eq('id', currentProfileId!);\r\n\r\n      if (dbError) throw dbError;\r\n\r\n      // La lógica de foto principal se maneja automáticamente con el orden del array\r\n\r\n      // Actualizar estado local\r\n      setPhotos(prev => prev.filter(p => p.id !== photoId));\r\n\r\n    } catch (err) {\r\n      logger.error('Error deleting photo:', { error: err instanceof Error ? err.message : String(err) });\r\n      throw new Error('Error al eliminar la foto');\r\n    }\r\n  };\r\n\r\n  // Establecer foto principal\r\n  const setMainPhoto = async (photoId: string, partner: 'el' | 'ella') => {\r\n    try {\r\n      setError(null);\r\n\r\n      // Obtener las imágenes actuales\r\n      const { data: currentProfile, error: profileError } = await supabase\r\n        .from('couple_profiles')\r\n        .select('couple_images')\r\n        .eq('id', currentProfileId!)\r\n        .single();\r\n\r\n      if (profileError) throw profileError;\r\n\r\n      // Reordenar array para poner la imagen seleccionada al principio\r\n      const photoToMove = photos.find(p => p.id === photoId);\r\n      if (!photoToMove) throw new Error('Foto no encontrada');\r\n      \r\n      const updatedImages = currentProfile.couple_images?.filter(url => url !== photoToMove.url) || [];\r\n      updatedImages.unshift(photoToMove.url);\r\n\r\n      // Actualizar el perfil\r\n      const { error: updateError } = await supabase\r\n        .from('couple_profiles')\r\n        .update({ couple_images: updatedImages })\r\n        .eq('id', currentProfileId!);\r\n\r\n      if (updateError) throw updateError;\r\n\r\n      // Actualizar estado local\r\n      setPhotos(prev => prev.map(photo => ({\r\n        ...photo,\r\n        isMain: photo.partner === partner ? photo.id === photoId : photo.isMain\r\n      })));\r\n\r\n    } catch (err) {\r\n      logger.error('Error setting main photo:', { error: err instanceof Error ? err.message : String(err) });\r\n      throw new Error('Error al establecer foto principal');\r\n    }\r\n  };\r\n\r\n  // Refrescar fotos\r\n  const refreshPhotos = async () => {\r\n    await loadPhotos();\r\n  };\r\n\r\n  // Cargar fotos al montar el componente\r\n  useEffect(() => {\r\n    if (currentProfileId) {\r\n      loadPhotos();\r\n    }\r\n  }, [currentProfileId]);\r\n\r\n  return {\r\n    photos,\r\n    loading,\r\n    error,\r\n    uploadPhoto,\r\n    deletePhoto,\r\n    setMainPhoto,\r\n    refreshPhotos\r\n  };\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useCoupleProfile.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useFeatures.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useGeolocation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useInterests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useOnlineStatus.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'userId' is defined but never used. Allowed unused args must match /^_/u.","line":23,"column":37,"nodeType":null,"messageId":"unusedVar","endLine":23,"endColumn":43}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\r\n\r\nexport const useOnlineStatus = () => {\r\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\r\n\r\n  useEffect(() => {\r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  return isOnline;\r\n};\r\n\r\n// Hook para simular estado online/offline de usuarios demo\r\nexport const useUserOnlineStatus = (userId?: string) => {\r\n  const [userOnlineStatus, setUserOnlineStatus] = useState<Record<string, boolean>>({});\r\n  const systemOnline = useOnlineStatus();\r\n\r\n  useEffect(() => {\r\n    // Simular estados online/offline aleatorios para usuarios demo\r\n    const interval = setInterval(() => {\r\n      setUserOnlineStatus(prev => {\r\n        const newStatus = { ...prev };\r\n        \r\n        // Simular cambios aleatorios de estado para usuarios demo\r\n        const demoUsers = ['demo-user-1', 'demo-user-2', 'demo-user-3', 'demo-user-4'];\r\n        demoUsers.forEach(user => {\r\n          // 80% probabilidad de estar online si el sistema está online\r\n          newStatus[user] = systemOnline ? Math.random() > 0.2 : false;\r\n        });\r\n        \r\n        return newStatus;\r\n      });\r\n    }, 30000); // Actualizar cada 30 segundos\r\n\r\n    return () => clearInterval(interval);\r\n  }, [systemOnline]);\r\n\r\n  const getUserOnlineStatus = (userId: string): boolean => {\r\n    if (!systemOnline) return false;\r\n    return userOnlineStatus[userId] ?? Math.random() > 0.3; // Por defecto 70% online\r\n  };\r\n\r\n  const getLastSeenTime = (userId: string): string => {\r\n    if (getUserOnlineStatus(userId)) return 'Ahora';\r\n    \r\n    const randomMinutes = Math.floor(Math.random() * 120) + 1; // 1-120 minutos\r\n    if (randomMinutes < 60) {\r\n      return `Hace ${randomMinutes} min`;\r\n    } else {\r\n      const hours = Math.floor(randomMinutes / 60);\r\n      return `Hace ${hours}h`;\r\n    }\r\n  };\r\n\r\n  return {\r\n    getUserOnlineStatus,\r\n    getLastSeenTime,\r\n    systemOnline\r\n  };\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\usePersistedState.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_jsonError' is defined but never used.","line":37,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":37,"endColumn":26},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":44,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":44,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":70,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":70,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":85,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":85,"endColumn":24},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'_error' is defined but never used.","line":106,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":106,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useCallback } from 'react';\r\nimport { logger } from '@/lib/logger';\r\n\r\n/**\r\n * Hook seguro para persistir estado en localStorage con compatibilidad SSR\r\n * Reemplaza el uso directo de localStorage en toda la aplicación\r\n * \r\n * @param key - Clave única para localStorage\r\n * @param defaultValue - Valor por defecto si no existe en localStorage\r\n * @returns [state, setState] - Tupla con estado y función para actualizarlo\r\n */\r\nexport function usePersistedState<T>(\r\n  key: string,\r\n  defaultValue: T\r\n): [T, (value: T | ((prev: _T) => T)) => void] {\r\n  // Estado inicial con verificación SSR-safe\r\n  const [state, setState] = useState<T>(() => {\r\n    // Verificar si estamos en el cliente (no SSR)\r\n    if (typeof window === 'undefined') {\r\n      return defaultValue;\r\n    }\r\n    \r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      if (item === null) {\r\n        return defaultValue;\r\n      }\r\n      \r\n      // Intentar parsear como JSON primero\r\n      try {\r\n        const parsed = JSON.parse(item);\r\n        // Solo loggear en desarrollo o para keys críticas\r\n        if (process.env.NODE_ENV === 'development' || key.includes('demo_') || key.includes('auth_')) {\r\n          logger.info('Estado cargado desde localStorage:', { key, hasValue: !!parsed });\r\n        }\r\n        return parsed;\r\n      } catch (_jsonError) {\r\n        // Si falla JSON, tratar como string simple\r\n        if (process.env.NODE_ENV === 'development' || key.includes('demo_') || key.includes('auth_')) {\r\n          logger.info('Estado cargado desde localStorage (string):', { key, value: item });\r\n        }\r\n        return item as T;\r\n      }\r\n    } catch (_error) {\r\n      logger.error('Error leyendo localStorage:', { key, error: String(error) });\r\n      return defaultValue;\r\n    }\r\n  });\r\n\r\n  // Función para actualizar estado y localStorage\r\n  const setValue = useCallback((value: T | ((prev: _T) => T)) => {\r\n    try {\r\n      const valueToStore = value instanceof Function ? value(state) : value;\r\n      setState(valueToStore);\r\n      \r\n      // Solo actualizar localStorage en el cliente\r\n      if (typeof window !== 'undefined') {\r\n        if (valueToStore === null || valueToStore === undefined) {\r\n          window.localStorage.removeItem(key);\r\n          if (process.env.NODE_ENV === 'development' || key.includes('demo_') || key.includes('auth_')) {\r\n            logger.info('Valor removido de localStorage:', { key });\r\n          }\r\n        } else {\r\n          window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n          if (process.env.NODE_ENV === 'development' || key.includes('demo_') || key.includes('auth_')) {\r\n            logger.info('Valor guardado en localStorage:', { key, hasValue: !!valueToStore });\r\n          }\r\n        }\r\n      }\r\n    } catch (_error) {\r\n      logger.error('Error guardando en localStorage:', { key, error: String(error) });\r\n    }\r\n  }, [key, state]);\r\n\r\n  // Sincronizar con cambios externos de localStorage\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n    \r\n    const handleStorageChange = (__e: any) => {\r\n      if (e.key === key && e.newValue !== null) {\r\n        try {\r\n          const newValue = JSON.parse(e.newValue);\r\n          setState(newValue);\r\n          logger.info('Estado sincronizado desde storage event:', { key });\r\n        } catch (_error) {\r\n          logger.error('Error sincronizando storage event:', { key, error: String(error) });\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    return () => window.removeEventListener('storage', handleStorageChange);\r\n  }, [key]);\r\n\r\n  return [state, setValue];\r\n}\r\n\r\n/**\r\n * Hook para limpiar localStorage de forma controlada\r\n */\r\nexport function useClearPersistedState() {\r\n  return (__keys: any) => {\r\n    keys.forEach(key => {\r\n      try {\r\n        window.localStorage.removeItem(key);\r\n      } catch (_error) {\r\n        console.warn(`Error removing localStorage key \"${key}\":`, error);\r\n      }\r\n    });\r\n  };\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useProfileCache.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used. Allowed unused args must match /^_/u.","line":135,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":135,"endColumn":20}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport type { Tables } from '@/integrations/supabase/types';\r\nimport { logger } from '@/lib/logger';\r\n\r\n// Tipos para el cache de perfiles\r\ntype Profile = Tables<'profiles'>;\r\n\r\n// Keys para React Query\r\nexport const profileKeys = {\r\n  all: ['profiles'] as const,\r\n  lists: () => [...profileKeys.all, 'list'] as const,\r\n  list: (filters: string) => [...profileKeys.lists(), { filters }] as const,\r\n  details: () => [...profileKeys.all, 'detail'] as const,\r\n  detail: (id: string) => [...profileKeys.details(), id] as const,\r\n};\r\n\r\n// Hook para obtener perfil por ID con cache\r\nexport const useProfile = (userId: string | null) => {\r\n  return useQuery({\r\n    queryKey: profileKeys.detail(userId || ''),\r\n    queryFn: async (): Promise<Profile | null> => {\r\n      if (!userId) return null;\r\n      \r\n      // Comentado para reducir logs en tests\r\n      // logger.info('🔍 Cargando perfil desde Supabase:', { userId });\r\n      \r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      if (error) {\r\n        logger.error('❌ Error cargando perfil:', error);\r\n        throw error;\r\n      }\r\n\r\n      // logger.info('✅ Perfil cargado desde Supabase:', { first_name: (data as any)?.first_name });\r\n      return data;\r\n    },\r\n    enabled: !!userId,\r\n    staleTime: 5 * 60 * 1000, // 5 minutos\r\n    gcTime: 10 * 60 * 1000, // 10 minutos (antes cacheTime)\r\n    retry: 2,\r\n  });\r\n};\r\n\r\n// Hook para obtener múltiples perfiles con cache\r\nexport const useProfiles = (filters?: { \r\n  accountType?: string;\r\n  ageMin?: number;\r\n  ageMax?: number;\r\n  location?: string;\r\n  limit?: number;\r\n}) => {\r\n  const filterKey = JSON.stringify(filters || {});\r\n  \r\n  return useQuery({\r\n    queryKey: profileKeys.list(filterKey),\r\n    queryFn: async (): Promise<Profile[]> => {\r\n      // logger.info('📊 Cargando perfiles con filtros:', { limit: filters?.limit });\r\n      \r\n      let query = supabase.from('profiles').select('*');\r\n      \r\n      if (filters?.accountType) {\r\n        query = query.eq('account_type', filters.accountType);\r\n      }\r\n      \r\n      if (filters?.ageMin) {\r\n        query = query.gte('age', filters.ageMin);\r\n      }\r\n      \r\n      if (filters?.ageMax) {\r\n        query = query.lte('age', filters.ageMax);\r\n      }\r\n      \r\n      if (filters?.location) {\r\n        query = query.ilike('location', `%${filters.location}%`);\r\n      }\r\n\r\n      if (filters?.limit) {\r\n        query = query.limit(filters.limit);\r\n      }\r\n\r\n      const { data, error } = await query;\r\n\r\n      if (error) {\r\n        logger.error('❌ Error cargando perfiles:', error);\r\n        throw error;\r\n      }\r\n\r\n      // logger.info('📊 Perfiles cargados desde cache:', { count: data?.length });\r\n      return data || [];\r\n    },\r\n    staleTime: 2 * 60 * 1000, // 2 minutos\r\n    gcTime: 5 * 60 * 1000, // 5 minutos\r\n    retry: 2,\r\n  });\r\n};\r\n\r\n// Hook para actualizar perfil con invalidación de cache\r\nexport const useUpdateProfile = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async ({ profileId, updates }: { profileId: string; updates: Partial<Profile> }) => {\r\n      // logger.info('💾 Actualizando perfil en Supabase:', { profileId });\r\n      \r\n      const { data, error } = await (supabase as any)\r\n        .from('profiles')\r\n        .update({\r\n          ...updates,\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', profileId)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        logger.error('❌ Error actualizando perfil:', error);\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    },\r\n    onSuccess: (data) => {\r\n      // Invalidar cache específico del perfil\r\n      queryClient.invalidateQueries({ queryKey: profileKeys.detail(data.id) });\r\n      // Invalidar listas de perfiles\r\n      queryClient.invalidateQueries({ queryKey: profileKeys.lists() });\r\n      \r\n      // logger.info('✅ Perfil actualizado en cache:', { id: (data as any)?.id });\r\n    },\r\n    onError: (error) => {\r\n      // logger.error('❌ Error en mutación de perfil:', error);\r\n    },\r\n  });\r\n};\r\n\r\n// Hook para crear nuevo perfil\r\nexport const useCreateProfile = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: async (newProfile: Omit<Profile, 'id' | 'created_at' | 'updated_at'>) => {\r\n      // logger.info('📝 Creando nuevo perfil:', { first_name: (newProfile as any)?.first_name });\r\n      \r\n      const { data, error } = await (supabase as any)\r\n        .from('profiles')\r\n        .insert(newProfile)\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        logger.error('❌ Error creando perfil:', error);\r\n        throw error;\r\n      }\r\n\r\n      return data;\r\n    },\r\n    onSuccess: (data) => {\r\n      // Invalidar listas de perfiles para incluir el nuevo\r\n      queryClient.invalidateQueries({ queryKey: profileKeys.lists() });\r\n      // Agregar al cache individual\r\n      queryClient.setQueryData(profileKeys.detail(data.id), data);\r\n      \r\n      // logger.info('✅ Perfil creado y cache actualizado:', data.first_name);\r\n    },\r\n  });\r\n};\r\n\r\n// Utilidad para prefetch de perfiles\r\nexport const usePrefetchProfile = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return (userId: string) => {\r\n    queryClient.prefetchQuery({\r\n      queryKey: profileKeys.detail(userId),\r\n      queryFn: async () => {\r\n        const { data } = await supabase\r\n          .from('profiles')\r\n          .select('*')\r\n          .eq('id', userId)\r\n          .single();\r\n        return data;\r\n      },\r\n      staleTime: 5 * 60 * 1000,\r\n    });\r\n  };\r\n};\r\n\r\n// Hook para limpiar cache de perfiles\r\nexport const useClearProfileCache = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return {\r\n    clearAll: () => {\r\n      queryClient.removeQueries({ queryKey: profileKeys.all });\r\n      logger.info('🧹 Cache de perfiles limpiado completamente');\r\n    },\r\n    clearProfile: (userId: string) => {\r\n      queryClient.removeQueries({ queryKey: profileKeys.detail(userId) });\r\n      logger.info('🧹 Cache de perfil específico limpiado:', { userId });\r\n    },\r\n    clearLists: () => {\r\n      queryClient.removeQueries({ queryKey: profileKeys.lists() });\r\n      logger.info('🧹 Cache de listas de perfiles limpiado');\r\n    },\r\n  };\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useProfileQuery.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useProfileTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\usePushNotifications.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'pushSubscription' is defined but never used. Allowed unused args must match /^_/u.","line":204,"column":61,"nodeType":null,"messageId":"unusedVar","endLine":204,"endColumn":77}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useCallback } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { logger } from '@/lib/logger';\r\n\r\nexport interface PushNotificationPayload {\r\n  title: string;\r\n  body: string;\r\n  icon?: string;\r\n  badge?: string;\r\n  data?: Record<string, any>;\r\n  tag?: string;\r\n  requireInteraction?: boolean;\r\n}\r\n\r\nexport interface NotificationSubscription {\r\n  id?: string;\r\n  user_id: string;\r\n  endpoint: string;\r\n  p256dh_key: string;\r\n  auth_key: string;\r\n  user_agent?: string;\r\n  created_at?: string;\r\n  is_active?: boolean;\r\n}\r\n\r\ninterface UsePushNotificationsOptions {\r\n  userId?: string;\r\n  vapidPublicKey?: string;\r\n  onNotificationReceived?: (notification: PushNotificationPayload) => void;\r\n  onSubscriptionChange?: (subscription: PushSubscription | null) => void;\r\n}\r\n\r\nexport const usePushNotifications = ({\r\n  userId,\r\n  vapidPublicKey = 'BKxyz...', // Replace with actual VAPID key\r\n  onNotificationReceived,\r\n  onSubscriptionChange\r\n}: UsePushNotificationsOptions = {}) => {\r\n  const [isSupported, setIsSupported] = useState(false);\r\n  const [permission, setPermission] = useState<NotificationPermission>('default');\r\n  const [subscription, setSubscription] = useState<PushSubscription | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Check if push notifications are supported\r\n  useEffect(() => {\r\n    const checkSupport = () => {\r\n      const supported = \r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window;\r\n      \r\n      setIsSupported(supported);\r\n      \r\n      if (supported) {\r\n        setPermission(Notification.permission);\r\n      }\r\n    };\r\n\r\n    checkSupport();\r\n  }, []);\r\n\r\n  // Register service worker\r\n  const registerServiceWorker = useCallback(async (): Promise<ServiceWorkerRegistration | null> => {\r\n    if (!isSupported) return null;\r\n\r\n    try {\r\n      const registration = await navigator.serviceWorker.register('/sw.js');\r\n      logger.info('✅ Service Worker registrado:', registration);\r\n      return registration;\r\n    } catch (error) {\r\n      logger.error('Error registering service worker:', { error: String(error) });\r\n      setError('Error registrando Service Worker');\r\n      return null;\r\n    }\r\n  }, [isSupported]);\r\n\r\n  // Request notification permission\r\n  const requestPermission = useCallback(async (): Promise<NotificationPermission> => {\r\n    if (!isSupported) {\r\n      setError('Las notificaciones push no están soportadas');\r\n      return 'denied';\r\n    }\r\n\r\n    try {\r\n      const permission = await Notification.requestPermission();\r\n      setPermission(permission);\r\n      \r\n      if (permission === 'denied') {\r\n        setError('Permisos de notificación denegados');\r\n      } else if (permission === 'granted') {\r\n        setError(null);\r\n      }\r\n      \r\n      return permission;\r\n    } catch (error) {\r\n      logger.error('Error requesting notification permission:', { error: String(error) });\r\n      setError('Error solicitando permisos de notificación');\r\n      return 'denied';\r\n    }\r\n  }, [isSupported]);\r\n\r\n  // Subscribe to push notifications\r\n  const subscribe = useCallback(async (): Promise<PushSubscription | null> => {\r\n    if (!isSupported || !userId) return null;\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Request permission if not granted\r\n      if (permission !== 'granted') {\r\n        const newPermission = await requestPermission();\r\n        if (newPermission !== 'granted') {\r\n          setIsLoading(false);\r\n          return null;\r\n        }\r\n      }\r\n\r\n      // Register service worker\r\n      const registration = await registerServiceWorker();\r\n      if (!registration) {\r\n        setIsLoading(false);\r\n        return null;\r\n      }\r\n\r\n      // Subscribe to push manager\r\n      const pushSubscription = await registration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey: urlBase64ToUint8Array(vapidPublicKey) as BufferSource\r\n      });\r\n\r\n      setSubscription(pushSubscription);\r\n      onSubscriptionChange?.(pushSubscription);\r\n\r\n      // Save subscription to database\r\n      await saveSubscriptionToDatabase(pushSubscription);\r\n\r\n      logger.info('✅ Suscripción push creada:', pushSubscription);\r\n      return pushSubscription;\r\n    } catch (error) {\r\n      logger.error('Error subscribing to push notifications:', { error: String(error) });\r\n      setError('Error creando suscripción push');\r\n      return null;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [isSupported, userId, permission, vapidPublicKey, requestPermission, registerServiceWorker, onSubscriptionChange]);\r\n\r\n  // Unsubscribe from push notifications\r\n  const unsubscribe = useCallback(async (): Promise<boolean> => {\r\n    if (!subscription) return false;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      // Unsubscribe from push manager\r\n      const success = await subscription.unsubscribe();\r\n      \r\n      if (success) {\r\n        // Remove from database\r\n        await removeSubscriptionFromDatabase(subscription);\r\n        \r\n        setSubscription(null);\r\n        onSubscriptionChange?.(null);\r\n        logger.info('✅ Suscripción push eliminada');\r\n      }\r\n      \r\n      return success;\r\n    } catch (error) {\r\n      logger.error('Error unsubscribing from push notifications:', { error: String(error) });\r\n      setError('Error eliminando suscripción push');\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [subscription, onSubscriptionChange]);\r\n\r\n  // Save subscription to Supabase (using profiles table for now)\r\n  const saveSubscriptionToDatabase = useCallback(async (pushSubscription: PushSubscription) => {\r\n    if (!userId) return;\r\n\r\n    try {\r\n      // For now, we'll store push subscription data in localStorage\r\n      // until the push_subscriptions table is created in the database\r\n      const subscriptionData = {\r\n        user_id: userId,\r\n        endpoint: pushSubscription.endpoint,\r\n        p256dh_key: arrayBufferToBase64(pushSubscription.getKey('p256dh')!),\r\n        auth_key: arrayBufferToBase64(pushSubscription.getKey('auth')!),\r\n        user_agent: navigator.userAgent,\r\n        is_active: true,\r\n        created_at: new Date().toISOString()\r\n      };\r\n\r\n      localStorage.setItem(`push_subscription_${userId}`, JSON.stringify(subscriptionData));\r\n      logger.info('✅ Suscripción guardada temporalmente en localStorage');\r\n    } catch (error) {\r\n      logger.error('Error saving subscription to database:', { error: error instanceof Error ? error.message : String(error) });\r\n      throw error;\r\n    }\r\n  }, [userId]);\r\n\r\n  // Remove subscription from database\r\n  const removeSubscriptionFromDatabase = useCallback(async (pushSubscription: PushSubscription) => {\r\n    if (!userId) return;\r\n\r\n    try {\r\n      // Remove from localStorage for now\r\n      localStorage.removeItem(`push_subscription_${userId}`);\r\n      logger.info('✅ Suscripción removida de localStorage');\r\n    } catch (error) {\r\n      logger.error('Error removing subscription from database:', { error: error instanceof Error ? error.message : String(error) });\r\n      throw error;\r\n    }\r\n  }, [userId]);\r\n\r\n  // Send test notification\r\n  const sendTestNotification = useCallback(async () => {\r\n    if (!subscription || !userId) return;\r\n\r\n    try {\r\n      const { error } = await supabase.functions.invoke('send-push-notification', {\r\n        body: {\r\n          user_id: userId,\r\n          notification: {\r\n            title: '🔔 Notificación de prueba',\r\n            body: 'Esta es una notificación de prueba de ComplicesConecta',\r\n            icon: '/compliceslogo.png',\r\n            badge: '/compliceslogo.png',\r\n            data: {\r\n              type: 'test',\r\n              timestamp: Date.now()\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      if (error) {\r\n        logger.error('Error sending test notification:', { error: String(error) });\r\n        setError('Error enviando notificación de prueba');\r\n      } else {\r\n        logger.info('✅ Notificación de prueba enviada');\r\n      }\r\n    } catch (error) {\r\n      logger.error('Error sending test notification:', { error: String(error) });\r\n      setError('Error enviando notificación de prueba');\r\n    }\r\n  }, [subscription, userId]);\r\n\r\n  // Show local notification\r\n  const showLocalNotification = useCallback((payload: PushNotificationPayload) => {\r\n    if (!isSupported || permission !== 'granted') return;\r\n\r\n    try {\r\n      const notification = new Notification(payload.title, {\r\n        body: payload.body,\r\n        icon: payload.icon || '/compliceslogo.png',\r\n        badge: payload.badge || '/compliceslogo.png',\r\n        data: payload.data,\r\n        tag: payload.tag,\r\n        requireInteraction: payload.requireInteraction || false\r\n      });\r\n\r\n      notification.onclick = () => {\r\n        window.focus();\r\n        notification.close();\r\n        onNotificationReceived?.(payload);\r\n      };\r\n\r\n      return notification;\r\n    } catch (error) {\r\n      logger.error('Error showing local notification:', { error: error instanceof Error ? error.message : String(error) });\r\n      return null;\r\n    }\r\n  }, [isSupported, permission, onNotificationReceived]);\r\n\r\n  // Load existing subscription\r\n  useEffect(() => {\r\n    const loadExistingSubscription = async () => {\r\n      if (!isSupported || !userId) return;\r\n\r\n      try {\r\n        const registration = await navigator.serviceWorker.ready;\r\n        const existingSubscription = await registration.pushManager.getSubscription();\r\n        \r\n        if (existingSubscription) {\r\n          setSubscription(existingSubscription);\r\n          onSubscriptionChange?.(existingSubscription);\r\n        }\r\n      } catch (error) {\r\n        logger.error('❌ Error cargando suscripción existente:', { error: error instanceof Error ? error.message : String(error) });\r\n      }\r\n    };\r\n\r\n    loadExistingSubscription();\r\n  }, [isSupported, userId, onSubscriptionChange]);\r\n\r\n  return {\r\n    // Estado\r\n    isSupported,\r\n    permission,\r\n    subscription,\r\n    isLoading,\r\n    error,\r\n    isSubscribed: !!subscription,\r\n\r\n    // Acciones\r\n    requestPermission,\r\n    subscribe,\r\n    unsubscribe,\r\n    sendTestNotification,\r\n    showLocalNotification,\r\n\r\n    // Utilidades\r\n    canSubscribe: isSupported && permission === 'granted',\r\n    needsPermission: isSupported && permission === 'default'\r\n  };\r\n};\r\n\r\n// Utility functions\r\nfunction urlBase64ToUint8Array(base64String: string): Uint8Array {\r\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n  const base64 = (base64String + padding)\r\n    .replace(/-/g, '+')\r\n    .replace(/_/g, '/');\r\n\r\n  const rawData = window.atob(base64);\r\n  const outputArray = new Uint8Array(rawData.length);\r\n\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i);\r\n  }\r\n  return outputArray;\r\n}\r\n\r\nfunction arrayBufferToBase64(buffer: ArrayBuffer): string {\r\n  const bytes = new Uint8Array(buffer);\r\n  let binary = '';\r\n  for (let i = 0; i < bytes.byteLength; i++) {\r\n    binary += String.fromCharCode(bytes[i]);\r\n  }\r\n  return window.btoa(binary);\r\n}\r\n\r\nexport default usePushNotifications;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useRealtimeChat.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'onTypingUpdate' is defined but never used. Allowed unused args must match /^_/u.","line":54,"column":3,"nodeType":null,"messageId":"unusedVar","endLine":54,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { RealtimeChannel } from '@supabase/supabase-js';\r\nimport { logger } from '@/lib/logger';\r\n\r\nexport interface RealtimeMessage {\r\n  id: string;\r\n  content: string;\r\n  sender_id: string;\r\n  room_id: string;\r\n  created_at: string;\r\n  message_type: 'text' | 'image' | 'file' | 'system';\r\n  reply_to?: string | null;\r\n  is_edited?: boolean;\r\n  is_deleted?: boolean;\r\n  metadata?: {\r\n    file_url?: string;\r\n    file_name?: string;\r\n    file_size?: number;\r\n  };\r\n}\r\n\r\nexport interface ChatRoom {\r\n  id: string;\r\n  name?: string;\r\n  participants: string[];\r\n  created_at: string;\r\n  updated_at: string;\r\n  last_message?: RealtimeMessage;\r\n}\r\n\r\nexport interface TypingUser {\r\n  user_id: string;\r\n  user_name: string;\r\n  timestamp: number;\r\n}\r\n\r\ninterface UseRealtimeChatOptions {\r\n  userId: string;\r\n  chatRoomId?: string;\r\n  onMessageReceived?: (message: RealtimeMessage) => void;\r\n  onMessageSent?: (message: RealtimeMessage) => void;\r\n  onTypingUpdate?: (typingUsers: TypingUser[]) => void;\r\n  onUserJoined?: (userId: string) => void;\r\n  onUserLeft?: (userId: string) => void;\r\n  onError?: (error: Error) => void;\r\n}\r\n\r\nexport const useRealtimeChat = ({\r\n  userId,\r\n  chatRoomId,\r\n  onMessageReceived,\r\n  onMessageSent,\r\n  onTypingUpdate,\r\n  onUserJoined,\r\n  onUserLeft,\r\n  onError\r\n}: UseRealtimeChatOptions) => {\r\n  const [messages, setMessages] = useState<RealtimeMessage[]>([]);\r\n  const [typingUsers, setTypingUsers] = useState<TypingUser[]>([]);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [onlineUsers, setOnlineUsers] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const channelRef = useRef<RealtimeChannel | null>(null);\r\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Cargar mensajes históricos\r\n  const loadMessages = useCallback(async (roomId: string) => {\r\n    if (!roomId) return;\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      logger.info('📥 Cargando mensajes históricos para sala:', { roomId });\r\n      \r\n      // Usar tabla messages existente con estructura compatible\r\n      const { data, error } = await (supabase as any)\r\n        .from('messages')\r\n        .select(`\r\n          id,\r\n          content,\r\n          sender_id,\r\n          created_at\r\n        `)\r\n        .order('created_at', { ascending: true })\r\n        .limit(100);\r\n\r\n      if (error) {\r\n        logger.error('❌ Error cargando mensajes:', error);\r\n        return;\r\n      }\r\n\r\n      // Mapear a estructura RealtimeMessage\r\n      const mappedMessages: RealtimeMessage[] = (data || []).map((msg: any) => ({\r\n        id: msg.id,\r\n        content: msg.content,\r\n        sender_id: msg.sender_id,\r\n        room_id: roomId,\r\n        created_at: msg.created_at || new Date().toISOString(),\r\n        message_type: 'text' as const,\r\n        reply_to: null,\r\n        is_edited: false,\r\n        is_deleted: false,\r\n        metadata: {}\r\n      }));\r\n\r\n      setMessages(mappedMessages);\r\n      logger.info('📨 Mensajes cargados:', { count: data?.length || 0 });\r\n    } catch (error) {\r\n      logger.error('Error in realtime subscription:', { error: String(error) });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Enviar mensaje\r\n  const sendMessage = useCallback(async (\r\n    content: string,\r\n    messageType: 'text' | 'image' | 'file' = 'text',\r\n    metadata?: Record<string, any>\r\n  ) => {\r\n    if (!chatRoomId || !userId || !content.trim()) return;\r\n\r\n    try {\r\n      logger.info('📤 Enviando mensaje:', { content, messageType, chatRoomId });\r\n\r\n      const { data, error } = await (supabase as any)\r\n        .from('messages')\r\n        .insert({\r\n          content: content.trim(),\r\n          sender_id: userId,\r\n          created_at: new Date().toISOString()\r\n        })\r\n        .select()\r\n        .single();\r\n\r\n      if (error) {\r\n        logger.error('❌ Error enviando mensaje:', { error: String(error) });\r\n        onError?.(error);\r\n        return;\r\n      }\r\n\r\n      logger.info('📨 Mensaje recibido en tiempo real:', { payload: String(data) });\r\n      \r\n      // Crear mensaje compatible para el estado local\r\n      const realtimeMessage: RealtimeMessage = {\r\n        id: (data as any).id,\r\n        content: (data as any).content,\r\n        sender_id: (data as any).sender_id,\r\n        room_id: chatRoomId,\r\n        created_at: (data as any).created_at || new Date().toISOString(),\r\n        message_type: messageType,\r\n        reply_to: null,\r\n        is_edited: false,\r\n        is_deleted: false,\r\n        metadata: metadata || {}\r\n      };\r\n\r\n      onMessageSent?.(realtimeMessage);\r\n    } catch (error) {\r\n      logger.error('Error in sendMessage:', { error: String(error) });\r\n      onError?.(error as Error);\r\n    }\r\n  }, [chatRoomId, userId, onError, onMessageSent]);\r\n\r\n  // Indicar que el usuario está escribiendo\r\n  const sendTypingIndicator = useCallback((roomId: string, isTyping: boolean) => {\r\n    if (!channelRef.current || !roomId || !userId) return;\r\n\r\n    try {\r\n      if (isTyping) {\r\n        channelRef.current.send({\r\n          type: 'broadcast',\r\n          event: 'typing',\r\n          payload: {\r\n            user_id: userId,\r\n            chat_room_id: roomId,\r\n            is_typing: true,\r\n            timestamp: Date.now()\r\n          }\r\n        });\r\n\r\n        // Auto-stop typing después de 3 segundos\r\n        if (typingTimeoutRef.current) {\r\n          clearTimeout(typingTimeoutRef.current);\r\n        }\r\n        \r\n        typingTimeoutRef.current = setTimeout(() => {\r\n          sendTypingIndicator(roomId, false);\r\n        }, 3000);\r\n      } else {\r\n        channelRef.current.send({\r\n          type: 'broadcast',\r\n          event: 'typing',\r\n          payload: {\r\n            user_id: userId,\r\n            chat_room_id: roomId,\r\n            is_typing: false,\r\n            timestamp: Date.now()\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      logger.error('Error enviando typing indicator:', { error: String(error) });\r\n    }\r\n  }, [userId]);\r\n\r\n  // Configurar canal de tiempo real\r\n  useEffect(() => {\r\n    if (!chatRoomId || !userId) return;\r\n\r\n    logger.info('Initializing realtime chat for conversation:', { conversationId: chatRoomId });\r\n    \r\n    // Crear canal único para la sala de chat\r\n    const channel = supabase.channel(`chat_room_${chatRoomId}`, {\r\n      config: {\r\n        broadcast: { self: true },\r\n        presence: { key: userId }\r\n      }\r\n    });\r\n\r\n    channelRef.current = channel;\r\n\r\n    // Escuchar nuevos mensajes\r\n    channel\r\n      .on('postgres_changes', {\r\n        event: 'INSERT',\r\n        schema: 'public',\r\n        table: 'messages'\r\n      }, (payload) => {\r\n        logger.info('New message received:', { messageId: (payload.new as any).id });\r\n        const newMessage = payload.new as RealtimeMessage;\r\n        \r\n        setMessages(prev => {\r\n          // Evitar duplicados\r\n          if (prev.some(msg => msg.id === newMessage.id)) {\r\n            return prev;\r\n          }\r\n          return [...prev, newMessage];\r\n        });\r\n\r\n        onMessageReceived?.(newMessage);\r\n      })\r\n      \r\n      // Escuchar indicadores de escritura\r\n      .on('broadcast', { event: 'typing' }, (payload) => {\r\n        const { user_id, is_typing, timestamp } = payload.payload;\r\n        \r\n        if (user_id === userId) return; // Ignorar propio typing\r\n        \r\n        setTypingUsers(prev => {\r\n          const filtered = prev.filter(u => u.user_id !== user_id);\r\n          \r\n          if (is_typing) {\r\n            return [...filtered, { \r\n              user_id, \r\n              user_name: `Usuario ${user_id.slice(0, 8)}`, \r\n              timestamp \r\n            }];\r\n          }\r\n          \r\n          return filtered;\r\n        });\r\n      })\r\n      \r\n      // Escuchar presencia (usuarios online)\r\n      .on('presence', { event: 'sync' }, () => {\r\n        const state = channel.presenceState();\r\n        const users = Object.keys(state);\r\n        setOnlineUsers(users);\r\n        logger.info('Messages updated, count:', { count: messages.length });\r\n      })\r\n      \r\n      .on('presence', { event: 'join' }, ({ key }) => {\r\n        logger.info('Usuario se unió:', { key });\r\n        onUserJoined?.(key);\r\n      })\r\n      \r\n      .on('presence', { event: 'leave' }, ({ key }) => {\r\n        logger.info('👋 Usuario se fue:', { key });\r\n        onUserLeft?.(key);\r\n      });\r\n\r\n    // Suscribirse al canal\r\n    channel.subscribe(async (status) => {\r\n      logger.info('🔌 Canal conectado:', { status: String(status) });\r\n      \r\n      if (status === 'SUBSCRIBED') {\r\n        setIsConnected(true);\r\n        \r\n        // Trackear presencia\r\n        await channel.track({\r\n          user_id: userId,\r\n          online_at: new Date().toISOString()\r\n        });\r\n        \r\n        // Cargar mensajes históricos\r\n        await loadMessages(chatRoomId);\r\n      } else {\r\n        setIsConnected(false);\r\n      }\r\n    });\r\n\r\n    // Cleanup\r\n    return () => {\r\n      logger.info('🧹 Limpiando canal realtime');\r\n      \r\n      if (typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n      }\r\n      \r\n      channel.unsubscribe();\r\n      channelRef.current = null;\r\n      setIsConnected(false);\r\n      setTypingUsers([]);\r\n      setOnlineUsers([]);\r\n    };\r\n  }, [chatRoomId, userId, loadMessages, onMessageReceived, onUserJoined, onUserLeft]);\r\n\r\n  // Limpiar typing indicators antiguos\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      setTypingUsers(prev => \r\n        prev.filter(user => now - user.timestamp < 5000) // 5 segundos\r\n      );\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Callback para typing con debounce\r\n  const handleTyping = useCallback((roomId: string) => {\r\n    sendTypingIndicator(roomId, true);\r\n  }, [sendTypingIndicator]);\r\n\r\n  return {\r\n    // Estado\r\n    messages,\r\n    typingUsers,\r\n    isConnected,\r\n    onlineUsers,\r\n    isLoading,\r\n    \r\n    // Acciones\r\n    sendMessage,\r\n    sendTypingIndicator: handleTyping,\r\n    loadMessages,\r\n    \r\n    // Utilidades\r\n    isUserTyping: (userId: string) => typingUsers.some(u => u.user_id === userId),\r\n    getTypingUsersText: () => {\r\n      if (typingUsers.length === 0) return '';\r\n      if (typingUsers.length === 1) return `${typingUsers[0].user_name} está escribiendo...`;\r\n      if (typingUsers.length === 2) return `${typingUsers[0].user_name} y ${typingUsers[1].user_name} están escribiendo...`;\r\n      return `${typingUsers.length} usuarios están escribiendo...`;\r\n    }\r\n  };\r\n};\r\n\r\nexport default useRealtimeChat;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useScreenshotProtection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useScrollHide.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useSupabaseTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useTokens.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'appMode' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":64,"column":25,"nodeType":null,"messageId":"unusedVar","endLine":64,"endColumn":32},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":108,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":108,"endColumn":25},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'data' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":307,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":307,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Hook useTokens() - Sistema de Tokens CMPX/GTK para fase Beta\r\n * Gestión completa de balances, transacciones, staking y recompensas\r\n * NOTA: Mock temporal hasta implementar tablas de tokens en BD\r\n */\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { validateStaking } from '@/lib/zod-schemas';\r\nimport { isDemoMode, shouldUseRealSupabase, getAppConfig } from '@/lib/app-config';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { logger } from '@/lib/logger';\r\n\r\n// Interfaces simplificadas para demo vs real\r\nexport interface TokenBalance {\r\n  cmpx: number;\r\n  gtk: number;\r\n}\r\n\r\nexport interface Transaction {\r\n  id: string;\r\n  user_id: string;\r\n  type: 'reward' | 'staking' | 'referral' | 'purchase';\r\n  token_type: 'cmpx' | 'gtk';\r\n  amount: number;\r\n  description: string;\r\n  created_at: string;\r\n  status: 'pending' | 'completed' | 'failed';\r\n}\r\n\r\nexport interface StakingRecord {\r\n  id: string;\r\n  user_id: string;\r\n  token_type: 'cmpx' | 'gtk';\r\n  amount: number;\r\n  start_date: string;\r\n  end_date: string;\r\n  apy: number;\r\n  status: 'active' | 'completed' | 'cancelled';\r\n  created_at: string;\r\n}\r\n\r\nexport interface Reward {\r\n  id: string;\r\n  user_id: string;\r\n  type: 'daily_login' | 'profile_completion' | 'referral' | 'world_id';\r\n  token_type: 'cmpx' | 'gtk';\r\n  amount: number;\r\n  description: string;\r\n  claimed: boolean;\r\n  expires_at: string | null;\r\n  created_at: string;\r\n}\r\n\r\nexport interface TokenStats {\r\n  totalUsers: number;\r\n  totalCMPX: number;\r\n  totalGTK: number;\r\n  totalStaked: number;\r\n  totalTransactions: number;\r\n}\r\n\r\nexport const useTokens = () => {\r\n  const { user, isDemo, appMode } = useAuth();\r\n  const [balance, setBalance] = useState<TokenBalance>({ cmpx: 0, gtk: 0 });\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [stakingRecords, setStakingRecords] = useState<StakingRecord[]>([]);\r\n  const [rewards, setRewards] = useState<Reward[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const config = getAppConfig();\r\n\r\n  // Cargar datos iniciales\r\n  useEffect(() => {\r\n    if (user?.id) {\r\n      loadTokenData();\r\n    }\r\n  }, [user?.id]);\r\n\r\n  const loadTokenData = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      logger.info('💰 Cargando datos de tokens', { mode: config.mode, demo: isDemo() });\r\n      \r\n      // Si es demo o no debemos usar Supabase real, usar datos mock\r\n      if (isDemoMode()) {\r\n        logger.info('🎭 Cargando datos de tokens demo', { user: user.email });\r\n        \r\n        // Balance demo basado en el tipo de usuario\r\n        let demoBalance: TokenBalance = { cmpx: 1250, gtk: 850 };\r\n        \r\n        // Ajustar balance según el usuario demo\r\n        if (user.email?.includes('couple')) {\r\n          demoBalance = { cmpx: 2000, gtk: 1500 };\r\n        } else if (user.email?.includes('premium')) {\r\n          demoBalance = { cmpx: 5000, gtk: 3000 };\r\n        }\r\n        \r\n        // Intentar obtener balance personalizado del localStorage\r\n        const storedUser = localStorage.getItem('demo_user');\r\n        if (storedUser) {\r\n          try {\r\n            const parsedUser = JSON.parse(storedUser);\r\n            if (parsedUser.accountType === 'couple') {\r\n              demoBalance = { cmpx: 2000, gtk: 1500 };\r\n            }\r\n          } catch (error) {\r\n            logger.warn('Error parsing demo user for balance');\r\n          }\r\n        }\r\n        \r\n        setBalance(demoBalance);\r\n        setLoading(false);\r\n        \r\n        // Transacciones demo\r\n        const mockTransactions: Transaction[] = [\r\n          {\r\n            id: 'demo-tx-1',\r\n            user_id: user.id,\r\n            type: 'reward',\r\n            token_type: 'cmpx',\r\n            amount: 100,\r\n            description: 'Recompensa por actividad diaria',\r\n            created_at: new Date(Date.now() - 86400000).toISOString(),\r\n            status: 'completed'\r\n          },\r\n          {\r\n            id: 'demo-tx-2',\r\n            user_id: user.id,\r\n            type: 'staking',\r\n            token_type: 'gtk',\r\n            amount: 50,\r\n            description: 'Staking de tokens GTK',\r\n            created_at: new Date(Date.now() - 172800000).toISOString(),\r\n            status: 'completed'\r\n          },\r\n          {\r\n            id: 'demo-tx-3',\r\n            user_id: user.id,\r\n            type: 'referral',\r\n            token_type: 'cmpx',\r\n            amount: 25,\r\n            description: 'Bonificación por referido',\r\n            created_at: new Date(Date.now() - 259200000).toISOString(),\r\n            status: 'completed'\r\n          }\r\n        ];\r\n        setTransactions(mockTransactions);\r\n        \r\n        // Registros de staking demo\r\n        const mockStaking: StakingRecord[] = [\r\n          {\r\n            id: 'demo-stake-1',\r\n            user_id: user.id,\r\n            token_type: 'gtk',\r\n            amount: 500,\r\n            start_date: new Date(Date.now() - 604800000).toISOString(),\r\n            end_date: new Date(Date.now() + 2419200000).toISOString(),\r\n            apy: 12.5,\r\n            status: 'active',\r\n            created_at: new Date(Date.now() - 604800000).toISOString()\r\n          }\r\n        ];\r\n        setStakingRecords(mockStaking);\r\n        \r\n        // Recompensas demo\r\n        const mockRewards: Reward[] = [\r\n          {\r\n            id: 'demo-reward-1',\r\n            user_id: user.id,\r\n            type: 'daily_login',\r\n            token_type: 'cmpx',\r\n            amount: 10,\r\n            description: 'Recompensa diaria por login',\r\n            claimed: false,\r\n            expires_at: new Date(Date.now() + 86400000).toISOString(),\r\n            created_at: new Date().toISOString()\r\n          },\r\n          {\r\n            id: 'demo-reward-2',\r\n            user_id: user.id,\r\n            type: 'profile_completion',\r\n            token_type: 'gtk',\r\n            amount: 25,\r\n            description: 'Completar perfil al 100%',\r\n            claimed: true,\r\n            expires_at: null,\r\n            created_at: new Date(Date.now() - 86400000).toISOString()\r\n          }\r\n        ];\r\n        setRewards(mockRewards);\r\n        \r\n        logger.info('✅ Datos de tokens demo cargados - Balance:', demoBalance);\r\n      } else {\r\n        // Cargar datos reales desde Supabase\r\n        logger.info('🔗 Cargando datos de tokens reales desde Supabase...');\r\n        \r\n        try {\r\n          // Cargar balance real (implementar cuando existan las tablas)\r\n          // const { data: balanceData } = await supabase\r\n          //   .from('user_tokens')\r\n          //   .select('*')\r\n          //   .eq('user_id', user.id);\r\n          \r\n          // Por ahora, usar datos por defecto hasta implementar tablas reales\r\n          setBalance({ cmpx: 0, gtk: 0 });\r\n          setTransactions([]);\r\n          setStakingRecords([]);\r\n          setRewards([]);\r\n          \r\n          logger.info('ℹ️ Datos reales no implementados aún - usando valores por defecto');\r\n        } catch (error) {\r\n          logger.error('❌ Error cargando datos reales:', { error });\r\n          // Fallback a datos vacíos\r\n          setBalance({ cmpx: 0, gtk: 0 });\r\n          setTransactions([]);\r\n          setStakingRecords([]);\r\n          setRewards([]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      logger.error('❌ Error cargando datos de tokens:', { error });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Procesar referido\r\n  const processReferral = async (referredUserId: string) => {\r\n    if (!user) return false;\r\n    \r\n    if (isDemo() || !shouldUseRealSupabase()) {\r\n      logger.info('🎭 Simulando procesamiento de referido en modo demo');\r\n      // Simular recompensa por referido\r\n      const newTransaction: Transaction = {\r\n        id: `demo-ref-${Date.now()}`,\r\n        user_id: user.id,\r\n        type: 'referral',\r\n        token_type: 'cmpx',\r\n        amount: 50,\r\n        description: `Bonificación por referir usuario`,\r\n        created_at: new Date().toISOString(),\r\n        status: 'completed'\r\n      };\r\n      \r\n      setTransactions(prev => [newTransaction, ...prev]);\r\n      setBalance(prev => ({ ...prev, cmpx: prev.cmpx + 50 }));\r\n      logger.info('✅ Referido procesado en demo - +50 CMPX');\r\n      return true;\r\n    }\r\n    \r\n    try {\r\n      logger.info('🔗 Procesando referido real:', { referredUserId });\r\n      // TODO: Implementar lógica real de referidos con Supabase Edge Functions\r\n      logger.info('ℹ️ Procesamiento de referidos reales no implementado aún');\r\n      return false;\r\n    } catch (error) {\r\n      logger.error('❌ Error procesando referido:', { error });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Hacer staking\r\n  const stakeTokens = async (tokenType: 'cmpx' | 'gtk', amount: number, duration: number) => {\r\n    if (!user) return false;\r\n    \r\n    if (isDemo() || !shouldUseRealSupabase()) {\r\n      logger.info('🎭 Simulando staking en modo demo:', { tokenType, amount, duration });\r\n      \r\n      // Verificar balance suficiente\r\n      if (balance[tokenType] < amount) {\r\n        throw new Error('Balance insuficiente para staking');\r\n      }\r\n      \r\n      // Crear registro de staking\r\n      const newStaking: StakingRecord = {\r\n        id: `demo-stake-${Date.now()}`,\r\n        user_id: user.id,\r\n        token_type: tokenType,\r\n        amount,\r\n        start_date: new Date().toISOString(),\r\n        end_date: new Date(Date.now() + duration * 24 * 60 * 60 * 1000).toISOString(),\r\n        apy: tokenType === 'gtk' ? 12.5 : 8.0,\r\n        status: 'active',\r\n        created_at: new Date().toISOString()\r\n      };\r\n      \r\n      setStakingRecords(prev => [newStaking, ...prev]);\r\n      setBalance(prev => ({ ...prev, [tokenType]: prev[tokenType] - amount }));\r\n      \r\n      logger.info('✅ Staking procesado en demo:', { tokenType, amount, duration });\r\n      return true;\r\n    }\r\n    \r\n    try {\r\n      logger.info('🔗 Procesando staking real:', { tokenType, amount, duration });\r\n      // Validar datos con Zod antes de enviar\r\n      const stakingData = validateStaking({\r\n        userId: user.id,\r\n        amount,\r\n        duration,\r\n        tokenType\r\n      });\r\n      \r\n      // Usar función de Supabase para staking (tabla staking_records)\r\n      const { data, error } = await (supabase as any).rpc('start_staking', {\r\n        user_id_param: stakingData.userId,\r\n        amount_param: stakingData.amount,\r\n        duration_days: stakingData.duration,\r\n        token_type_param: stakingData.tokenType\r\n      });\r\n      \r\n      if (error) {\r\n        logger.error('❌ Error en staking:', { error });\r\n        return false;\r\n      }\r\n      \r\n      logger.info('✅ Staking procesado en real:', { tokenType, amount, duration });\r\n      return true;\r\n    } catch (error) {\r\n      logger.error('❌ Error en staking:', { error });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Reclamar recompensa\r\n  const claimReward = async (rewardId: string) => {\r\n    if (!user) return false;\r\n    \r\n    if (isDemo() || !shouldUseRealSupabase()) {\r\n      logger.info('🎭 Reclamando recompensa en modo demo:', { rewardId });\r\n      \r\n      const reward = rewards.find(r => r.id === rewardId);\r\n      if (!reward || reward.claimed) {\r\n        logger.info('❌ Recompensa no encontrada o ya reclamada');\r\n        return false;\r\n      }\r\n      \r\n      // Marcar como reclamada\r\n      setRewards(prev => prev.map(r => \r\n        r.id === rewardId ? { ...r, claimed: true } : r\r\n      ));\r\n      \r\n      // Añadir al balance\r\n      setBalance(prev => ({\r\n        ...prev,\r\n        [reward.token_type]: prev[reward.token_type] + reward.amount\r\n      }));\r\n      \r\n      // Añadir transacción\r\n      const newTransaction: Transaction = {\r\n        id: `demo-claim-${Date.now()}`,\r\n        user_id: user.id,\r\n        type: 'reward',\r\n        token_type: reward.token_type,\r\n        amount: reward.amount,\r\n        description: `Recompensa reclamada: ${reward.description}`,\r\n        created_at: new Date().toISOString(),\r\n        status: 'completed'\r\n      };\r\n      \r\n      setTransactions(prev => [newTransaction, ...prev]);\r\n      logger.info('✅ Recompensa reclamada en demo:', { amount: reward.amount, tokenType: reward.token_type });\r\n      return true;\r\n    }\r\n    \r\n    try {\r\n      logger.info('🔗 Reclamando recompensa real:', { rewardId });\r\n      logger.info('ℹ️ Reclamo de recompensas reales no implementado aún');\r\n      return false;\r\n    } catch (error) {\r\n      logger.error('❌ Error reclamando recompensa:', { error });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Refrescar datos\r\n  const refreshTokenData = useCallback(async () => {\r\n    logger.info('🔄 Refrescando datos de tokens', { mode: config.mode });\r\n    setLoading(true);\r\n    await loadTokenData();\r\n    \r\n    // Mostrar feedback visual al usuario\r\n    if (typeof window !== 'undefined') {\r\n      // Crear notificación temporal\r\n      const notification = document.createElement('div');\r\n      notification.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 transition-all duration-300';\r\n      notification.textContent = '✅ Balance actualizado correctamente';\r\n      document.body.appendChild(notification);\r\n      \r\n      // Remover después de 3 segundos\r\n      setTimeout(() => {\r\n        notification.style.opacity = '0';\r\n        setTimeout(() => {\r\n          document.body.removeChild(notification);\r\n        }, 300);\r\n      }, 3000);\r\n    }\r\n  }, [config.mode, loadTokenData]);\r\n\r\n\r\n\r\n\r\n  // Helper functions for the Tokens page\r\n  const getBalanceMessage = () => {\r\n    if (!balance) return \"Balance no disponible en este momento.\";\r\n    return `Tienes ${balance.cmpx} tokens CMPX y ${balance.gtk} tokens GTK. Los tokens CMPX se pueden usar para funciones premium durante la fase Beta.`;\r\n  };\r\n\r\n  const getStakingMessage = () => {\r\n    return \"El staking te permite bloquear tus tokens por un período determinado y recibir recompensas. Durante la fase Beta, puedes hacer staking de tokens CMPX con un 8% APY y GTK con 12.5% APY.\";\r\n  };\r\n\r\n  const refreshTokens = () => {\r\n    refreshTokenData();\r\n  };\r\n\r\n  // Funciones adicionales requeridas por los componentes\r\n  const startStaking = async (amount: number) => {\r\n    return await stakeTokens('cmpx', amount, 30);\r\n  };\r\n\r\n  const completeStaking = async (stakingId: string) => {\r\n    if (!user) return false;\r\n    \r\n    if (isDemo() || !shouldUseRealSupabase()) {\r\n      logger.info('🎭 Completando staking en modo demo:', { stakingId });\r\n      \r\n      // Encontrar el staking record\r\n      const staking = stakingRecords.find(s => s.id === stakingId);\r\n      if (!staking) return false;\r\n      \r\n      // Calcular recompensa\r\n      const reward = staking.amount * (staking.apy / 100) * (30 / 365); // Recompensa por 30 días\r\n      \r\n      // Actualizar balance y records\r\n      setBalance(prev => ({ \r\n        ...prev, \r\n        [staking.token_type]: prev[staking.token_type] + staking.amount + reward \r\n      }));\r\n      \r\n      setStakingRecords(prev => \r\n        prev.map(s => s.id === stakingId ? { ...s, status: 'completed' } : s)\r\n      );\r\n      \r\n      logger.info('✅ Staking completado en demo:', { stakingId, reward });\r\n      return true;\r\n    }\r\n    \r\n    try {\r\n      logger.info('🔗 Completando staking real:', { stakingId });\r\n      logger.info('ℹ️ Completar staking real no implementado aún');\r\n      return false;\r\n    } catch (error) {\r\n      logger.error('❌ Error completando staking:', { error });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const claimWorldIdReward = async () => {\r\n    logger.info('🌍 Reclamando recompensa World ID');\r\n    // Mock implementation for demo\r\n    if (isDemo()) {\r\n      const worldIdReward: Reward = {\r\n        id: `world-id-${Date.now()}`,\r\n        user_id: user?.id || '',\r\n        type: 'world_id',\r\n        token_type: 'cmpx',\r\n        amount: 500,\r\n        description: 'Recompensa por verificación World ID',\r\n        claimed: false,\r\n        expires_at: null,\r\n        created_at: new Date().toISOString()\r\n      };\r\n      setRewards(prev => [worldIdReward, ...prev]);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // Propiedades computadas\r\n  const pendingRewards = rewards.filter(r => !r.claimed);\r\n  const hasPendingRewards = pendingRewards.length > 0;\r\n  const hasActiveStaking = stakingRecords.some(s => s.status === 'active');\r\n  const isWorldIdEligible = true; // Mock for demo\r\n  const error = null; // Mock for demo\r\n\r\n  // Balance con propiedades específicas\r\n  const enhancedBalance = {\r\n    balance: {\r\n      cmpxBalance: balance.cmpx,\r\n      cmpxStaked: balance.cmpx * 0.3, // 30% staked demo\r\n      gtkBalance: balance.gtk,\r\n      gtkStaked: balance.gtk * 0.2, // 20% staked demo\r\n      cmpx: balance.cmpx,\r\n      gtk: balance.gtk,\r\n      monthlyEarned: balance.cmpx * 0.05, // 5% monthly earnings demo\r\n      monthlyRemaining: 1000 - (balance.cmpx * 0.05), // Monthly limit demo\r\n      monthlyLimit: 1000,\r\n      totalReferrals: 3, // Demo referrals\r\n      referralCode: `REF${user?.id || 'DEMO'}`\r\n    }\r\n  };\r\n\r\n  return {\r\n    // Estados\r\n    balance: enhancedBalance.balance,\r\n    transactions,\r\n    stakingRecords,\r\n    rewards,\r\n    loading,\r\n    error,\r\n\r\n    // Propiedades computadas\r\n    pendingRewards,\r\n    hasPendingRewards,\r\n    hasActiveStaking,\r\n    isWorldIdEligible,\r\n\r\n    // Acciones\r\n    refreshTokenData,\r\n    refreshTokens,\r\n    processReferral,\r\n    stakeTokens,\r\n    startStaking,\r\n    completeStaking,\r\n    claimReward,\r\n    claimWorldIdReward,\r\n    loadTokenData,\r\n\r\n    // Helper functions for UI\r\n    getBalanceMessage,\r\n    getStakingMessage,\r\n\r\n    // Utilidades\r\n    totalBalance: balance ? balance.cmpx + balance.gtk : 0,\r\n    availableRewards: rewards.filter(r => !r.claimed).length,\r\n    activeStakings: stakingRecords.filter(s => s.status === 'active').length,\r\n    \r\n    // Información del modo\r\n    isDemo: isDemo(),\r\n    appMode: config.mode\r\n  };\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useVideoChat.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\hooks\\useWorldID.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\integrations\\supabase\\client.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\integrations\\supabase\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\MatchingService.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'callback' is defined but never used. Allowed unused args must match /^_/u.","line":547,"column":29,"nodeType":null,"messageId":"unusedVar","endLine":547,"endColumn":37}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// =====================================================\r\n// MATCHING SERVICE - SUPABASE INTEGRATION\r\n// Fecha: 14/09/2025 08:58hrs\r\n// Versión: v2.8.1 - Servicio de Matching Real\r\n// =====================================================\r\n\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { logger } from '@/lib/logger';\r\nimport { \r\n  calculateCompatibility, \r\n  getSharedInterests, \r\n  generateMatchReasons,\r\n  type MatchScore \r\n} from '@/lib/matching';\r\n\r\n// Tipos para el servicio de matching\r\nexport interface SupabaseProfile {\r\n  id: string;\r\n  first_name?: string;\r\n  last_name?: string;\r\n  display_name?: string;\r\n  age?: number;\r\n  interests?: string[];\r\n  avatar_url?: string;\r\n  is_online?: boolean;\r\n  last_active?: string;\r\n  experience_level?: string;\r\n  age_range_min?: number;\r\n  age_range_max?: number;\r\n  max_distance?: number;\r\n  looking_for?: string[];\r\n}\r\n\r\nexport interface UserLike {\r\n  id: string;\r\n  liker_id: string;\r\n  liked_id: string;\r\n  created_at: string;\r\n  is_active: boolean;\r\n}\r\n\r\nexport interface Match {\r\n  id: string;\r\n  user1_id: string;\r\n  user2_id: string;\r\n  compatibility_score: number;\r\n  shared_interests: string[];\r\n  match_reasons: string[];\r\n  created_at: string;\r\n  last_interaction: string;\r\n  is_active: boolean;\r\n  other_user?: SupabaseProfile;\r\n  unread_messages?: number;\r\n}\r\n\r\nexport interface MatchInteraction {\r\n  id: string;\r\n  match_id: string;\r\n  user_id: string;\r\n  interaction_type: 'message' | 'like' | 'view' | 'block' | 'report';\r\n  content?: string;\r\n  metadata?: Record<string, any>;\r\n  created_at: string;\r\n}\r\n\r\nexport class MatchingService {\r\n  \r\n  // =====================================================\r\n  // GESTIÓN DE LIKES\r\n  // =====================================================\r\n  \r\n  /**\r\n   * Dar like a un usuario\r\n   */\r\n  static async likeUser(likedUserId: string): Promise<{ success: boolean; match?: Match; error?: string }> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('Usuario no autenticado');\r\n\r\n      // Verificar que no sea auto-like\r\n      if (user.id === likedUserId) {\r\n        return { success: false, error: 'No puedes darte like a ti mismo' };\r\n      }\r\n\r\n      // Verificar si ya existe el like\r\n      const { data: existingLike } = await supabase\r\n        .from('user_likes')\r\n        .select('*')\r\n        .eq('liker_id', user.id)\r\n        .eq('liked_id', likedUserId)\r\n        .single();\r\n\r\n      if (existingLike) {\r\n        return { success: false, error: 'Ya has dado like a este usuario' };\r\n      }\r\n\r\n      // Crear el like\r\n      const { error: likeError } = await supabase\r\n        .from('user_likes')\r\n        .insert({\r\n          liker_id: user.id,\r\n          liked_id: likedUserId,\r\n          is_active: true\r\n        } as any);\r\n\r\n      if (likeError) throw likeError;\r\n\r\n      // Verificar si se creó un match (el trigger lo hace automáticamente)\r\n      const { data: newMatch } = await supabase\r\n        .from('matches')\r\n        .select(`\r\n          *,\r\n          profiles!matches_user1_id_fkey(*),\r\n          profiles!matches_user2_id_fkey(*)\r\n        `)\r\n        .or(`and(user1_id.eq.${user.id},user2_id.eq.${likedUserId}),and(user1_id.eq.${likedUserId},user2_id.eq.${user.id})`)\r\n        .order('created_at', { ascending: false })\r\n        .limit(1)\r\n        .single();\r\n\r\n      return { \r\n        success: true, \r\n        match: newMatch ? this.formatMatch(newMatch, user.id) : undefined \r\n      };\r\n\r\n    } catch (error) {\r\n      logger.error('Error al dar like:', { error: error instanceof Error ? error.message : String(error) });\r\n      return { success: false, error: 'Error al procesar el like' };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Quitar like a un usuario\r\n   */\r\n  static async unlikeUser(likedUserId: string): Promise<{ success: boolean; error?: string }> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('Usuario no autenticado');\r\n\r\n      const { error } = await (supabase as any)\r\n        .from('user_likes')\r\n        .update({ is_active: false })\r\n        .eq('liker_id', user.id)\r\n        .eq('liked_id', likedUserId);\r\n\r\n      if (error) throw error;\r\n\r\n      return { success: true };\r\n\r\n    } catch (error) {\r\n      logger.error('Error al quitar like:', { error: error instanceof Error ? error.message : String(error) });\r\n      return { success: false, error: 'Error al quitar el like' };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener likes dados por el usuario\r\n   */\r\n  static async getUserLikes(): Promise<UserLike[]> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) return [];\r\n\r\n      const { data, error } = await supabase\r\n        .from('user_likes')\r\n        .select('*')\r\n        .eq('liker_id', user.id)\r\n        .eq('is_active', true)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      \r\n      // Mapear datos de Supabase a nuestra interfaz UserLike usando propiedades reales\r\n      return (data || []).map(item => ({\r\n        id: item.id,\r\n        liker_id: item.user_id || user.id,\r\n        liked_id: item.liked_user_id || '',\r\n        created_at: item.created_at || new Date().toISOString(),\r\n        is_active: item.liked || true\r\n      }));\r\n\r\n    } catch (error) {\r\n      logger.error('Error al obtener likes:', { error: error instanceof Error ? error.message : String(error) });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // =====================================================\r\n  // GESTIÓN DE MATCHES\r\n  // =====================================================\r\n\r\n  /**\r\n   * Obtener matches del usuario actual\r\n   */\r\n  static async getUserMatches(): Promise<Match[]> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) return [];\r\n\r\n      // Usar la función SQL helper\r\n      const { data, error } = await supabase\r\n        .rpc('get_user_matches', { user_id: user.id } as any);\r\n\r\n      if (error) throw error;\r\n\r\n      return ((data as any) || []).map((match: any) => ({\r\n        id: match.match_id,\r\n        user1_id: user.id,\r\n        user2_id: match.other_user_id,\r\n        compatibility_score: match.compatibility_score,\r\n        shared_interests: match.shared_interests,\r\n        match_reasons: match.match_reasons,\r\n        created_at: match.last_interaction,\r\n        last_interaction: match.last_interaction,\r\n        is_active: true,\r\n        other_user: {\r\n          id: match.other_user_id,\r\n          display_name: match.other_user_name,\r\n          avatar_url: match.other_user_avatar\r\n        },\r\n        unread_messages: match.unread_messages\r\n      }));\r\n\r\n    } catch (error) {\r\n      logger.error('Error al obtener matches:', { error: error instanceof Error ? error.message : String(error) });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener un match específico\r\n   */\r\n  static async getMatch(matchId: string): Promise<Match | null> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) return null;\r\n\r\n      const { data, error } = await supabase\r\n        .from('matches')\r\n        .select(`\r\n          *,\r\n          profiles!matches_user1_id_fkey(*),\r\n          profiles!matches_user2_id_fkey(*)\r\n        `)\r\n        .eq('id', matchId)\r\n        .or(`user1_id.eq.${user.id},user2_id.eq.${user.id}`)\r\n        .single();\r\n\r\n      if (error) throw error;\r\n      return data ? this.formatMatch(data, user.id) : null;\r\n\r\n    } catch (error) {\r\n      logger.error('Error al obtener match:', { error: error instanceof Error ? error.message : String(error) });\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // =====================================================\r\n  // ALGORITMO DE MATCHING\r\n  // =====================================================\r\n\r\n  /**\r\n   * Obtener perfiles potenciales para matching\r\n   */\r\n  static async getPotentialMatches(filters?: {\r\n    maxDistance?: number;\r\n    minAge?: number;\r\n    maxAge?: number;\r\n    limit?: number;\r\n  }): Promise<SupabaseProfile[]> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) return [];\r\n\r\n      const { \r\n        maxDistance = 50, \r\n        minAge = 18, \r\n        maxAge = 65, \r\n        limit = 20 \r\n      } = filters || {};\r\n\r\n      // Usar la función SQL helper\r\n      const { data, error } = await supabase\r\n        .rpc('get_potential_matches', {\r\n          user_id: user.id,\r\n          max_distance: maxDistance,\r\n          min_age: minAge,\r\n          max_age: maxAge,\r\n          limit_count: limit\r\n        } as any);\r\n\r\n      if (error) throw error;\r\n\r\n      return ((data as any) || []).map((profile: any) => ({\r\n        id: profile.profile_id,\r\n        first_name: profile.first_name,\r\n        last_name: profile.last_name,\r\n        display_name: profile.display_name,\r\n        age: profile.age,\r\n        interests: profile.interests || [],\r\n        avatar_url: profile.avatar_url,\r\n        is_online: profile.is_online,\r\n        last_active: profile.last_active\r\n      }));\r\n\r\n    } catch (error) {\r\n      logger.error('Error al obtener perfiles potenciales:', { error: error instanceof Error ? error.message : String(error) });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calcular compatibilidad con perfiles potenciales\r\n   */\r\n  static async getMatchesWithCompatibility(filters?: {\r\n    maxDistance?: number;\r\n    minAge?: number;\r\n    maxAge?: number;\r\n    limit?: number;\r\n    minCompatibility?: number;\r\n  }): Promise<(SupabaseProfile & { matchScore: MatchScore })[]> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) return [];\r\n\r\n      // Obtener perfil del usuario actual\r\n      const { data: userProfile } = await supabase\r\n        .from('profiles')\r\n        .select('interests')\r\n        .eq('id', user.id)\r\n        .single();\r\n\r\n      const userInterests = (userProfile as any)?.interests || [];\r\n\r\n      // Obtener perfiles potenciales\r\n      const potentialMatches = await this.getPotentialMatches(filters);\r\n\r\n      // Calcular compatibilidad para cada perfil\r\n      const matchesWithScores = potentialMatches\r\n        .map(profile => {\r\n          const matchScore = {\r\n            profileId: profile.id,\r\n            compatibilityScore: calculateCompatibility(userInterests, profile.interests || []),\r\n            sharedInterests: getSharedInterests(userInterests, profile.interests || []),\r\n            matchReasons: generateMatchReasons(getSharedInterests(userInterests, profile.interests || []))\r\n          };\r\n\r\n          return {\r\n            ...profile,\r\n            matchScore\r\n          };\r\n        })\r\n        .filter(profile => profile.matchScore.compatibilityScore >= (filters?.minCompatibility || 20))\r\n        .sort((a, b) => b.matchScore.compatibilityScore - a.matchScore.compatibilityScore);\r\n\r\n      return matchesWithScores;\r\n\r\n    } catch (error) {\r\n      logger.error('Error al calcular compatibilidad:', { error: error instanceof Error ? error.message : String(error) });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // =====================================================\r\n  // INTERACCIONES DE MATCHES\r\n  // =====================================================\r\n\r\n  /**\r\n   * Enviar mensaje en un match\r\n   */\r\n  static async sendMessage(matchId: string, content: string): Promise<{ success: boolean; error?: string }> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('Usuario no autenticado');\r\n\r\n      const { error } = await supabase\r\n        .from('match_interactions')\r\n        .insert({\r\n          match_id: matchId,\r\n          user_id: user.id,\r\n          interaction_type: 'message',\r\n          content: content.trim(),\r\n          metadata: { timestamp: new Date().toISOString() }\r\n        } as any);\r\n\r\n      if (error) throw error;\r\n\r\n      return { success: true };\r\n\r\n    } catch (error) {\r\n      logger.error('Error al enviar mensaje:', { error: error instanceof Error ? error.message : String(error) });\r\n      return { success: false, error: 'Error al enviar el mensaje' };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Marcar match como visto\r\n   */\r\n  static async markMatchAsViewed(matchId: string): Promise<{ success: boolean; error?: string }> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('Usuario no autenticado');\r\n\r\n      const { error } = await (supabase as any)\r\n        .from('match_interactions')\r\n        .insert({\r\n          match_id: matchId,\r\n          user_id: user.id,\r\n          interaction_type: 'view',\r\n          metadata: { viewed_at: new Date().toISOString() }\r\n        });\r\n\r\n      if (error) throw error;\r\n\r\n      return { success: true };\r\n\r\n    } catch (error) {\r\n      logger.error('Error al marcar como visto:', { error: error instanceof Error ? error.message : String(error) });\r\n      return { success: false, error: 'Error al marcar como visto' };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtener mensajes de un match\r\n   */\r\n  static async getMatchMessages(matchId: string, limit: number = 50): Promise<MatchInteraction[]> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) return [];\r\n\r\n      const { data, error } = await supabase\r\n        .from('match_interactions')\r\n        .select('*')\r\n        .eq('match_id', matchId)\r\n        .eq('interaction_type', 'message')\r\n        .order('created_at', { ascending: false })\r\n        .limit(limit);\r\n\r\n      if (error) throw error;\r\n      \r\n      // Mapear datos de Supabase a nuestra interfaz MatchInteraction usando propiedades reales\r\n      const mappedData = (data || []).map(item => ({\r\n        id: item.id,\r\n        match_id: item.match_id || '',\r\n        user_id: item.user_id || '',\r\n        interaction_type: item.interaction_type as 'message' | 'like' | 'view' | 'block' | 'report',\r\n        content: undefined, // Esta propiedad no existe en la tabla real\r\n        metadata: undefined, // Esta propiedad no existe en la tabla real\r\n        created_at: item.created_at || new Date().toISOString()\r\n      }));\r\n      \r\n      return mappedData.reverse(); // Mostrar mensajes más antiguos primero\r\n\r\n    } catch (error) {\r\n      logger.error('Error al obtener mensajes:', { error: error instanceof Error ? error.message : String(error) });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // =====================================================\r\n  // GESTIÓN DE PERFIL\r\n  // =====================================================\r\n\r\n  /**\r\n   * Actualizar intereses del usuario\r\n   */\r\n  static async updateUserInterests(interests: string[]): Promise<{ success: boolean; error?: string }> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) throw new Error('Usuario no autenticado');\r\n\r\n      const { error } = await (supabase as any)\r\n        .from('profiles')\r\n        .update({ interests })\r\n        .eq('id', user.id);\r\n\r\n      if (error) throw error;\r\n\r\n      return { success: true };\r\n\r\n    } catch (error) {\r\n      logger.error('Error al actualizar intereses:', { error: error instanceof Error ? error.message : String(error) });\r\n      return { success: false, error: 'Error al actualizar intereses' };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Actualizar estado online del usuario\r\n   */\r\n  static async updateOnlineStatus(isOnline: boolean = true): Promise<void> {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) return;\r\n\r\n      await (supabase as any).rpc('update_user_activity', {\r\n        user_id: user.id,\r\n        is_online: isOnline\r\n      });\r\n\r\n    } catch (error) {\r\n      logger.error('Error al actualizar estado online:', { error: error instanceof Error ? error.message : String(error) });\r\n    }\r\n  }\r\n\r\n  // =====================================================\r\n  // UTILIDADES PRIVADAS\r\n  // =====================================================\r\n\r\n  /**\r\n   * Formatear match para el frontend\r\n   */\r\n  private static formatMatch(rawMatch: any, currentUserId: string): Match {\r\n    const otherUserId = rawMatch.user1_id === currentUserId ? rawMatch.user2_id : rawMatch.user1_id;\r\n    const otherUserProfile = rawMatch.user1_id === currentUserId \r\n      ? rawMatch.profiles_user2_id \r\n      : rawMatch.profiles_user1_id;\r\n\r\n    return {\r\n      id: rawMatch.id,\r\n      user1_id: rawMatch.user1_id,\r\n      user2_id: rawMatch.user2_id,\r\n      compatibility_score: rawMatch.compatibility_score,\r\n      shared_interests: rawMatch.shared_interests || [],\r\n      match_reasons: rawMatch.match_reasons || [],\r\n      created_at: rawMatch.created_at,\r\n      last_interaction: rawMatch.last_interaction,\r\n      is_active: rawMatch.is_active,\r\n      other_user: otherUserProfile ? {\r\n        id: otherUserId,\r\n        first_name: otherUserProfile.first_name,\r\n        last_name: otherUserProfile.last_name,\r\n        display_name: otherUserProfile.display_name,\r\n        avatar_url: otherUserProfile.avatar_url,\r\n        age: otherUserProfile.age,\r\n        interests: otherUserProfile.interests\r\n      } : undefined\r\n    };\r\n  }\r\n\r\n  // =====================================================\r\n  // SUSCRIPCIONES REALTIME\r\n  // =====================================================\r\n\r\n  /**\r\n   * Suscribirse a nuevos matches\r\n   */\r\n  static subscribeToMatches(callback: (match: Match) => void) {\r\n    return supabase\r\n      .channel('matches')\r\n      .on('postgres_changes', \r\n        { \r\n          event: 'INSERT', \r\n          schema: 'public', \r\n          table: 'matches' \r\n        }, \r\n        (payload) => {\r\n          logger.info('Nuevo match:', payload);\r\n          // TODO: Formatear y enviar el match al callback\r\n        }\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  /**\r\n   * Suscribirse a mensajes de un match\r\n   */\r\n  static subscribeToMatchMessages(matchId: string, callback: (message: MatchInteraction) => void) {\r\n    return supabase\r\n      .channel(`match_${matchId}`)\r\n      .on('postgres_changes',\r\n        {\r\n          event: 'INSERT',\r\n          schema: 'public',\r\n          table: 'match_interactions',\r\n          filter: `match_id=eq.${matchId}`\r\n        },\r\n        (payload) => {\r\n          if (payload.new.interaction_type === 'message') {\r\n            callback(payload.new as MatchInteraction);\r\n          }\r\n        }\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n\r\nexport default MatchingService;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\advancedFeatures.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'total' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":223,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":223,"endColumn":16},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'maxDistance' is defined but never used. Allowed unused args must match /^_/u.","line":234,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":234,"endColumn":16},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'userId' is defined but never used. Allowed unused args must match /^_/u.","line":600,"column":41,"nodeType":null,"messageId":"unusedVar","endLine":600,"endColumn":47},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'passedProfiles' is defined but never used. Allowed unused args must match /^_/u.","line":664,"column":73,"nodeType":null,"messageId":"unusedVar","endLine":664,"endColumn":87}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { supabase } from '@/integrations/supabase/client';\r\nimport { logger } from '@/lib/logger';\r\nimport { NotificationService } from '@/lib/notifications';\r\nimport type { Database } from '@/integrations/supabase/types';\r\n\r\ntype ProfileRow = Database['public']['Tables']['profiles']['Row'];\r\n\r\nexport interface AdvancedMatchingConfig {\r\n  algorithm: 'compatibility' | 'ml_based' | 'hybrid';\r\n  weights: {\r\n    interests: number;\r\n    location: number;\r\n    age: number;\r\n    education: number;\r\n    lifestyle: number;\r\n    personality: number;\r\n  };\r\n  filters: {\r\n    maxDistance: number;\r\n    ageRange: [number, number];\r\n    requiredInterests: string[];\r\n    dealBreakers: string[];\r\n  };\r\n}\r\n\r\nexport interface PersonalityInsight {\r\n  trait: string;\r\n  score: number;\r\n  description: string;\r\n  compatibility_factors: string[];\r\n}\r\n\r\nexport interface SmartRecommendation {\r\n  id: string;\r\n  user_id: string;\r\n  recommended_user_id: string;\r\n  compatibility_score: number;\r\n  reasons: string[];\r\n  confidence_level: number;\r\n  created_at: string;\r\n  viewed: boolean;\r\n  action_taken?: 'liked' | 'passed' | 'matched';\r\n}\r\n\r\nexport interface ConversationStarter {\r\n  id: string;\r\n  category: 'interests' | 'lifestyle' | 'personality' | 'fun' | 'deep';\r\n  text: string;\r\n  context_tags: string[];\r\n  success_rate: number;\r\n}\r\n\r\nexport interface VirtualDate {\r\n  id: string;\r\n  participants: string[];\r\n  type: 'video_call' | 'virtual_reality' | 'game' | 'movie_night' | 'cooking';\r\n  scheduled_at: string;\r\n  duration_minutes: number;\r\n  status: 'scheduled' | 'active' | 'completed' | 'cancelled';\r\n  activities: VirtualActivity[];\r\n}\r\n\r\nexport interface VirtualActivity {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  config: Record<string, any>;\r\n  duration_minutes: number;\r\n}\r\n\r\nexport class AdvancedFeaturesService {\r\n  /**\r\n   * Advanced Matching Algorithm v3.4\r\n   */\r\n  static async generateAdvancedMatches(\r\n    userId: string, \r\n    config: AdvancedMatchingConfig\r\n  ): Promise<SmartRecommendation[]> {\r\n    try {\r\n      // Get user profile and preferences\r\n      const { data: userProfile } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      if (!userProfile) throw new Error('User profile not found');\r\n\r\n      // Get potential matches\r\n      const { data: potentialMatches } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .neq('id', userId)\r\n        .limit(100);\r\n\r\n      if (!potentialMatches) return [];\r\n\r\n      // Calculate compatibility scores\r\n      const recommendations: SmartRecommendation[] = [];\r\n\r\n      for (const match of potentialMatches) {\r\n        const compatibility = await this.calculateAdvancedCompatibility(\r\n          userProfile,\r\n          match,\r\n          config\r\n        );\r\n\r\n        if (compatibility.score >= 0.6) { // 60% minimum compatibility\r\n          recommendations.push({\r\n            id: crypto.randomUUID(),\r\n            user_id: userId,\r\n            recommended_user_id: match.id,\r\n            compatibility_score: compatibility.score,\r\n            reasons: compatibility.reasons,\r\n            confidence_level: compatibility.confidence,\r\n            created_at: new Date().toISOString(),\r\n            viewed: false\r\n          });\r\n        }\r\n      }\r\n\r\n      // Sort by compatibility score\r\n      recommendations.sort((a, b) => b.compatibility_score - a.compatibility_score);\r\n\r\n      // Store recommendations\r\n      await this.storeRecommendations(recommendations);\r\n\r\n      return recommendations.slice(0, 10); // Return top 10\r\n    } catch (error) {\r\n      logger.error('Error generating advanced matches:', { error: error instanceof Error ? error.message : String(error) });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate advanced compatibility between two users\r\n   */\r\n  private static async calculateAdvancedCompatibility(\r\n    user1: ProfileRow,\r\n    user2: ProfileRow,\r\n    config: AdvancedMatchingConfig\r\n  ): Promise<{ score: number; reasons: string[]; confidence: number }> {\r\n    const scores: Record<string, number> = {};\r\n    const reasons: string[] = [];\r\n\r\n    // Interest compatibility\r\n    const interestScore = this.calculateInterestCompatibility(\r\n      user1.interests || [],\r\n      user2.interests || []\r\n    );\r\n    scores.interests = interestScore;\r\n    if (interestScore > 0.7) {\r\n      reasons.push(`Comparten ${Math.round(interestScore * 100)}% de preferencias lifestyle`);\r\n    }\r\n\r\n    // Location compatibility\r\n    const locationScore = this.calculateLocationCompatibility(\r\n      user1.location,\r\n      user2.location,\r\n      config.filters.maxDistance\r\n    );\r\n    scores.location = locationScore;\r\n    if (locationScore > 0.8) {\r\n      reasons.push('Ubicaciones ideales para encuentros discretos');\r\n    }\r\n\r\n    // Age compatibility\r\n    const ageScore = this.calculateAgeCompatibility(\r\n      user1.age || 25,\r\n      user2.age || 25,\r\n      config.filters.ageRange\r\n    );\r\n    scores.age = ageScore;\r\n\r\n    // Personality compatibility\r\n    const personalityScore = this.calculateInterestCompatibility(\r\n      user1.interests || [],\r\n      user2.interests || []\r\n    );\r\n    scores.personality = personalityScore;\r\n    if (personalityScore > 0.75) {\r\n      reasons.push('Química y conexión natural');\r\n    }\r\n\r\n    // Lifestyle compatibility\r\n    const lifestyleScore = this.calculateInterestCompatibility(\r\n      user1.interests || [],\r\n      user2.interests || []\r\n    );\r\n    scores.lifestyle = lifestyleScore;\r\n    if (lifestyleScore > 0.7) {\r\n      reasons.push('Experiencias y mentalidad lifestyle compatibles');\r\n    }\r\n\r\n    // Calculate weighted score\r\n    const totalScore = \r\n      (scores.interests * config.weights.interests) +\r\n      (scores.location * config.weights.location) +\r\n      (scores.age * config.weights.age) +\r\n      (scores.personality * config.weights.personality) +\r\n      (scores.lifestyle * config.weights.lifestyle);\r\n\r\n    const weightSum = Object.values(config.weights).reduce((sum, weight) => sum + weight, 0);\r\n    const finalScore = totalScore / weightSum;\r\n\r\n    // Calculate confidence based on data completeness\r\n    const confidence = this.calculateConfidenceLevel(user1, user2);\r\n\r\n    return {\r\n      score: finalScore,\r\n      reasons,\r\n      confidence\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calculate interest compatibility\r\n   */\r\n  private static calculateInterestCompatibility(interests1: string[], interests2: string[]): number {\r\n    if (interests1.length === 0 || interests2.length === 0) return 0.5;\r\n\r\n    const common = interests1.filter(interest => interests2.includes(interest));\r\n    const total = new Set([...interests1, ...interests2]).size;\r\n\r\n    return common.length / Math.max(interests1.length, interests2.length);\r\n  }\r\n\r\n  /**\r\n   * Calculate location compatibility\r\n   */\r\n  private static calculateLocationCompatibility(\r\n    location1: string | null,\r\n    location2: string | null,\r\n    maxDistance: number\r\n  ): number {\r\n    if (!location1 || !location2) return 0.5;\r\n\r\n    // Simple string comparison for location compatibility\r\n    // In a real app, you would parse coordinates and calculate actual distance\r\n    if (location1 === location2) return 1.0;\r\n    \r\n    // Check if locations are similar (same city/region)\r\n    const loc1Parts = location1.toLowerCase().split(',');\r\n    const loc2Parts = location2.toLowerCase().split(',');\r\n    \r\n    let commonParts = 0;\r\n    for (const part1 of loc1Parts) {\r\n      for (const part2 of loc2Parts) {\r\n        if (part1.trim() === part2.trim()) {\r\n          commonParts++;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return Math.min(1.0, commonParts / Math.max(loc1Parts.length, loc2Parts.length));\r\n  }\r\n\r\n  /**\r\n   * Calculate age compatibility\r\n   */\r\n  private static calculateAgeCompatibility(age1: number, age2: number, ageRange: [number, number]): number {\r\n    const ageDiff = Math.abs(age1 - age2);\r\n    const maxAcceptableDiff = (ageRange[1] - ageRange[0]) / 2;\r\n\r\n    return Math.max(0, 1 - (ageDiff / maxAcceptableDiff));\r\n  }\r\n\r\n  /**\r\n   * Calculate gender compatibility based on preferences\r\n   */\r\n  private static calculateGenderCompatibility(\r\n    gender1: string | null,\r\n    interestedIn1: string | null,\r\n    gender2: string | null,\r\n    interestedIn2: string | null\r\n  ): number {\r\n    if (!gender1 || !gender2 || !interestedIn1 || !interestedIn2) return 0.5;\r\n\r\n    // Check if each person is interested in the other's gender\r\n    const user1InterestedInUser2 = interestedIn1.toLowerCase().includes(gender2.toLowerCase()) || interestedIn1.toLowerCase() === 'all';\r\n    const user2InterestedInUser1 = interestedIn2.toLowerCase().includes(gender1.toLowerCase()) || interestedIn2.toLowerCase() === 'all';\r\n\r\n    if (user1InterestedInUser2 && user2InterestedInUser1) return 1.0;\r\n    if (user1InterestedInUser2 || user2InterestedInUser1) return 0.7;\r\n    return 0.1;\r\n  }\r\n\r\n  /**\r\n   * Calculate account type compatibility\r\n   */\r\n  private static calculateAccountTypeCompatibility(\r\n    accountType1: string | null,\r\n    lookingFor1: string | null,\r\n    accountType2: string | null,\r\n    lookingFor2: string | null\r\n  ): number {\r\n    if (!accountType1 || !accountType2) return 0.5;\r\n\r\n    // Simple compatibility based on what each user is looking for\r\n    const type1Match = !lookingFor1 || lookingFor1.toLowerCase().includes(accountType2.toLowerCase());\r\n    const type2Match = !lookingFor2 || lookingFor2.toLowerCase().includes(accountType1.toLowerCase());\r\n\r\n    if (type1Match && type2Match) return 1.0;\r\n    if (type1Match || type2Match) return 0.7;\r\n    return 0.3;\r\n  }\r\n\r\n  /**\r\n   * Calculate confidence level based on profile completeness\r\n   */\r\n  private static calculateConfidenceLevel(user1: ProfileRow, user2: ProfileRow): number {\r\n    const requiredFields = ['interests', 'personality_traits', 'lifestyle_preferences', 'age'];\r\n    \r\n    let user1Completeness = 0;\r\n    let user2Completeness = 0;\r\n\r\n    for (const field of requiredFields) {\r\n      const value1 = user1[field as keyof ProfileRow];\r\n      const value2 = user2[field as keyof ProfileRow];\r\n      \r\n      if (field === 'age') {\r\n        if (value1 && typeof value1 === 'number') user1Completeness++;\r\n        if (value2 && typeof value2 === 'number') user2Completeness++;\r\n      } else if (field === 'interests') {\r\n        if (value1 && Array.isArray(value1) && value1.length > 0) user1Completeness++;\r\n        if (value2 && Array.isArray(value2) && value2.length > 0) user2Completeness++;\r\n      } else {\r\n        // For JSONB fields (personality_traits, lifestyle_preferences)\r\n        if (value1 && typeof value1 === 'object' && value1 !== null && Object.keys(value1).length > 0) user1Completeness++;\r\n        if (value2 && typeof value2 === 'object' && value2 !== null && Object.keys(value2).length > 0) user2Completeness++;\r\n      }\r\n    }\r\n\r\n    return ((user1Completeness + user2Completeness) / (requiredFields.length * 2));\r\n  }\r\n\r\n  /**\r\n   * Store recommendations in database\r\n   */\r\n  private static async storeRecommendations(recommendations: SmartRecommendation[]): Promise<void> {\r\n    try {\r\n      // In a real implementation, store in database\r\n      logger.info(`Stored ${recommendations.length} recommendations`);\r\n    } catch (error) {\r\n      logger.error('Error calculating compatibility:', { error: error instanceof Error ? error.message : String(error) });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate personality insights\r\n   */\r\n  static async generatePersonalityInsights(userId: string): Promise<PersonalityInsight[]> {\r\n    try {\r\n      const { data: profile } = await supabase\r\n        .from('profiles')\r\n        .select('interests, bio, age, gender, account_type, personality_traits')\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      if (!profile?.interests || profile.interests.length === 0) return [];\r\n\r\n      const insights: PersonalityInsight[] = [];\r\n      const traits = profile.personality_traits as Record<string, number> | null;\r\n\r\n      if (!traits) return [];\r\n\r\n      // Analyze each personality trait\r\n      if (traits.openness !== undefined) {\r\n        insights.push({\r\n          trait: 'Apertura',\r\n          score: traits.openness,\r\n          description: this.getOpennessDescription(traits.openness),\r\n          compatibility_factors: ['Creatividad', 'Aventura', 'Nuevas experiencias']\r\n        });\r\n      }\r\n\r\n      if (traits.conscientiousness !== undefined) {\r\n        insights.push({\r\n          trait: 'Responsabilidad',\r\n          score: traits.conscientiousness,\r\n          description: this.getConscientiousnessDescription(traits.conscientiousness),\r\n          compatibility_factors: ['Organización', 'Puntualidad', 'Planificación']\r\n        });\r\n      }\r\n\r\n      if (traits.extraversion !== undefined) {\r\n        insights.push({\r\n          trait: 'Extraversión',\r\n          score: traits.extraversion,\r\n          description: this.getExtraversionDescription(traits.extraversion),\r\n          compatibility_factors: ['Socialización', 'Energía', 'Comunicación']\r\n        });\r\n      }\r\n\r\n      return insights;\r\n    } catch (error) {\r\n      logger.error('Error generating personality insights:', { error: error instanceof Error ? error.message : String(error) });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get openness description\r\n   */\r\n  private static getOpennessDescription(score: number): string {\r\n    if (score >= 80) return 'Muy abierto a nuevas experiencias, creativo y aventurero';\r\n    if (score >= 60) return 'Moderadamente abierto, disfruta de la variedad';\r\n    if (score >= 40) return 'Equilibrado entre tradición y novedad';\r\n    if (score >= 20) return 'Prefiere lo familiar y establecido';\r\n    return 'Muy tradicional, prefiere rutinas conocidas';\r\n  }\r\n\r\n  /**\r\n   * Get conscientiousness description\r\n   */\r\n  private static getConscientiousnessDescription(score: number): string {\r\n    if (score >= 80) return 'Muy organizado, disciplinado y confiable';\r\n    if (score >= 60) return 'Generalmente responsable y organizado';\r\n    if (score >= 40) return 'Equilibrio entre espontaneidad y organización';\r\n    if (score >= 20) return 'Más espontáneo, menos estructurado';\r\n    return 'Muy espontáneo, prefiere la flexibilidad';\r\n  }\r\n\r\n  /**\r\n   * Get extraversion description\r\n   */\r\n  private static getExtraversionDescription(score: number): string {\r\n    if (score >= 80) return 'Muy extrovertido, energético y sociable';\r\n    if (score >= 60) return 'Sociable y comunicativo';\r\n    if (score >= 40) return 'Equilibrio entre socialización y soledad';\r\n    if (score >= 20) return 'Más introvertido, prefiere grupos pequeños';\r\n    return 'Muy introvertido, prefiere la soledad';\r\n  }\r\n\r\n  /**\r\n   * Generate conversation starters\r\n   */\r\n  static async generateConversationStarters(\r\n    userId: string,\r\n    matchId: string\r\n  ): Promise<ConversationStarter[]> {\r\n    try {\r\n      const { data: userProfile } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', userId)\r\n        .single();\r\n\r\n      const { data: matchProfile } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', matchId)\r\n        .single();\r\n\r\n      if (!userProfile || !matchProfile) return [];\r\n\r\n      const starters: ConversationStarter[] = [];\r\n      const commonInterests = (userProfile.interests || [])\r\n        .filter((interest: string) => (matchProfile.interests || []).includes(interest));\r\n\r\n      // Lifestyle-based starters\r\n      for (const interest of commonInterests.slice(0, 3)) {\r\n        starters.push({\r\n          id: crypto.randomUUID(),\r\n          category: 'lifestyle',\r\n          text: `Veo que compartimos interés en ${interest}. ¿Qué te atrajo inicialmente a esta experiencia?`,\r\n          context_tags: [interest],\r\n          success_rate: 0.75\r\n        });\r\n      }\r\n\r\n      // Connection-based starters\r\n      const userTraits = userProfile.personality_traits as Record<string, number> | null;\r\n      const matchTraits = matchProfile.personality_traits as Record<string, number> | null;\r\n      \r\n      if ((userTraits?.extraversion || 0) > 60 && (matchTraits?.extraversion || 0) > 60) {\r\n        starters.push({\r\n          id: crypto.randomUUID(),\r\n          category: 'personality',\r\n          text: 'Hola! Me gusta la conexión auténtica. ¿Qué buscas en una experiencia compartida?',\r\n          context_tags: ['connection', 'authentic'],\r\n          success_rate: 0.80\r\n        });\r\n      }\r\n\r\n      // Lifestyle conversation starters\r\n      starters.push(\r\n        {\r\n          id: crypto.randomUUID(),\r\n          category: 'lifestyle',\r\n          text: '¿Qué te parece más importante en una conexión: la química instantánea o conocerse gradualmente?',\r\n          context_tags: ['connection', 'chemistry'],\r\n          success_rate: 0.70\r\n        },\r\n        {\r\n          id: crypto.randomUUID(),\r\n          category: 'lifestyle',\r\n          text: '¿Prefieres ambientes íntimos y reservados o experiencias más sociales y abiertas?',\r\n          context_tags: ['preferences', 'lifestyle'],\r\n          success_rate: 0.85\r\n        }\r\n      );\r\n\r\n      return starters;\r\n    } catch (error) {\r\n      logger.error('Error generating conversation starters:', { error: error instanceof Error ? error.message : String(error) });\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Schedule virtual date\r\n   */\r\n  static async scheduleVirtualDate(\r\n    participants: string[],\r\n    type: VirtualDate['type'],\r\n    scheduledAt: string,\r\n    activities: VirtualActivity[]\r\n  ): Promise<VirtualDate> {\r\n    try {\r\n      const virtualDate: VirtualDate = {\r\n        id: crypto.randomUUID(),\r\n        participants,\r\n        type,\r\n        scheduled_at: scheduledAt,\r\n        duration_minutes: activities.reduce((total, activity) => total + activity.duration_minutes, 0),\r\n        status: 'scheduled',\r\n        activities\r\n      };\r\n\r\n      // Store in database (simplified)\r\n      logger.info('Virtual date scheduled:', virtualDate);\r\n\r\n      // Send notifications to participants\r\n      for (const participantId of participants) {\r\n        await NotificationService.createNotification({\r\n          userId: participantId,\r\n          type: 'system',\r\n          title: '¡Cita virtual programada! 💕',\r\n          message: `Tu cita virtual está programada para ${new Date(scheduledAt).toLocaleDateString()}`,\r\n          actionUrl: `/virtual-dates/${virtualDate.id}`,\r\n          metadata: { virtual_date_id: virtualDate.id }\r\n        });\r\n      }\r\n\r\n      return virtualDate;\r\n    } catch (error) {\r\n      logger.error('Error scheduling virtual date:', { error: error instanceof Error ? error.message : String(error) });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get virtual date activities\r\n   */\r\n  static getVirtualDateActivities(): VirtualActivity[] {\r\n    return [\r\n      {\r\n        id: 'intimate-conversation',\r\n        name: 'Conversación Íntima',\r\n        type: 'video_call',\r\n        config: { private_room: true, mood_lighting: true, discretion_mode: true },\r\n        duration_minutes: 60\r\n      },\r\n      {\r\n        id: 'couples-game-night',\r\n        name: 'Noche de Juegos para Parejas',\r\n        type: 'game',\r\n        config: { game_types: ['truth_or_dare', 'intimate_questions', 'compatibility_quiz'], adult_content: true },\r\n        duration_minutes: 90\r\n      },\r\n      {\r\n        id: 'virtual-date-experience',\r\n        name: 'Experiencia de Cita Virtual',\r\n        type: 'virtual_reality',\r\n        config: { romantic_settings: ['beach_sunset', 'cozy_cabin', 'luxury_suite'], privacy_assured: true },\r\n        duration_minutes: 120\r\n      },\r\n      {\r\n        id: 'lifestyle-discussion',\r\n        name: 'Charla sobre Estilo de Vida',\r\n        type: 'video_call',\r\n        config: { topics: ['boundaries', 'preferences', 'experiences'], safe_space: true },\r\n        duration_minutes: 45\r\n      },\r\n      {\r\n        id: 'couples-workshop',\r\n        name: 'Taller para Parejas',\r\n        type: 'group_session',\r\n        config: { workshop_types: ['communication', 'exploration', 'connection'], guided_experience: true },\r\n        duration_minutes: 90\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get advanced matching statistics\r\n   */\r\n  static async getAdvancedMatchingStats(userId: string): Promise<{\r\n    totalRecommendations: number;\r\n    viewedRecommendations: number;\r\n    matchRate: number;\r\n    averageCompatibility: number;\r\n  }> {\r\n    // In a real implementation, this would query the database\r\n    return {\r\n      totalRecommendations: 150,\r\n      viewedRecommendations: 89,\r\n      matchRate: 0.23,\r\n      averageCompatibility: 0.78\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update user preferences based on behavior\r\n   */\r\n  static async updatePreferencesFromBehavior(\r\n    userId: string,\r\n    interactions: Array<{ action: string; target_user_id: string; timestamp: string }>\r\n  ): Promise<void> {\r\n    try {\r\n      // Analyze user behavior patterns\r\n      const likedUsers = interactions\r\n        .filter(i => i.action === 'liked')\r\n        .map(i => i.target_user_id);\r\n\r\n      const passedUsers = interactions\r\n        .filter(i => i.action === 'passed')\r\n        .map(i => i.target_user_id);\r\n\r\n      // Get profiles of liked and passed users\r\n      const { data: likedProfiles } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .in('id', likedUsers);\r\n\r\n      const { data: passedProfiles } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .in('id', passedUsers);\r\n\r\n      // Analyze patterns and update user preferences\r\n      const preferenceUpdates = this.analyzePreferencePatterns(likedProfiles || [], passedProfiles || []);\r\n\r\n      // Update user preferences\r\n      await supabase\r\n        .from('profiles')\r\n        .update({ \r\n          learned_preferences: preferenceUpdates,\r\n          updated_at: new Date().toISOString()\r\n        } as never)\r\n        .eq('id', userId);\r\n\r\n      logger.info('User preferences updated based on behavior:', { userId, updates: preferenceUpdates });\r\n    } catch (error) {\r\n      logger.error('Error updating learning preferences:', { error: error instanceof Error ? error.message : String(error) });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analyze preference patterns from user behavior\r\n   */\r\n  private static analyzePreferencePatterns(likedProfiles: ProfileRow[], passedProfiles: ProfileRow[]): Record<string, unknown> {\r\n    const patterns: Record<string, unknown> = {\r\n      preferred_age_range: null,\r\n      preferred_interests: [],\r\n      preferred_locations: [],\r\n      preferred_account_types: [],\r\n      confidence_score: 0\r\n    };\r\n\r\n    if (likedProfiles.length === 0) return patterns;\r\n\r\n    // Analyze age preferences\r\n    const likedAges = likedProfiles.map(p => p.age).filter((age): age is number => age !== null);\r\n    if (likedAges.length > 0) {\r\n      patterns.preferred_age_range = [\r\n        Math.min(...likedAges) - 2,\r\n        Math.max(...likedAges) + 2\r\n      ];\r\n    }\r\n\r\n    // Analyze interest preferences\r\n    const interestCounts: Record<string, number> = {};\r\n    likedProfiles.forEach(profile => {\r\n      (profile.interests || []).forEach((interest: string) => {\r\n        interestCounts[interest] = (interestCounts[interest] || 0) + 1;\r\n      });\r\n    });\r\n\r\n    patterns.preferred_interests = Object.entries(interestCounts)\r\n      .filter(([_, count]) => count >= Math.ceil(likedProfiles.length * 0.3))\r\n      .map(([interest, _]) => interest);\r\n\r\n    // Calculate confidence based on sample size\r\n    patterns.confidence_score = Math.min(1, likedProfiles.length / 20);\r\n\r\n    return patterns;\r\n  }\r\n}\r\n\r\nexport default AdvancedFeaturesService;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\ai\\contentModeration.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'hasAppropriateContext' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":397,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":397,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Sistema de moderación de contenido con IA para ComplicesConecta\r\n * Detecta contenido inapropiado y protege la comunidad sin modificar lógica existente\r\n */\r\n\r\nimport { logger } from '@/lib/logger';\r\n\r\n// Tipos para moderación de contenido\r\ninterface ModerationResult {\r\n  isApproved: boolean;\r\n  confidence: number;        // 0-100\r\n  flags: ModerationFlag[];\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  suggestedAction: ModerationAction;\r\n  explanation: string;\r\n  processedAt: Date;\r\n}\r\n\r\ninterface ModerationFlag {\r\n  type: FlagType;\r\n  severity: number;         // 0-100\r\n  description: string;\r\n  evidence?: string[];      // Palabras/frases específicas\r\n}\r\n\r\ntype FlagType = \r\n  | 'inappropriate_language'\r\n  | 'sexual_explicit'\r\n  | 'harassment'\r\n  | 'spam'\r\n  | 'fake_profile'\r\n  | 'underage_content'\r\n  | 'violence_threats'\r\n  | 'hate_speech'\r\n  | 'personal_info'\r\n  | 'commercial_content'\r\n  | 'duplicate_content'\r\n  | 'low_quality';\r\n\r\ntype ModerationAction = \r\n  | 'approve'\r\n  | 'flag_for_review'\r\n  | 'auto_reject'\r\n  | 'require_verification'\r\n  | 'shadow_ban'\r\n  | 'permanent_ban';\r\n\r\ninterface ContentToModerate {\r\n  type: 'profile' | 'message' | 'image' | 'bio' | 'comment';\r\n  content: string;\r\n  userId: string;\r\n  metadata?: {\r\n    imageUrl?: string;\r\n    recipientId?: string;\r\n    context?: string;\r\n  };\r\n}\r\n\r\ninterface ModerationConfig {\r\n  strictness: 'permissive' | 'moderate' | 'strict';\r\n  autoApproveThreshold: number;    // Score mínimo para auto-aprobar\r\n  autoRejectThreshold: number;     // Score máximo para auto-rechazar\r\n  requireHumanReview: boolean;     // Siempre requiere revisión humana\r\n  communitySpecific: boolean;      // Usar reglas específicas para swingers\r\n}\r\n\r\nclass ContentModerationEngine {\r\n  private config: ModerationConfig;\r\n  \r\n  // Diccionarios de palabras y patrones\r\n  private readonly INAPPROPRIATE_WORDS = new Set([\r\n    // Palabras explícitamente prohibidas (manteniendo contexto swinger apropiado)\r\n    'menor', 'niño', 'niña', 'adolescente', 'escolar',\r\n    'drogas', 'cocaína', 'marihuana', 'heroína',\r\n    'prostitución', 'escort', 'pago', 'dinero por',\r\n    'violencia', 'golpear', 'lastimar', 'forzar'\r\n  ]);\r\n\r\n  private readonly SPAM_PATTERNS = [\r\n    /telegram\\s*[@:]?\\s*\\w+/i,\r\n    /whatsapp\\s*[@:]?\\s*\\+?\\d+/i,\r\n    /instagram\\s*[@:]?\\s*\\w+/i,\r\n    /onlyfans\\s*[@:]?\\s*\\w+/i,\r\n    /www\\.\\w+\\.\\w+/i,\r\n    /https?:\\/\\/\\w+/i,\r\n    /\\$\\d+|\\d+\\s*pesos|\\d+\\s*dólares/i\r\n  ];\r\n\r\n  private readonly PERSONAL_INFO_PATTERNS = [\r\n    /\\b\\d{4}[-\\s]?\\d{4}[-\\s]?\\d{4}[-\\s]?\\d{4}\\b/, // Tarjetas de crédito\r\n    /\\b\\d{2,3}[-\\s]?\\d{7,8}\\b/,                    // Teléfonos mexicanos\r\n    /\\b[A-Z]{4}\\d{6}[A-Z0-9]{3}\\b/,               // CURP\r\n    /\\b[A-Z]{3,4}\\d{6}[A-Z0-9]{3}\\b/              // RFC\r\n  ];\r\n\r\n  private readonly SWINGER_APPROPRIATE_TERMS = new Set([\r\n    'intercambio', 'parejas', 'liberal', 'abierto', 'consensual',\r\n    'discreción', 'respeto', 'límites', 'experiencia', 'aventura',\r\n    'encuentro', 'conexión', 'química', 'compatibilidad'\r\n  ]);\r\n\r\n  constructor(config: Partial<ModerationConfig> = {}) {\r\n    this.config = {\r\n      strictness: 'moderate',\r\n      autoApproveThreshold: 80,\r\n      autoRejectThreshold: 30,\r\n      requireHumanReview: false,\r\n      communitySpecific: true,\r\n      ...config\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Modera contenido y devuelve resultado\r\n   */\r\n  public async moderateContent(content: ContentToModerate): Promise<ModerationResult> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      const flags = await this.analyzeContent(content);\r\n      const severity = this.calculateSeverity(flags);\r\n      const confidence = this.calculateConfidence(flags, content);\r\n      const suggestedAction = this.determinAction(flags, severity, confidence);\r\n      const isApproved = suggestedAction === 'approve';\r\n      const explanation = this.generateExplanation(flags, suggestedAction);\r\n\r\n      const result: ModerationResult = {\r\n        isApproved,\r\n        confidence,\r\n        flags,\r\n        severity,\r\n        suggestedAction,\r\n        explanation,\r\n        processedAt: new Date()\r\n      };\r\n\r\n      const processingTime = Date.now() - startTime;\r\n      \r\n      logger.info('🛡️ Contenido moderado', {\r\n        contentType: content.type,\r\n        userId: content.userId.substring(0, 8) + '***',\r\n        isApproved,\r\n        severity,\r\n        flagsCount: flags.length,\r\n        processingTime: `${processingTime}ms`\r\n      });\r\n\r\n      return result;\r\n      \r\n    } catch (error) {\r\n      logger.error('❌ Error en moderación de contenido', { \r\n        contentType: content.type, \r\n        error \r\n      });\r\n      \r\n      // Fallback seguro: rechazar en caso de error\r\n      return {\r\n        isApproved: false,\r\n        confidence: 0,\r\n        flags: [{ \r\n          type: 'low_quality', \r\n          severity: 50, \r\n          description: 'Error en el procesamiento' \r\n        }],\r\n        severity: 'medium',\r\n        suggestedAction: 'flag_for_review',\r\n        explanation: 'Error técnico durante la moderación',\r\n        processedAt: new Date()\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Analiza el contenido y genera flags\r\n   */\r\n  private async analyzeContent(content: ContentToModerate): Promise<ModerationFlag[]> {\r\n    const flags: ModerationFlag[] = [];\r\n    const text = content.content.toLowerCase();\r\n\r\n    // 1. Verificar palabras inapropiadas\r\n    const inappropriateFlags = this.checkInappropriateLanguage(text);\r\n    flags.push(...inappropriateFlags);\r\n\r\n    // 2. Detectar spam y contenido comercial\r\n    const spamFlags = this.detectSpam(text);\r\n    flags.push(...spamFlags);\r\n\r\n    // 3. Verificar información personal\r\n    const personalInfoFlags = this.detectPersonalInfo(content.content);\r\n    flags.push(...personalInfoFlags);\r\n\r\n    // 4. Análisis específico por tipo de contenido\r\n    switch (content.type) {\r\n      case 'profile':\r\n      case 'bio':\r\n        flags.push(...this.analyzeProfileContent(text));\r\n        break;\r\n      case 'message':\r\n        flags.push(...this.analyzeMessageContent(text, content.metadata));\r\n        break;\r\n      case 'image':\r\n        flags.push(...await this.analyzeImageContent(content.metadata?.imageUrl));\r\n        break;\r\n    }\r\n\r\n    // 5. Verificaciones específicas para comunidad swinger\r\n    if (this.config.communitySpecific) {\r\n      flags.push(...this.applyCommunityRules(text, content.type));\r\n    }\r\n\r\n    return flags;\r\n  }\r\n\r\n  /**\r\n   * Verifica lenguaje inapropiado\r\n   */\r\n  private checkInappropriateLanguage(text: string): ModerationFlag[] {\r\n    const flags: ModerationFlag[] = [];\r\n    const words = text.split(/\\s+/);\r\n    const foundWords: string[] = [];\r\n\r\n    for (const word of words) {\r\n      const cleanWord = word.replace(/[^\\w]/g, '');\r\n      if (this.INAPPROPRIATE_WORDS.has(cleanWord)) {\r\n        foundWords.push(word);\r\n      }\r\n    }\r\n\r\n    if (foundWords.length > 0) {\r\n      flags.push({\r\n        type: 'inappropriate_language',\r\n        severity: Math.min(100, foundWords.length * 30),\r\n        description: `Lenguaje inapropiado detectado: ${foundWords.length} palabras`,\r\n        evidence: foundWords\r\n      });\r\n    }\r\n\r\n    return flags;\r\n  }\r\n\r\n  /**\r\n   * Detecta spam y contenido comercial\r\n   */\r\n  private detectSpam(text: string): ModerationFlag[] {\r\n    const flags: ModerationFlag[] = [];\r\n    const matches: string[] = [];\r\n\r\n    for (const pattern of this.SPAM_PATTERNS) {\r\n      const match = text.match(pattern);\r\n      if (match) {\r\n        matches.push(match[0]);\r\n      }\r\n    }\r\n\r\n    if (matches.length > 0) {\r\n      flags.push({\r\n        type: 'spam',\r\n        severity: Math.min(100, matches.length * 40),\r\n        description: `Posible spam detectado: ${matches.length} patrones`,\r\n        evidence: matches\r\n      });\r\n    }\r\n\r\n    // Detectar repetición excesiva\r\n    const repetitionScore = this.calculateRepetitionScore(text);\r\n    if (repetitionScore > 70) {\r\n      flags.push({\r\n        type: 'spam',\r\n        severity: repetitionScore,\r\n        description: 'Contenido repetitivo detectado'\r\n      });\r\n    }\r\n\r\n    return flags;\r\n  }\r\n\r\n  /**\r\n   * Detecta información personal sensible\r\n   */\r\n  private detectPersonalInfo(text: string): ModerationFlag[] {\r\n    const flags: ModerationFlag[] = [];\r\n    const matches: string[] = [];\r\n\r\n    for (const pattern of this.PERSONAL_INFO_PATTERNS) {\r\n      const match = text.match(pattern);\r\n      if (match) {\r\n        matches.push(match[0]);\r\n      }\r\n    }\r\n\r\n    if (matches.length > 0) {\r\n      flags.push({\r\n        type: 'personal_info',\r\n        severity: 80,\r\n        description: `Información personal detectada: ${matches.length} elementos`,\r\n        evidence: matches.map(m => m.replace(/./g, '*')) // Censurar evidencia\r\n      });\r\n    }\r\n\r\n    return flags;\r\n  }\r\n\r\n  /**\r\n   * Analiza contenido de perfil\r\n   */\r\n  private analyzeProfileContent(text: string): ModerationFlag[] {\r\n    const flags: ModerationFlag[] = [];\r\n\r\n    // Verificar longitud mínima\r\n    if (text.length < 20) {\r\n      flags.push({\r\n        type: 'low_quality',\r\n        severity: 40,\r\n        description: 'Descripción muy corta'\r\n      });\r\n    }\r\n\r\n    // Verificar si es demasiado explícito para un perfil público\r\n    const explicitScore = this.calculateExplicitnessScore(text);\r\n    if (explicitScore > 80) {\r\n      flags.push({\r\n        type: 'sexual_explicit',\r\n        severity: explicitScore,\r\n        description: 'Contenido demasiado explícito para perfil público'\r\n      });\r\n    }\r\n\r\n    return flags;\r\n  }\r\n\r\n  /**\r\n   * Analiza contenido de mensajes\r\n   */\r\n  private analyzeMessageContent(text: string, metadata?: any): ModerationFlag[] {\r\n    const flags: ModerationFlag[] = [];\r\n\r\n    // Los mensajes privados pueden ser más permisivos\r\n    const isPrivateMessage = metadata?.recipientId;\r\n    \r\n    if (!isPrivateMessage) {\r\n      // Mensajes públicos más estrictos\r\n      const explicitScore = this.calculateExplicitnessScore(text);\r\n      if (explicitScore > 60) {\r\n        flags.push({\r\n          type: 'sexual_explicit',\r\n          severity: explicitScore,\r\n          description: 'Contenido explícito en mensaje público'\r\n        });\r\n      }\r\n    }\r\n\r\n    // Detectar acoso independientemente del tipo de mensaje\r\n    const harassmentScore = this.detectHarassment(text);\r\n    if (harassmentScore > 50) {\r\n      flags.push({\r\n        type: 'harassment',\r\n        severity: harassmentScore,\r\n        description: 'Posible acoso detectado'\r\n      });\r\n    }\r\n\r\n    return flags;\r\n  }\r\n\r\n  /**\r\n   * Analiza contenido de imágenes (placeholder para futura implementación)\r\n   */\r\n  private async analyzeImageContent(imageUrl?: string): Promise<ModerationFlag[]> {\r\n    const flags: ModerationFlag[] = [];\r\n    \r\n    if (!imageUrl) return flags;\r\n\r\n    // TODO: Implementar análisis de imágenes con IA\r\n    // Por ahora, verificaciones básicas\r\n    \r\n    // Verificar si la URL es válida\r\n    try {\r\n      new URL(imageUrl);\r\n    } catch {\r\n      flags.push({\r\n        type: 'low_quality',\r\n        severity: 30,\r\n        description: 'URL de imagen inválida'\r\n      });\r\n    }\r\n\r\n    return flags;\r\n  }\r\n\r\n  /**\r\n   * Aplica reglas específicas de la comunidad swinger\r\n   */\r\n  private applyCommunityRules(text: string, contentType: string): ModerationFlag[] {\r\n    const flags: ModerationFlag[] = [];\r\n\r\n    // Verificar que se mantenga el contexto apropiado\r\n    const hasAppropriateContext = Array.from(this.SWINGER_APPROPRIATE_TERMS)\r\n      .some(term => text.includes(term));\r\n\r\n    const hasInappropriateContext = text.includes('menor') || \r\n                                   text.includes('pago') ||\r\n                                   text.includes('prostituc');\r\n\r\n    if (hasInappropriateContext) {\r\n      flags.push({\r\n        type: 'inappropriate_language',\r\n        severity: 90,\r\n        description: 'Contenido inapropiado para comunidad swinger'\r\n      });\r\n    }\r\n\r\n    // Para perfiles, verificar que mencionen discreción/respeto\r\n    if (contentType === 'profile' && text.length > 50) {\r\n      const mentionsDiscretion = text.includes('discre') || \r\n                                text.includes('respeto') ||\r\n                                text.includes('límite');\r\n      \r\n      if (!mentionsDiscretion) {\r\n        flags.push({\r\n          type: 'low_quality',\r\n          severity: 20,\r\n          description: 'Perfil podría beneficiarse mencionando discreción/respeto'\r\n        });\r\n      }\r\n    }\r\n\r\n    return flags;\r\n  }\r\n\r\n  /**\r\n   * Calcula score de repetición\r\n   */\r\n  private calculateRepetitionScore(text: string): number {\r\n    const words = text.toLowerCase().split(/\\s+/);\r\n    const wordCount = new Map<string, number>();\r\n    \r\n    for (const word of words) {\r\n      if (word.length > 3) { // Ignorar palabras muy cortas\r\n        wordCount.set(word, (wordCount.get(word) || 0) + 1);\r\n      }\r\n    }\r\n\r\n    let repetitionScore = 0;\r\n    for (const count of wordCount.values()) {\r\n      if (count > 2) {\r\n        repetitionScore += (count - 2) * 20;\r\n      }\r\n    }\r\n\r\n    return Math.min(100, repetitionScore);\r\n  }\r\n\r\n  /**\r\n   * Calcula score de contenido explícito\r\n   */\r\n  private calculateExplicitnessScore(text: string): number {\r\n    const explicitTerms = [\r\n      'sexo', 'sexual', 'íntimo', 'desnudo', 'orgasmo',\r\n      'penetración', 'oral', 'anal', 'masturbación'\r\n    ];\r\n\r\n    let score = 0;\r\n    const words = text.toLowerCase().split(/\\s+/);\r\n    \r\n    for (const word of words) {\r\n      for (const term of explicitTerms) {\r\n        if (word.includes(term)) {\r\n          score += 15;\r\n        }\r\n      }\r\n    }\r\n\r\n    return Math.min(100, score);\r\n  }\r\n\r\n  /**\r\n   * Detecta posible acoso\r\n   */\r\n  private detectHarassment(text: string): number {\r\n    const harassmentPatterns = [\r\n      /no\\s+acepto\\s+un?\\s+no/i,\r\n      /insist[eo]/i,\r\n      /obligad[ao]/i,\r\n      /tienes?\\s+que/i,\r\n      /debes?\\s+hacer/i\r\n    ];\r\n\r\n    let score = 0;\r\n    for (const pattern of harassmentPatterns) {\r\n      if (pattern.test(text)) {\r\n        score += 30;\r\n      }\r\n    }\r\n\r\n    return Math.min(100, score);\r\n  }\r\n\r\n  /**\r\n   * Calcula severidad general\r\n   */\r\n  private calculateSeverity(flags: ModerationFlag[]): ModerationResult['severity'] {\r\n    if (flags.length === 0) return 'low';\r\n\r\n    const maxSeverity = Math.max(...flags.map(f => f.severity));\r\n    const criticalFlags = flags.filter(f => \r\n      f.type === 'underage_content' || \r\n      f.type === 'violence_threats' ||\r\n      f.type === 'hate_speech'\r\n    );\r\n\r\n    if (criticalFlags.length > 0 || maxSeverity >= 90) return 'critical';\r\n    if (maxSeverity >= 70) return 'high';\r\n    if (maxSeverity >= 40) return 'medium';\r\n    return 'low';\r\n  }\r\n\r\n  /**\r\n   * Calcula confianza en el resultado\r\n   */\r\n  private calculateConfidence(flags: ModerationFlag[], content: ContentToModerate): number {\r\n    let confidence = 70; // Base\r\n\r\n    // Aumentar confianza con más evidencia\r\n    const evidenceCount = flags.reduce((sum, f) => sum + (f.evidence?.length || 0), 0);\r\n    confidence += Math.min(20, evidenceCount * 2);\r\n\r\n    // Reducir confianza con contenido muy corto\r\n    if (content.content.length < 10) {\r\n      confidence -= 20;\r\n    }\r\n\r\n    // Aumentar confianza con flags de alta severidad\r\n    const highSeverityFlags = flags.filter(f => f.severity >= 80);\r\n    confidence += highSeverityFlags.length * 5;\r\n\r\n    return Math.max(0, Math.min(100, confidence));\r\n  }\r\n\r\n  /**\r\n   * Determina acción recomendada\r\n   */\r\n  private determinAction(\r\n    flags: ModerationFlag[], \r\n    severity: ModerationResult['severity'], \r\n    confidence: number\r\n  ): ModerationAction {\r\n    // Casos críticos siempre requieren acción inmediata\r\n    if (severity === 'critical') {\r\n      return confidence > 80 ? 'auto_reject' : 'flag_for_review';\r\n    }\r\n\r\n    // Calcular score general\r\n    const totalScore = flags.reduce((sum, f) => sum + f.severity, 0) / Math.max(1, flags.length);\r\n\r\n    if (this.config.requireHumanReview) {\r\n      return 'flag_for_review';\r\n    }\r\n\r\n    if (totalScore >= this.config.autoRejectThreshold && confidence > 70) {\r\n      return 'auto_reject';\r\n    }\r\n\r\n    if (totalScore <= this.config.autoApproveThreshold || flags.length === 0) {\r\n      return 'approve';\r\n    }\r\n\r\n    return 'flag_for_review';\r\n  }\r\n\r\n  /**\r\n   * Genera explicación del resultado\r\n   */\r\n  private generateExplanation(flags: ModerationFlag[], action: ModerationAction): string {\r\n    if (flags.length === 0) {\r\n      return 'Contenido aprobado sin problemas detectados';\r\n    }\r\n\r\n    const flagDescriptions = flags.map(f => f.description).join(', ');\r\n    \r\n    switch (action) {\r\n      case 'approve':\r\n        return `Contenido aprobado con advertencias menores: ${flagDescriptions}`;\r\n      case 'flag_for_review':\r\n        return `Contenido marcado para revisión humana: ${flagDescriptions}`;\r\n      case 'auto_reject':\r\n        return `Contenido rechazado automáticamente: ${flagDescriptions}`;\r\n      default:\r\n        return `Acción requerida (${action}): ${flagDescriptions}`;\r\n    }\r\n  }\r\n}\r\n\r\n// Instancia singleton del motor de moderación\r\nconst contentModerationEngine = new ContentModerationEngine();\r\n\r\n// Hook para usar moderación en componentes React\r\nexport const useContentModeration = () => {\r\n  const moderateContent = async (content: ContentToModerate) => {\r\n    return await contentModerationEngine.moderateContent(content);\r\n  };\r\n\r\n  const moderateText = async (text: string, type: ContentToModerate['type'], userId: string) => {\r\n    return await moderateContent({\r\n      type,\r\n      content: text,\r\n      userId\r\n    });\r\n  };\r\n\r\n  return { moderateContent, moderateText };\r\n};\r\n\r\nexport { \r\n  contentModerationEngine,\r\n  type ModerationResult,\r\n  type ModerationFlag,\r\n  type ContentToModerate,\r\n  type ModerationConfig,\r\n  type FlagType,\r\n  type ModerationAction\r\n};\r\n\r\nexport default ContentModerationEngine;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\ai\\smartMatching.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\analytics-metrics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\app-config.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'ADMIN_EMAILS' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":77,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":77,"endColumn":19},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'config' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":134,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":134,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { logger } from '@/lib/logger';\r\n// Configuración de la aplicación - Separación Demo vs Producción\r\nexport interface AppConfig {\r\n  mode: 'demo' | 'production';\r\n  supabase: {\r\n    url: string;\r\n    anonKey: string;\r\n  };\r\n  features: {\r\n    demoCredentials: boolean;\r\n    realAuth: boolean;\r\n    adminAccess: boolean;\r\n  };\r\n  ui: {\r\n    showDemoIndicator: boolean;\r\n    demoLabel: string;\r\n  };\r\n}\r\n\r\n// Cache para evitar múltiples llamadas y logs repetitivos\r\nlet cachedConfig: AppConfig | null = null;\r\n\r\n// Obtener configuración desde variables de entorno\r\nexport const getAppConfig = (): AppConfig => {\r\n  if (cachedConfig) {\r\n    return cachedConfig;\r\n  }\r\n  \r\n  const mode = (import.meta.env.VITE_APP_MODE || 'production') as 'demo' | 'production';\r\n  \r\n  // Usar modo configurado directamente\r\n  const realMode = mode;\r\n  \r\n  logger.info('🔧 Configuración de aplicación:', {\r\n    mode,\r\n    supabaseUrl: import.meta.env.VITE_SUPABASE_URL ? '✅ Configurada' : '❌ Faltante',\r\n    supabaseKey: import.meta.env.VITE_SUPABASE_ANON_KEY ? '✅ Configurada' : '❌ Faltante'\r\n  });\r\n  \r\n  cachedConfig = {\r\n    mode: realMode,\r\n    supabase: {\r\n      url: import.meta.env.VITE_SUPABASE_URL || 'https://demo.supabase.co',\r\n      anonKey: import.meta.env.VITE_SUPABASE_ANON_KEY || 'demo-anon-key-placeholder'\r\n    },\r\n    features: {\r\n      demoCredentials: true, // Siempre permitir credenciales demo\r\n      realAuth: realMode === 'production', // Solo auth real en producción\r\n      adminAccess: true // Permitir acceso admin en ambos modos\r\n    },\r\n    ui: {\r\n      showDemoIndicator: mode === 'demo',\r\n      demoLabel: mode === 'demo' ? '(Demo)' : ''\r\n    }\r\n  };\r\n  \r\n  return cachedConfig;\r\n};\r\n\r\n// Credenciales demo permitidas (INCLUIR djwacko28@gmail.com)\r\nexport const DEMO_CREDENTIALS = [\r\n  'single@outlook.es',\r\n  'pareja@outlook.es', \r\n  'admin',\r\n  'djwacko28@gmail.com'        // Admin DEMO - usa datos demo\r\n];\r\n\r\n// Contraseñas demo por email (INCLUIR djwacko28@gmail.com)\r\nexport const DEMO_PASSWORDS: Record<string, string> = {\r\n  'single@outlook.es': '123456',\r\n  'pareja@outlook.es': '123456',\r\n  'admin': '123456',\r\n  'djwacko28@gmail.com': 'Magy_Wacko_nala28' // Admin DEMO\r\n};\r\n\r\n// Lista de emails admin para verificación rápida - CORREGIDA\r\nconst ADMIN_EMAILS = [\r\n  'admin',                      // Admin demo solamente\r\n  'djwacko28@gmail.com',        // Admin DEMO (no producción)\r\n  'complicesconectasw@outlook.es'  // ÚNICO admin producción REAL\r\n];\r\n\r\n// Configuración de credenciales para modo producción\r\nexport const productionCredentials = {\r\n  email: 'complicesconectasw@outlook.es',\r\n  password: 'Magy_Wacko_nala28'\r\n};\r\n\r\n// Función para verificar si es credencial demo\r\nexport const isDemoCredential = (email: string): boolean => {\r\n  const normalizedEmail = email.toLowerCase().trim()\r\n    .replace('@otlook.es', '@outlook.es')\r\n    .replace('@outllok.es', '@outlook.es')\r\n    .replace('@outlok.es', '@outlook.es')\r\n    .replace('@outook.es', '@outlook.es');\r\n    \r\n  return DEMO_CREDENTIALS.includes(normalizedEmail);\r\n};\r\n\r\n// Función para verificar si es admin de producción\r\nexport const isProductionAdmin = (email: string): boolean => {\r\n  const normalizedEmail = email.toLowerCase().trim();\r\n  return normalizedEmail === 'complicesconectasw@outlook.es';\r\n};\r\n\r\n// Función para verificar si es admin demo (admin Y djwacko28@gmail.com)\r\nexport const isDemoAdmin = (email: string): boolean => {\r\n  const normalizedEmail = email.toLowerCase().trim();\r\n  return normalizedEmail === 'admin' || normalizedEmail === 'djwacko28@gmail.com';\r\n};\r\n\r\n// Función para obtener contraseña demo\r\nexport const getDemoPassword = (email: string): string | null => {\r\n  const normalizedEmail = email.toLowerCase().trim()\r\n    .replace('@otlook.es', '@outlook.es')\r\n    .replace('@outllok.es', '@outlook.es')\r\n    .replace('@outlok.es', '@outlook.es')\r\n    .replace('@outook.es', '@outlook.es');\r\n  \r\n  return DEMO_PASSWORDS[normalizedEmail] || null;\r\n};\r\n\r\n// Función para obtener contraseña de producción\r\nexport const getProductionPassword = (email: string): string | null => {\r\n  const normalizedEmail = email.toLowerCase().trim();\r\n  if (normalizedEmail === 'complicesconectasw@outlook.es') {\r\n    return 'Magy_Wacko_nala28';\r\n  }\r\n  return null;\r\n};\r\n\r\n// Función centralizada para manejar autenticación demo (SIN complicesconectasw@outlook.es)\r\nexport const handleDemoAuth = (email: string, accountType: string = 'single') => {\r\n  const config = getAppConfig();\r\n  \r\n  if (!isDemoCredential(email)) {\r\n    logger.info('❌ Email no es credencial demo:', { email });\r\n    return null;\r\n  }\r\n  \r\n  // Bloquear complicesconectasw@outlook.es en modo demo\r\n  if (email.toLowerCase().trim() === 'complicesconectasw@outlook.es') {\r\n    logger.info('🚫 complicesconectasw@outlook.es es SOLO para producción real');\r\n    return null;\r\n  }\r\n  \r\n  // Configurar accountType específico para admins\r\n  const finalAccountType = isDemoAdmin(email) ? 'admin' : accountType;\r\n  \r\n  const demoUser = {\r\n    id: `demo-${Date.now()}`,\r\n    email: email.toLowerCase().trim(),\r\n    role: isDemoAdmin(email) ? 'admin' : 'user',\r\n    accountType: finalAccountType,\r\n    first_name: email === 'admin' ? 'Admin Demo' : \r\n                email === 'single@outlook.es' ? 'Sofía' :\r\n                email === 'pareja@outlook.es' ? 'Carmen & Roberto' :\r\n                email === 'djwacko28@gmail.com' ? 'DJ Wacko' :\r\n                email.split('@')[0],\r\n    is_demo: true,\r\n    created_at: new Date().toISOString()\r\n  };\r\n  \r\n  const demoSession = {\r\n    user: demoUser,\r\n    access_token: `demo-token-${Date.now()}`,\r\n    expires_at: Date.now() + (24 * 60 * 60 * 1000) // 24 hours\r\n  };\r\n  \r\n  // Store authentication flag AND user data in localStorage for Navigation\r\n  localStorage.setItem('demo_authenticated', 'true');\r\n  localStorage.setItem('userType', demoUser.accountType || demoUser.role);\r\n  localStorage.setItem('demo_user', JSON.stringify(demoUser));\r\n  \r\n  logger.info('🎭 Demo user stored in localStorage:', { email, demoUser });\r\n  \r\n  logger.info('🎭 Sesión demo creada', { email, tipo: finalAccountType });\r\n  \r\n  return { user: demoUser, session: demoSession };\r\n};\r\n\r\n// Función para limpiar sesión demo\r\nexport const clearDemoAuth = () => {\r\n  localStorage.removeItem('demo_authenticated');\r\n  localStorage.removeItem('userType');\r\n  localStorage.removeItem('demo_user');\r\n  logger.info('🧹 Sesión demo limpiada');\r\n};\r\n\r\n// Función para verificar sesión demo existente\r\nexport const checkDemoSession = () => {\r\n  const demoAuth = localStorage.getItem('demo_authenticated');\r\n  \r\n  // Solo verificar flag de autenticación - datos no se almacenan en localStorage\r\n  if (demoAuth === 'true') {\r\n    // Retornar null para forzar recreación de sesión demo\r\n    // Los datos se mantienen solo en memoria durante la sesión activa\r\n    return null;\r\n  }\r\n  \r\n  return null;\r\n};\r\n\r\n// Función para verificar si estamos en modo demo\r\nexport const isDemoMode = () => {\r\n  const config = getAppConfig();\r\n  const demoAuth = localStorage.getItem('demo_authenticated');\r\n  return config.mode === 'demo' || demoAuth === 'true';\r\n};\r\n\r\n// Función para verificar si debemos usar Supabase real\r\nexport const shouldUseRealSupabase = () => {\r\n  const config = getAppConfig();\r\n  const demoAuth = localStorage.getItem('demo_authenticated');\r\n  \r\n  logger.info('🔍 shouldUseRealSupabase', { modo: config.mode, demoAuth });\r\n  \r\n  // En modo producción, SIEMPRE usar Supabase real\r\n  // No importa si hay datos demo en localStorage\r\n  if (config.mode === 'production') {\r\n    logger.info('🏢 Modo producción - usando Supabase real siempre');\r\n    return true;\r\n  }\r\n  \r\n  // En modo demo, solo usar Supabase para admins\r\n  if (demoAuth === 'true') {\r\n    const demoUser = localStorage.getItem('demo_user');\r\n    if (demoUser) {\r\n      try {\r\n        const user = JSON.parse(demoUser);\r\n        const useSupabase = user.role === 'admin';\r\n        logger.info('🎭 Usuario demo', { email: user.email, admin: user.role === 'admin', usarSupabase: useSupabase });\r\n        return useSupabase;\r\n      } catch (error) {\r\n        logger.error('❌ Error parsing demo user', { error: error instanceof Error ? error.message : String(error) });\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  \r\n  logger.info('✅ Usando Supabase real por defecto');\r\n  return true;\r\n};\r\n\r\n// Configuración global de la app\r\nexport const appConfig = getAppConfig();\r\n\r\n// Log de configuración inicial\r\nlogger.info('🚀 ComplicesConecta iniciado', { modo: appConfig.mode });\r\nif (appConfig.mode === 'demo') {\r\n  logger.info('🎭 Modo demo activo - credenciales de prueba habilitadas');\r\n  logger.info('📝 Credenciales demo:', DEMO_CREDENTIALS);\r\n} else {\r\n  logger.info('🔐 Modo producción activo - autenticación real requerida');\r\n  logger.info('🏢 Credenciales producción:', { email: 'complicesconectasw@outlook.es' });\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\backup-system.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'data' is defined but never used. Allowed unused args must match /^_/u.","line":372,"column":53,"nodeType":null,"messageId":"unusedVar","endLine":372,"endColumn":57},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'tableData' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":507,"column":30,"nodeType":null,"messageId":"unusedVar","endLine":507,"endColumn":39}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { logger } from '@/lib/logger';\r\nimport { supabase } from '@/integrations/supabase/client';\r\n\r\n/**\r\n * Sistema de Backup Automático para ComplicesConecta\r\n * Realiza respaldos incrementales de datos críticos\r\n */\r\n\r\ninterface BackupConfig {\r\n  enabled: boolean;\r\n  interval: number; // en milisegundos\r\n  retentionDays: number;\r\n  tables: string[];\r\n  destination: 'local' | 'cloud' | 'both';\r\n}\r\n\r\ninterface BackupMetadata {\r\n  id: string;\r\n  timestamp: number;\r\n  type: 'full' | 'incremental';\r\n  tables: string[];\r\n  size: number;\r\n  status: 'pending' | 'completed' | 'failed';\r\n  error?: string;\r\n}\r\n\r\ninterface BackupData {\r\n  metadata: BackupMetadata;\r\n  data: Record<string, any[]>;\r\n}\r\n\r\nclass BackupSystem {\r\n  private config: BackupConfig;\r\n  private backupHistory: BackupMetadata[] = [];\r\n  private isRunning = false;\r\n  private intervalId: NodeJS.Timeout | null = null;\r\n\r\n  constructor(config: BackupConfig) {\r\n    this.config = config;\r\n    this.initializeBackupSystem();\r\n    console.log('💾 Sistema de Backup inicializado - Respaldos automáticos activos');\r\n  }\r\n\r\n  private initializeBackupSystem() {\r\n    if (!this.config.enabled) {\r\n      logger.info('💾 Backup: Sistema deshabilitado', {});\r\n      return;\r\n    }\r\n\r\n    // Cargar historial de backups\r\n    this.loadBackupHistory();\r\n\r\n    // Iniciar backups automáticos\r\n    this.startAutomaticBackups();\r\n\r\n    // Limpiar backups antiguos cada 24 horas\r\n    setInterval(() => {\r\n      this.cleanupOldBackups();\r\n    }, 24 * 60 * 60 * 1000);\r\n\r\n    logger.info('💾 Backup: Sistema iniciado', {\r\n      interval: this.config.interval / 1000 / 60 + ' minutos',\r\n      retention: this.config.retentionDays + ' días',\r\n      tables: this.config.tables.length\r\n    });\r\n  }\r\n\r\n  // Iniciar backups automáticos\r\n  private startAutomaticBackups() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n\r\n    this.intervalId = setInterval(async () => {\r\n      if (!this.isRunning) {\r\n        await this.performIncrementalBackup();\r\n      }\r\n    }, this.config.interval);\r\n\r\n    console.log(`💾 Backup: Programado cada ${this.config.interval / 1000 / 60} minutos`);\r\n  }\r\n\r\n  // Realizar backup completo\r\n  async performFullBackup(): Promise<BackupMetadata> {\r\n    console.log('💾 Backup: Iniciando backup completo...');\r\n    \r\n    const metadata: BackupMetadata = {\r\n      id: this.generateBackupId(),\r\n      timestamp: Date.now(),\r\n      type: 'full',\r\n      tables: [...this.config.tables],\r\n      size: 0,\r\n      status: 'pending'\r\n    };\r\n\r\n    try {\r\n      this.isRunning = true;\r\n      const backupData: BackupData = {\r\n        metadata,\r\n        data: {}\r\n      };\r\n\r\n      // Respaldar cada tabla\r\n      for (const table of this.config.tables) {\r\n        console.log(`💾 Backup: Respaldando tabla ${table}...`);\r\n        \r\n        try {\r\n          const tableData = await this.backupTableFull(table);\r\n          backupData.data[table] = tableData;\r\n          \r\n          console.log(`💾 Backup: Tabla ${table} respaldada - ${tableData.length} registros`);\r\n        } catch (error) {\r\n          console.error(`💾 Backup: Error en tabla ${table}`, error);\r\n          // Continuar con otras tablas\r\n        }\r\n      }\r\n\r\n      // Calcular tamaño\r\n      metadata.size = this.calculateBackupSize(backupData);\r\n      metadata.status = 'completed';\r\n\r\n      // Guardar backup\r\n      await this.saveBackup(backupData);\r\n      \r\n      this.backupHistory.push(metadata);\r\n      await this.saveBackupHistory();\r\n\r\n      console.log('💾 Backup: Backup completo finalizado', {\r\n        id: metadata.id,\r\n        size: this.formatBytes(metadata.size),\r\n        tables: metadata.tables.length\r\n      });\r\n\r\n      return metadata;\r\n\r\n    } catch (error) {\r\n      metadata.status = 'failed';\r\n      metadata.error = error instanceof Error ? error.message : 'Error desconocido';\r\n      \r\n      console.error('💾 Backup: Error en backup completo', error);\r\n      \r\n      this.backupHistory.push(metadata);\r\n      await this.saveBackupHistory();\r\n      \r\n      return metadata;\r\n    } finally {\r\n      this.isRunning = false;\r\n    }\r\n  }\r\n\r\n  // Realizar backup incremental\r\n  async performIncrementalBackup(): Promise<BackupMetadata> {\r\n    console.log('💾 Backup: Iniciando backup incremental...');\r\n\r\n    const lastBackup = this.getLastSuccessfulBackup();\r\n    const sinceTimestamp = lastBackup ? lastBackup.timestamp : Date.now() - (24 * 60 * 60 * 1000);\r\n\r\n    const metadata: BackupMetadata = {\r\n      id: this.generateBackupId(),\r\n      timestamp: Date.now(),\r\n      type: 'incremental',\r\n      tables: [...this.config.tables],\r\n      size: 0,\r\n      status: 'pending'\r\n    };\r\n\r\n    try {\r\n      this.isRunning = true;\r\n      const backupData: BackupData = {\r\n        metadata,\r\n        data: {}\r\n      };\r\n\r\n      // Respaldar cambios incrementales\r\n      for (const table of this.config.tables) {\r\n        try {\r\n          const incrementalData = await this.backupTableIncremental(table, sinceTimestamp);\r\n          \r\n          if (incrementalData.length > 0) {\r\n            backupData.data[table] = incrementalData;\r\n            console.log(`💾 Backup: Tabla ${table} - ${incrementalData.length} cambios desde último backup`);\r\n          }\r\n        } catch (error) {\r\n          console.error(`💾 Backup: Error incremental en tabla ${table}`, error);\r\n        }\r\n      }\r\n\r\n      // Verificar si hay datos para respaldar\r\n      const hasData = Object.keys(backupData.data).length > 0;\r\n      \r\n      if (hasData) {\r\n        metadata.size = this.calculateBackupSize(backupData);\r\n        metadata.status = 'completed';\r\n        \r\n        await this.saveBackup(backupData);\r\n        \r\n        console.log('💾 Backup: Backup incremental completado', {\r\n          id: metadata.id,\r\n          size: this.formatBytes(metadata.size),\r\n          tablesWithChanges: Object.keys(backupData.data).length\r\n        });\r\n      } else {\r\n        metadata.status = 'completed';\r\n        metadata.size = 0;\r\n        console.log('💾 Backup: No hay cambios para respaldar');\r\n      }\r\n\r\n      this.backupHistory.push(metadata);\r\n      await this.saveBackupHistory();\r\n\r\n      return metadata;\r\n\r\n    } catch (error) {\r\n      metadata.status = 'failed';\r\n      metadata.error = error instanceof Error ? error.message : 'Error desconocido';\r\n      \r\n      console.error('💾 Backup: Error en backup incremental', error);\r\n      \r\n      this.backupHistory.push(metadata);\r\n      await this.saveBackupHistory();\r\n      \r\n      return metadata;\r\n    } finally {\r\n      this.isRunning = false;\r\n    }\r\n  }\r\n\r\n  // Respaldar tabla completa\r\n  private async backupTableFull(table: string): Promise<any[]> {\r\n    const isDemoMode = localStorage.getItem('demo_authenticated') === 'true';\r\n    \r\n    if (isDemoMode) {\r\n      // En modo demo, generar datos mock\r\n      return this.generateMockBackupData(table, 10);\r\n    }\r\n\r\n    try {\r\n      const validTables = ['profiles', 'messages', 'matches', 'user_tokens', 'invitations', 'posts', 'notifications'];\r\n      \r\n      if (!validTables.includes(table)) {\r\n        console.warn(`💾 Backup: Tabla ${table} no válida, usando datos mock`);\r\n        return this.generateMockBackupData(table);\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from(table as any)\r\n        .select('*')\r\n        .limit(1000);\r\n\r\n      if (error) {\r\n        throw new Error(`Error al respaldar tabla ${table}: ${error.message}`);\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      console.error(`💾 Backup: Error accediendo a tabla ${table}`, error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Respaldar cambios incrementales de tabla\r\n  private async backupTableIncremental(tableName: string, sinceTimestamp: number): Promise<any[]> {\r\n    const isDemoMode = localStorage.getItem('demo_authenticated') === 'true';\r\n    \r\n    if (isDemoMode) {\r\n      // En modo demo, simular cambios incrementales\r\n      const mockChanges = Math.floor(Math.random() * 5);\r\n      return mockChanges > 0 ? this.generateMockBackupData(tableName, mockChanges) : [];\r\n    }\r\n\r\n    try {\r\n      const validTables = [\r\n        'profiles', 'matches', 'messages', 'user_tokens', 'invitations', 'posts',\r\n        'audit_logs', 'chat_invitations', 'chat_rooms', 'chat_members', 'comment_likes',\r\n        'post_comments', 'couple_profiles', 'gallery_access_requests', 'gallery_permissions',\r\n        'image_permissions', 'images', 'match_interactions', 'moderation_logs',\r\n        'notification_history', 'pending_rewards', 'post_likes', 'post_shares',\r\n        'reports', 'system_metrics', 'token_analytics', 'tokens', 'transactions',\r\n        'user_2fa_settings', 'user_device_tokens', 'user_likes', 'user_notification_preferences',\r\n        'user_roles', 'user_staking', 'chat_messages', 'media_access_logs', 'notification_preferences', 'referral_rewards'\r\n      ] as const;\r\n\r\n      if (!validTables.includes(tableName as any)) {\r\n        console.warn(`💾 Backup: Tabla ${tableName} no válida para backup incremental, usando datos mock`);\r\n        return this.generateMockBackupData(tableName, 2);\r\n      }\r\n\r\n      const lastBackupTime = new Date(sinceTimestamp);\r\n      \r\n      const { data, error } = await supabase\r\n        .from(tableName as any)\r\n        .select('*')\r\n        .gte('created_at', lastBackupTime.toISOString())\r\n        .limit(1000);\r\n\r\n      if (error) {\r\n        throw new Error(`Error en backup incremental de ${tableName}: ${error.message}`);\r\n      }\r\n\r\n      return data || [];\r\n    } catch (error) {\r\n      console.error(`💾 Backup: Error en backup incremental de ${tableName}`, error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Generar datos mock para demo\r\n  private generateMockBackupData(tableName: string, count: number = 10): any[] {\r\n    const mockData = [];\r\n    \r\n    for (let i = 0; i < count; i++) {\r\n      const baseRecord = {\r\n        id: `mock_${tableName}_${i}_${Date.now()}`,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString()\r\n      };\r\n\r\n      switch (tableName) {\r\n        case 'profiles':\r\n          mockData.push({\r\n            ...baseRecord,\r\n            first_name: `Usuario${i}`,\r\n            email: `demo${i}@backup.test`,\r\n            is_demo: true\r\n          });\r\n          break;\r\n        case 'messages':\r\n          mockData.push({\r\n            ...baseRecord,\r\n            content: `Mensaje demo ${i}`,\r\n            sender_id: `user_${i}`,\r\n            receiver_id: `user_${i + 1}`\r\n          });\r\n          break;\r\n        default:\r\n          mockData.push({\r\n            ...baseRecord,\r\n            data: `Demo data for ${tableName} ${i}`\r\n          });\r\n      }\r\n    }\r\n\r\n    return mockData;\r\n  }\r\n\r\n  // Guardar backup\r\n  private async saveBackup(backupData: BackupData): Promise<void> {\r\n    const backupJson = JSON.stringify(backupData, null, 2);\r\n    \r\n    try {\r\n      if (this.config.destination === 'local' || this.config.destination === 'both') {\r\n        await this.saveBackupLocally(backupData.metadata.id, backupJson);\r\n      }\r\n\r\n      if (this.config.destination === 'cloud' || this.config.destination === 'both') {\r\n        await this.saveBackupToCloud(backupData.metadata.id, backupJson);\r\n      }\r\n    } catch (error) {\r\n      console.error('💾 Backup: Error al guardar backup', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Guardar backup localmente (simulado)\r\n  private async saveBackupLocally(backupId: string, data: string): Promise<void> {\r\n    // En un entorno real, esto guardaría en el sistema de archivos local\r\n    localStorage.setItem(`backup_${backupId}`, data);\r\n    console.log(`💾 Backup: Guardado localmente - backup_${backupId}`);\r\n  }\r\n\r\n  // Guardar backup en la nube (simulado)\r\n  private async saveBackupToCloud(backupId: string, data: string): Promise<void> {\r\n    // En un entorno real, esto subiría a AWS S3, Google Cloud Storage, etc.\r\n    console.log(`💾 Backup: Simulando subida a la nube - backup_${backupId}`);\r\n    \r\n    // Simular delay de subida\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n  }\r\n\r\n  // Calcular tamaño del backup\r\n  private calculateBackupSize(backupData: BackupData): number {\r\n    const jsonString = JSON.stringify(backupData);\r\n    return new Blob([jsonString]).size;\r\n  }\r\n\r\n  // Formatear bytes\r\n  private formatBytes(bytes: number): string {\r\n    if (bytes === 0) return '0 Bytes';\r\n    \r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    \r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  }\r\n\r\n  // Generar ID único para backup\r\n  private generateBackupId(): string {\r\n    const timestamp = Date.now();\r\n    const random = Math.random().toString(36).substr(2, 5);\r\n    return `backup_${timestamp}_${random}`;\r\n  }\r\n\r\n  // Obtener último backup exitoso\r\n  private getLastSuccessfulBackup(): BackupMetadata | null {\r\n    return this.backupHistory\r\n      .filter(backup => backup.status === 'completed')\r\n      .sort((a, b) => b.timestamp - a.timestamp)[0] || null;\r\n  }\r\n\r\n  // Limpiar backups antiguos\r\n  private async cleanupOldBackups(): Promise<void> {\r\n    console.log('💾 Backup: Iniciando limpieza de backups antiguos...');\r\n    \r\n    const cutoffTime = Date.now() - (this.config.retentionDays * 24 * 60 * 60 * 1000);\r\n    const oldBackups = this.backupHistory.filter(backup => backup.timestamp < cutoffTime);\r\n    \r\n    for (const backup of oldBackups) {\r\n      try {\r\n        await this.deleteBackup(backup.id);\r\n        console.log(`💾 Backup: Eliminado backup antiguo ${backup.id}`);\r\n      } catch (error) {\r\n        console.error(`💾 Backup: Error al eliminar backup ${backup.id}`, error);\r\n      }\r\n    }\r\n\r\n    // Actualizar historial\r\n    this.backupHistory = this.backupHistory.filter(backup => backup.timestamp >= cutoffTime);\r\n    await this.saveBackupHistory();\r\n\r\n    if (oldBackups.length > 0) {\r\n      console.log(`💾 Backup: Limpieza completada - ${oldBackups.length} backups eliminados`);\r\n    }\r\n  }\r\n\r\n  // Eliminar backup\r\n  private async deleteBackup(backupId: string): Promise<void> {\r\n    // Eliminar local\r\n    localStorage.removeItem(`backup_${backupId}`);\r\n    \r\n    // En producción, también eliminar de la nube\r\n    console.log(`💾 Backup: Backup ${backupId} eliminado`);\r\n  }\r\n\r\n  // Guardar historial de backups\r\n  private async saveBackupHistory(): Promise<void> {\r\n    try {\r\n      localStorage.setItem('backup_history', JSON.stringify(this.backupHistory));\r\n    } catch (error) {\r\n      console.error('💾 Backup: Error al guardar historial', error);\r\n    }\r\n  }\r\n\r\n  // Cargar historial de backups\r\n  private loadBackupHistory(): void {\r\n    try {\r\n      const saved = localStorage.getItem('backup_history');\r\n      if (saved) {\r\n        this.backupHistory = JSON.parse(saved);\r\n        console.log(`💾 Backup: Historial cargado - ${this.backupHistory.length} backups`);\r\n      }\r\n    } catch (error) {\r\n      console.error('💾 Backup: Error al cargar historial', error);\r\n      this.backupHistory = [];\r\n    }\r\n  }\r\n\r\n  // Obtener estadísticas\r\n  getBackupStats() {\r\n    const successful = this.backupHistory.filter(b => b.status === 'completed').length;\r\n    const failed = this.backupHistory.filter(b => b.status === 'failed').length;\r\n    const totalSize = this.backupHistory\r\n      .filter(b => b.status === 'completed')\r\n      .reduce((sum, b) => sum + b.size, 0);\r\n\r\n    return {\r\n      total: this.backupHistory.length,\r\n      successful,\r\n      failed,\r\n      totalSize: this.formatBytes(totalSize),\r\n      isRunning: this.isRunning,\r\n      lastBackup: this.getLastSuccessfulBackup(),\r\n      config: this.config\r\n    };\r\n  }\r\n\r\n  // Restaurar desde backup\r\n  async restoreFromBackup(backupId: string): Promise<boolean> {\r\n    console.log(`💾 Backup: Iniciando restauración desde ${backupId}...`);\r\n    \r\n    try {\r\n      const backupData = localStorage.getItem(`backup_${backupId}`);\r\n      if (!backupData) {\r\n        throw new Error(`Backup ${backupId} no encontrado`);\r\n      }\r\n\r\n      const backup: BackupData = JSON.parse(backupData);\r\n      \r\n      // En modo demo, solo simular restauración\r\n      const isDemoMode = localStorage.getItem('demo_authenticated') === 'true';\r\n      if (isDemoMode) {\r\n        console.log('💾 Backup: Restauración simulada en modo demo');\r\n        return true;\r\n      }\r\n\r\n      // En producción, restaurar datos reales\r\n      for (const [tableName, tableData] of Object.entries(backup.data)) {\r\n        console.log(`💾 Backup: Restaurando tabla ${tableName}...`);\r\n        // Aquí iría la lógica de restauración real\r\n      }\r\n\r\n      console.log(`💾 Backup: Restauración completada desde ${backupId}`);\r\n      return true;\r\n\r\n    } catch (error) {\r\n      console.error(`💾 Backup: Error en restauración desde ${backupId}`, error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Detener sistema de backup\r\n  stop(): void {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n      this.intervalId = null;\r\n    }\r\n    console.log('💾 Backup: Sistema detenido');\r\n  }\r\n}\r\n\r\n// Configuración por defecto\r\nconst defaultBackupConfig: BackupConfig = {\r\n  enabled: true,\r\n  interval: 30 * 60 * 1000, // 30 minutos\r\n  retentionDays: 30, // 30 días\r\n  tables: [\r\n    'profiles',\r\n    'messages', \r\n    'matches',\r\n    'user_tokens',\r\n    'invitations',\r\n    'posts',\r\n    'notifications'\r\n  ],\r\n  destination: 'both'\r\n};\r\n\r\n// Instancia singleton\r\nexport const backupSystem = new BackupSystem(defaultBackupConfig);\r\n\r\n// Funciones de utilidad\r\nexport const performManualBackup = async (type: 'full' | 'incremental' = 'incremental') => {\r\n  if (type === 'full') {\r\n    return await backupSystem.performFullBackup();\r\n  } else {\r\n    return await backupSystem.performIncrementalBackup();\r\n  }\r\n};\r\n\r\nexport const getBackupStats = () => {\r\n  return backupSystem.getBackupStats();\r\n};\r\n\r\nexport const restoreBackup = async (backupId: string) => {\r\n  return await backupSystem.restoreFromBackup(backupId);\r\n};\r\n\r\nlogger.info('💾 Sistema de Backup Automático inicializado', { config: defaultBackupConfig });\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\chat.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'getCurrentUserId' is defined but never used. Allowed unused vars must match /^_/u.","line":16,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":16,"endColumn":26},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'MessageInsert' is defined but never used. Allowed unused vars must match /^_/u.","line":22,"column":6,"nodeType":null,"messageId":"unusedVar","endLine":22,"endColumn":19},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'messageType' is assigned a value but never used. Allowed unused args must match /^_/u.","line":259,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":259,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * SERVICIO DE CHAT REAL-TIME - ComplicesConecta\r\n * \r\n * Sistema completo de chat con soporte para:\r\n * - Salas públicas y privadas\r\n * - Mensajes en tiempo real con Supabase Realtime\r\n * - Invitaciones y permisos de acceso\r\n * - Multimedia (texto, imágenes, archivos)\r\n */\r\n\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport type { Database } from '@/integrations/supabase/types';\r\nimport { logger } from '@/lib/logger';\r\n\r\n// Helper function to get current user ID\r\nfunction getCurrentUserId(): string | null {\r\n  // This should be replaced with actual auth context\r\n  return supabase.auth.getUser().then(({ data }) => data.user?.id || null).catch(() => null) as any;\r\n}\r\n\r\ntype MessageRow = Database['public']['Tables']['messages']['Row'];\r\ntype MessageInsert = Database['public']['Tables']['messages']['Insert'];\r\n\r\nexport interface ChatRoom {\r\n  id: string;\r\n  name: string;\r\n  type: 'public' | 'private';\r\n  created_by: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  description?: string;\r\n  is_active: boolean;\r\n}\r\n\r\nexport interface ChatMember {\r\n  id: string;\r\n  room_id: string;\r\n  profile_id: string;\r\n  joined_at: string;\r\n  role: 'admin' | 'member';\r\n  is_muted: boolean;\r\n}\r\n\r\nexport type ChatRoomInsert = any;\r\nexport type ChatMemberInsert = any;\r\n\r\nexport interface ChatMessage {\r\n  id: string;\r\n  room_id: string;\r\n  sender_id: string;\r\n  content: string;\r\n  message_type: 'text' | 'image' | 'file';\r\n  created_at: string;\r\n  is_deleted: boolean;\r\n  sender_profile?: {\r\n    id: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    avatar_url?: string;\r\n  };\r\n}\r\n\r\nexport interface ChatInvitation {\r\n  id: string;\r\n  room_id: string;\r\n  from_profile: string;\r\n  to_profile: string;\r\n  status: 'pending' | 'accepted' | 'declined';\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nexport type ChatInvitationInsert = any;\r\n\r\nclass ChatService {\r\n  private subscriptions: Map<string, any> = new Map();\r\n\r\n  /**\r\n   * Obtiene o crea la sala pública principal\r\n   */\r\n  async getPublicRoom(): Promise<{ success: boolean; room?: ChatRoom; error?: string }> {\r\n    try {\r\n      // Buscar sala pública existente\r\n      const { data: existingRoom, error: searchError } = await supabase\r\n        .from('chat_rooms')\r\n        .select('*')\r\n        .eq('is_public', true)\r\n        .eq('is_active', true)\r\n        .single();\r\n\r\n      if (existingRoom && !searchError) {\r\n        return {\r\n          success: true,\r\n          room: mapChatRoomRowToChatRoom(existingRoom)\r\n        };\r\n      }\r\n\r\n      // Crear sala pública si no existe\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const roomData: ChatRoomInsert = {\r\n        name: 'Chat Público',\r\n        description: 'Sala de chat pública para todos los usuarios',\r\n        is_public: true,\r\n        is_active: true,\r\n        created_by: user.user.id\r\n      };\r\n\r\n      const { data: newRoom, error: createError } = await supabase\r\n        .from('chat_rooms')\r\n        .insert(roomData)\r\n        .select()\r\n        .single();\r\n\r\n      if (createError || !newRoom) {\r\n        return { success: false, error: `Error al crear sala pública: ${createError?.message}` };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        room: mapChatRoomRowToChatRoom(newRoom)\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crea una sala privada con miembros específicos\r\n   */\r\n  async createPrivateRoom(\r\n    name: string,\r\n    memberIds: string[]\r\n  ): Promise<{ success: boolean; room?: ChatRoom; error?: string }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const userId = user.user.id;\r\n\r\n      // Crear sala privada\r\n      const roomData: ChatRoomInsert = {\r\n        name,\r\n        is_public: false,\r\n        is_active: true,\r\n        created_by: userId\r\n      };\r\n\r\n      const { data: newRoom, error: roomError } = await supabase\r\n        .from('chat_rooms')\r\n        .insert(roomData)\r\n        .select()\r\n        .single();\r\n\r\n      if (roomError || !newRoom) {\r\n        return { success: false, error: `Error al crear sala: ${roomError?.message}` };\r\n      }\r\n\r\n      // Agregar creador como admin\r\n      const creatorMember: ChatMemberInsert = {\r\n        room_id: (newRoom as any).id,\r\n        profile_id: userId,\r\n        role: 'admin',\r\n        is_muted: false\r\n      };\r\n\r\n      await supabase.from('chat_members').insert(creatorMember);\r\n\r\n      // Agregar otros miembros\r\n      const memberInserts: ChatMemberInsert[] = memberIds.map(memberId => ({\r\n        room_id: (newRoom as any).id,\r\n        profile_id: memberId,\r\n        role: 'member',\r\n        is_muted: false\r\n      }));\r\n\r\n      if (memberInserts.length > 0) {\r\n        await supabase.from('chat_members').insert(memberInserts as any);\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        room: mapChatRoomRowToChatRoom(newRoom)\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene las salas de chat del usuario actual\r\n   */\r\n  async getUserRooms(): Promise<{ success: boolean; rooms?: ChatRoom[]; error?: string }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const userId = user.user.id;\r\n\r\n      // Obtener salas públicas y privadas donde el usuario es miembro\r\n      const { data, error } = await (supabase as any)\r\n        .from('chat_rooms')\r\n        .select(`\r\n          *,\r\n          chat_members!inner(\r\n            user_id,\r\n            role,\r\n            joined_at\r\n          )\r\n        `)\r\n        .eq('chat_members.user_id', userId)\r\n        .eq('is_active', true);\r\n\r\n      if (error) {\r\n        return { success: false, error: `Error al obtener salas: ${error.message}` };\r\n      }\r\n\r\n      const rooms = (data as any)?.map((room: any) => ({\r\n        ...room,\r\n        id: (room as any).id,\r\n        lastMessage: null,\r\n        unreadCount: 0\r\n      })) || [];\r\n\r\n      return {\r\n        success: true,\r\n        rooms\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Envía un mensaje a una sala\r\n   */\r\n  async sendMessage(\r\n    roomId: string,\r\n    content: string,\r\n    messageType: 'text' | 'image' | 'file' = 'text'\r\n  ): Promise<{ success: boolean; message?: ChatMessage; error?: string }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const userId = user.user.id;\r\n\r\n      // Verificar acceso a la sala\r\n      const hasAccess = await this.canAccessRoom(roomId);\r\n      if (!hasAccess) {\r\n        return { success: false, error: 'Sin permisos para acceder a esta sala' };\r\n      }\r\n\r\n      const messageData = {\r\n        id: crypto.randomUUID(),\r\n        content,\r\n        senderId: userId,\r\n        timestamp: Date.now(),\r\n        type: 'text'\r\n      };\r\n\r\n      const { data: newMessage, error } = await (supabase as any)\r\n        .from('messages')\r\n        .insert(messageData)\r\n        .select()\r\n        .single();\r\n\r\n      if (error || !newMessage) {\r\n        return { success: false, error: `Error al enviar mensaje: ${error?.message}` };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        message: newMessage as any\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene mensajes de una sala\r\n   */\r\n  async getRoomMessages(\r\n    roomId: string,\r\n    limit: number = 50\r\n  ): Promise<{ success: boolean; messages?: ChatMessage[]; error?: string }> {\r\n    try {\r\n      // Verificar acceso a la sala\r\n      const hasAccess = await this.canAccessRoom(roomId);\r\n      if (!hasAccess) {\r\n        return { success: false, error: 'Sin permisos para acceder a esta sala' };\r\n      }\r\n\r\n      const { data: messages, error } = await supabase\r\n        .from('messages')\r\n        .select(`\r\n          *,\r\n          profiles:sender_id(id, first_name, last_name)\r\n        `)\r\n        .eq('room_id', roomId)\r\n        .eq('is_deleted', false)\r\n        .order('created_at', { ascending: false })\r\n        .limit(limit);\r\n\r\n      if (error) {\r\n        return { success: false, error: `Error al obtener mensajes: ${error.message}` };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        messages: messages.map(mapMessageRowToChatMessage).reverse()\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Suscribe a mensajes en tiempo real de una sala\r\n   */\r\n  subscribeToRoom(roomId: string, callback: (message: ChatMessage) => void): () => void {\r\n    const subscription = supabase\r\n      .channel(`room:${roomId}`)\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: 'INSERT',\r\n          schema: 'public',\r\n          table: 'messages',\r\n          filter: `room_id=eq.${roomId}`\r\n        },\r\n        async (payload) => {\r\n          const newMessage = payload.new as MessageRow;\r\n          const mappedMessage = mapMessageRowToChatMessage(newMessage);\r\n          \r\n          // Obtener información del perfil del remitente\r\n          const { data: profile } = await supabase\r\n            .from('profiles')\r\n            .select('id, first_name, last_name')\r\n            .eq('id', newMessage.sender_id || '')\r\n            .single();\r\n\r\n          if (profile) {\r\n            mappedMessage.sender_profile = {\r\n              id: (profile as any).id,\r\n              first_name: (profile as any).first_name,\r\n              last_name: (profile as any).last_name\r\n            };\r\n          }\r\n\r\n          callback(mappedMessage);\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    this.subscriptions.set(roomId, subscription);\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n      this.subscriptions.delete(roomId);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cancela suscripción a una sala\r\n   */\r\n  unsubscribeFromRoom(roomId: string): void {\r\n    const subscription = this.subscriptions.get(roomId);\r\n    if (subscription) {\r\n      subscription.unsubscribe();\r\n      this.subscriptions.delete(roomId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si el usuario puede acceder a una sala\r\n   */\r\n  async canAccessRoom(roomId: string): Promise<boolean> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) return false;\r\n\r\n      // Obtener información de la sala\r\n      const { data: room, error: roomError } = await supabase\r\n        .from('chat_rooms')\r\n        .select('is_public, created_by')\r\n        .eq('id', roomId)\r\n        .single();\r\n\r\n      if (roomError || !room) return false;\r\n\r\n      // Si es pública, todos tienen acceso\r\n      if ((room as any).is_public) return true;\r\n\r\n      // Si es el creador, tiene acceso\r\n      if ((room as any).created_by === user.user.id) return true;\r\n\r\n      // Verificar si es miembro\r\n      const { data: member, error: memberError } = await supabase\r\n        .from('chat_members')\r\n        .select('id')\r\n        .eq('room_id', roomId)\r\n        .eq('profile_id', user.user.id)\r\n        .single();\r\n\r\n      return !memberError && !!member;\r\n\r\n    } catch (error) {\r\n      logger.error('Error al verificar acceso a sala:', { error: String(error) });\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invita a un usuario a una sala privada\r\n   */\r\n  async inviteToRoom(\r\n    roomId: string,\r\n    toProfileId: string\r\n  ): Promise<{ success: boolean; error?: string }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const invitationData: ChatInvitationInsert = {\r\n        room_id: roomId,\r\n        from_profile: user.user.id,\r\n        to_profile: toProfileId,\r\n        status: 'pending'\r\n      };\r\n\r\n      const { error } = await supabase\r\n        .from('chat_invitations')\r\n        .insert(invitationData);\r\n\r\n      if (error) {\r\n        return { success: false, error: `Error al enviar invitación: ${error.message}` };\r\n      }\r\n\r\n      return { success: true };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Responde a una invitación de chat\r\n   */\r\n  async respondToInvitation(\r\n    invitationId: string,\r\n    accept: boolean\r\n  ): Promise<{ success: boolean; error?: string }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      // Actualizar estado de la invitación\r\n      const { data: invitation, error: updateError } = await (supabase as any)\r\n        .from('chat_invitations')\r\n        .update({ \r\n          status: accept ? 'accepted' : 'declined',\r\n          updated_at: new Date().toISOString()\r\n        })\r\n        .eq('id', invitationId)\r\n        .eq('to_profile', user.user.id)\r\n        .select()\r\n        .single();\r\n\r\n      if (updateError || !invitation) {\r\n        return { success: false, error: `Error al responder invitación: ${updateError?.message}` };\r\n      }\r\n\r\n      // Si acepta, agregar como miembro\r\n      if (accept) {\r\n        const memberData: ChatMemberInsert = {\r\n          room_id: (invitation as any).room_id,\r\n          profile_id: user.user.id,\r\n          role: 'member',\r\n          is_muted: false\r\n        };\r\n\r\n        const { error: memberError } = await supabase\r\n          .from('chat_members')\r\n          .insert(memberData);\r\n\r\n        if (memberError) {\r\n          return { success: false, error: `Error al agregar miembro: ${memberError.message}` };\r\n        }\r\n      }\r\n\r\n      return { success: true };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene invitaciones pendientes del usuario\r\n   */\r\n  async getPendingInvitations(): Promise<{\r\n    success: boolean;\r\n    invitations?: ChatInvitation[];\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const { data: invitations, error } = await supabase\r\n        .from('chat_invitations')\r\n        .select('*')\r\n        .eq('to_profile', user.user.id)\r\n        .eq('status', 'pending')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        return { success: false, error: `Error al obtener invitaciones: ${error.message}` };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        invitations: invitations.map(mapChatInvitationRowToChatInvitation)\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n// Funciones de mapeo\r\nfunction mapChatRoomRowToChatRoom(row: any): ChatRoom {\r\n  return {\r\n    id: row.id,\r\n    name: row.name,\r\n    type: row.is_public ? 'public' : 'private',\r\n    created_by: row.created_by,\r\n    created_at: row.created_at,\r\n    updated_at: row.updated_at,\r\n    description: row.description,\r\n    is_active: row.is_active\r\n  };\r\n}\r\n\r\nfunction mapMessageRowToChatMessage(row: MessageRow): ChatMessage {\r\n  return {\r\n    id: row.id,\r\n    room_id: (row as any).conversation_id || '',\r\n    sender_id: row.sender_id || '',\r\n    content: row.content,\r\n    message_type: 'text' as 'text' | 'image' | 'file',\r\n    created_at: row.created_at || '',\r\n    is_deleted: false\r\n  };\r\n}\r\n\r\nfunction mapChatInvitationRowToChatInvitation(row: any): ChatInvitation {\r\n  return {\r\n    id: row.id,\r\n    room_id: row.room_id || '',\r\n    from_profile: row.from_profile,\r\n    to_profile: row.to_profile,\r\n    status: (row.status as 'pending' | 'accepted' | 'declined') || 'pending',\r\n    created_at: row.created_at || '',\r\n    updated_at: row.updated_at || ''\r\n  };\r\n}\r\n\r\nexport const chatService = new ChatService();\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\coupleProfiles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\coupleProfilesCompatibility.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\data.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'includeOnlineStatus' is assigned a value but never used. Allowed unused args must match /^_/u.","line":134,"column":36,"nodeType":null,"messageId":"unusedVar","endLine":134,"endColumn":55},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'apellido' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":171,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":171,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Heart, Users, Shield, Calendar, MessageCircle, Search, UserPlus, Crown, BarChart3, Settings, Bell } from \"lucide-react\";\r\n\r\nexport const mainNavItems = [\r\n  { title: 'Descubrir', url: '/discover', icon: Search, badge: 'Nuevo' },\r\n  { title: 'Perfiles', url: '/profiles', icon: Users },\r\n  { title: 'Matches', url: '/matches', icon: Heart, badge: '3' },\r\n  { title: 'Chat', url: '/chat', icon: MessageCircle, badge: '5' },\r\n  { title: 'Solicitudes', url: '/requests', icon: UserPlus, badge: '2' },\r\n  { title: 'Eventos', url: '/events', icon: Calendar },\r\n];\r\n\r\nexport const premiumItems = [\r\n  { title: 'Premium', url: '/premium', icon: Crown },\r\n  { title: 'Analytics', url: '/analytics', icon: BarChart3 },\r\n];\r\n\r\nexport const settingsItems = [\r\n  { title: 'Configuración', url: '/settings', icon: Settings },\r\n  { title: 'Notificaciones', url: '/notifications', icon: Bell },\r\n  { title: 'Privacidad', url: '/privacy', icon: Shield },\r\n];\r\n\r\nexport const mockUser = {\r\n  name: 'María González',\r\n  avatar: 'https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=400',\r\n  subscription: 'Premium',\r\n  notifications: 8,\r\n};\r\n\r\n// Funciones compatibles con archivos del zip\r\nexport function getRandomSingleProfile() {\r\n  return generateMockSingle();\r\n}\r\n\r\nexport function getRandomCoupleProfile() {\r\n  return generateMockCouple();\r\n}\r\n\r\n// Generador de perfiles mock aleatorios\r\nexport const generateMockSingle = (includeOnlineStatus = true) => {\r\n  const nombresF = [\"Sofía\", \"Valentina\", \"Isabella\", \"Camila\", \"Lucía\", \"Daniela\", \"Gabriela\", \"Andrea\"];\r\n  const nombresM = [\"Raúl\", \"Miguel\", \"Alejandro\", \"Fernando\", \"Roberto\", \"Javier\", \"Antonio\", \"Pablo\"];\r\n  \r\n  const apellidos = [\"García\", \"Rodríguez\", \"López\", \"Martínez\", \"González\", \"Pérez\", \"Sánchez\", \"Ramírez\"];\r\n  const ubicaciones = [\"CDMX\", \"Guadalajara\", \"Monterrey\", \"Puebla\", \"Tijuana\", \"León\", \"Querétaro\", \"Cancún\", \"Playa del Carmen\", \"Mérida\"];\r\n  const profesiones = [\"Ingeniero/a\", \"Médico/a\", \"Abogado/a\", \"Diseñador/a\", \"Empresario/a\", \"Artista\", \"Profesor/a\"];\r\n  const intereses = [\r\n    // Categorías principales del lifestyle\r\n    \"Lifestyle Swinger\", \"Intercambio de Parejas\", \"Encuentros Casuales\", \"Fiestas Temáticas\", \r\n    \"Clubs Privados\", \"Eventos Lifestyle\", \"Intercambio Suave\", \"Intercambio Completo\", \"Terceras Personas\", \r\n    \r\n    // Niveles de experiencia\r\n    \"Parejas Experimentadas\", \"Principiantes Curiosos\", \"Mentalidad Abierta\", \"Sin Prejuicios\", \r\n    \r\n    // Valores importantes\r\n    \"Comunicación Abierta\", \"Respeto Mutuo\", \"Discreción Total\", \"Ambiente Relajado\", \r\n    \"Experiencias Nuevas\", \"Conexiones Auténticas\", \"Diversión Adulta\", \"Aventuras Compartidas\",\r\n    \r\n    // Lugares y eventos mexicanos\r\n    \"Clubs Swinger México\", \"Fiestas Privadas CDMX\", \"Encuentros Guadalajara\", \"Eventos Monterrey\",\r\n    \"Reuniones Íntimas\", \"Jacuzzi Privado\", \"Masajes Tántricos\", \"Juegos Sensuales\",\r\n    \"Lifestyle México\", \"Eventos Exclusivos\",\r\n    \r\n    // Cultura mexicana lifestyle\r\n    \"Encuentros Íntimos\", \"Experiencias Sensuales\", \"Espacios Privados\", \"Libertad Sexual\",\r\n    \"Ambiente Sensual\", \"Intercambio Íntimo\", \"Conexión Física\",\r\n    \r\n    // Actividades sensuales\r\n    \"Fotografía Erótica\", \"Baile Sensual\", \"Cenas Íntimas\", \"Cócteles Afrodisíacos\",\r\n    \"Spa de Parejas\", \"Bienestar Adulto\", \"Experiencias Tántricas\", \"Actividades en Pareja\",\r\n    \r\n    // Arte y entretenimiento adulto\r\n    \"Arte Erótico\", \"Literatura Erótica\", \"Entretenimiento Adulto\", \"Ambiente Seductor\"\r\n  ];\r\n  \r\n  // Determinar género aleatoriamente\r\n  const esMujer = Math.random() > 0.5;\r\n  const nombre = esMujer \r\n    ? nombresF[Math.floor(Math.random() * nombresF.length)]\r\n    : nombresM[Math.floor(Math.random() * nombresM.length)];\r\n  const apellido = apellidos[Math.floor(Math.random() * apellidos.length)];\r\n  \r\n  // Imágenes reales de Unsplash para perfiles demo\r\n  const realImages = esMujer ? [\r\n    'https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=400&h=500&fit=crop&crop=face',\r\n    'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=400&h=500&fit=crop&crop=face',\r\n    'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=400&h=500&fit=crop&crop=face',\r\n    'https://images.unsplash.com/photo-1517841905240-472988babdf9?w=400&h=500&fit=crop&crop=face',\r\n    'https://images.unsplash.com/photo-1529626455594-4ff0802cfb7e?w=400&h=500&fit=crop&crop=face'\r\n  ] : [\r\n    'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400&h=500&fit=crop&crop=face',\r\n    'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400&h=500&fit=crop&crop=face',\r\n    'https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?w=400&h=500&fit=crop&crop=face',\r\n    'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=400&h=500&fit=crop&crop=face',\r\n    'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=500&fit=crop&crop=face'\r\n  ];\r\n  \r\n  const profile = {\r\n    id: Math.random().toString(36).substr(2, 9),\r\n    name: `${nombre} ${apellido}`,\r\n    first_name: nombre,\r\n    last_name: apellido,\r\n    age: Math.floor(Math.random() * 20) + 25,\r\n    bio: `Soy ${nombre}, me encanta explorar nuevas experiencias y conocer gente interesante del lifestyle. Siempre busco aventuras y momentos únicos con mentalidad abierta.`,\r\n    gender: esMujer ? 'female' : 'male',\r\n    interested_in: 'both',\r\n    is_premium: Math.random() > 0.7,\r\n    is_verified: Math.random() > 0.3,\r\n    relationship_type: 'single' as const,\r\n    created_at: new Date().toISOString(),\r\n    updated_at: new Date().toISOString(),\r\n    user_id: Math.random().toString(36).substr(2, 9),\r\n    latitude: Math.random() * 0.1 + 19.4, // CDMX area\r\n    longitude: Math.random() * 0.1 - 99.1, // CDMX area\r\n    share_location: Math.random() > 0.5,\r\n    // Propiedades adicionales para compatibilidad con UI\r\n    location: ubicaciones[Math.floor(Math.random() * ubicaciones.length)],\r\n    profession: profesiones[Math.floor(Math.random() * profesiones.length)],\r\n    interests: intereses.slice(0, 3 + Math.floor(Math.random() * 3)),\r\n    avatar: realImages[Math.floor(Math.random() * realImages.length)],\r\n    verified: Math.random() > 0.3,\r\n    photos: [realImages[Math.floor(Math.random() * realImages.length)], realImages[Math.floor(Math.random() * realImages.length)]],\r\n    stats: {\r\n      matches: Math.floor(Math.random() * 50) + 10,\r\n      likes: Math.floor(Math.random() * 200) + 50,\r\n      views: Math.floor(Math.random() * 500) + 100\r\n    },\r\n    ...(includeOnlineStatus && { isOnline: Math.random() > 0.5 })\r\n  };\r\n  \r\n  return profile;\r\n};\r\n\r\nexport const generateMockCouple = (includeOnlineStatus = true) => {\r\n  const nombresM = [\"Julio\", \"Miguel\", \"Alejandro\", \"Fernando\", \"Roberto\", \"Javier\", \"Antonio\", \"Pablo\"];\r\n  const nombresF = [\"Anabella\", \"María\", \"Carmen\", \"Elena\", \"Sofía\", \"Laura\", \"Patricia\", \"Isabel\"];\r\n  const apellidos = [\"García\", \"Rodríguez\", \"López\", \"Martínez\", \"González\", \"Pérez\", \"Sánchez\", \"Ramírez\"];\r\n  const ubicaciones = [\"CDMX\", \"Guadalajara\", \"Monterrey\", \"Puebla\", \"Tijuana\", \"León\", \"Querétaro\", \"Cancún\", \"Playa del Carmen\", \"Mérida\"];\r\n  const profesiones = [\"Ingeniero/a\", \"Médico/a\", \"Abogado/a\", \"Diseñador/a\", \"Empresario/a\", \"Artista\", \"Profesor/a\"];\r\n  const intereses = [\r\n    // Categorías principales del lifestyle\r\n    \"Lifestyle Swinger\", \"Intercambio de Parejas\", \"Encuentros Casuales\", \"Fiestas Temáticas\", \r\n    \"Clubs Privados\", \"Eventos Lifestyle\", \"Intercambio Suave\", \"Intercambio Completo\", \"Terceras Personas\", \r\n    \r\n    // Niveles de experiencia\r\n    \"Parejas Experimentadas\", \"Principiantes Curiosos\", \"Mentalidad Abierta\", \"Sin Prejuicios\", \r\n    \r\n    // Valores importantes\r\n    \"Comunicación Abierta\", \"Respeto Mutuo\", \"Discreción Total\", \"Ambiente Relajado\", \r\n    \"Experiencias Nuevas\", \"Conexiones Auténticas\", \"Diversión Adulta\", \"Aventuras Compartidas\",\r\n    \r\n    // Lugares y eventos mexicanos\r\n    \"Clubs Swinger México\", \"Fiestas Privadas CDMX\", \"Encuentros Guadalajara\", \"Eventos Monterrey\",\r\n    \"Reuniones Íntimas\", \"Jacuzzi Privado\", \"Masajes Tántricos\", \"Juegos Sensuales\",\r\n    \"Lifestyle México\", \"Eventos Exclusivos\",\r\n    \r\n    // Cultura mexicana lifestyle\r\n    \"Encuentros Íntimos\", \"Experiencias Sensuales\", \"Espacios Privados\", \"Libertad Sexual\",\r\n    \"Ambiente Sensual\", \"Intercambio Íntimo\", \"Conexión Física\",\r\n    \r\n    // Actividades sensuales\r\n    \"Fotografía Erótica\", \"Baile Sensual\", \"Cenas Íntimas\", \"Cócteles Afrodisíacos\",\r\n    \"Spa de Parejas\", \"Bienestar Adulto\", \"Experiencias Tántricas\", \"Actividades en Pareja\",\r\n    \r\n    // Arte y entretenimiento adulto\r\n    \"Arte Erótico\", \"Literatura Erótica\", \"Entretenimiento Adulto\", \"Ambiente Seductor\"\r\n  ];\r\n  \r\n  const nombreM = nombresM[Math.floor(Math.random() * nombresM.length)];\r\n  const nombreF = nombresF[Math.floor(Math.random() * nombresF.length)];\r\n  const apellido = apellidos[Math.floor(Math.random() * apellidos.length)];\r\n  \r\n  // Imágenes reales de Unsplash para parejas demo\r\n  const coupleImages = [\r\n    'https://images.unsplash.com/photo-1516589178581-6cd7833ae3b2?w=400',\r\n    'https://images.unsplash.com/photo-1522529599102-193c0d76b5b6?w=400',\r\n    'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=400',\r\n    'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400'\r\n  ];\r\n  \r\n  const femaleImages = [\r\n    'https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=400',\r\n    'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=400',\r\n    'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=400'\r\n  ];\r\n  \r\n  const maleImages = [\r\n    'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400',\r\n    'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400',\r\n    'https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?w=400'\r\n  ];\r\n  \r\n  const age1 = Math.floor(Math.random() * 20) + 25;\r\n  const age2 = Math.floor(Math.random() * 20) + 25;\r\n  \r\n  return {\r\n    id: Math.floor(Math.random() * 10000),\r\n    coupleName: `${nombreF} & ${nombreM}`,\r\n    ages: [age1, age2],\r\n    ageRange: `${age1}-${age2}`,\r\n    location: ubicaciones[Math.floor(Math.random() * ubicaciones.length)],\r\n    bio: \"Pareja experimentada en el lifestyle swinger. Buscamos nuevas experiencias y conexiones auténticas con otras parejas y singles en México.\",\r\n    lookingFor: \"Conexiones auténticas y experiencias únicas\",\r\n    lifestyle: \"Aventurero y espontáneo\",\r\n    experienceLevel: \"Intermedio\",\r\n    interests: intereses.slice(0, 5 + Math.floor(Math.random() * 4)),\r\n    avatar: coupleImages[Math.floor(Math.random() * coupleImages.length)],\r\n    photos: [\r\n      coupleImages[Math.floor(Math.random() * coupleImages.length)],\r\n      coupleImages[Math.floor(Math.random() * coupleImages.length)]\r\n    ],\r\n    isOnline: Math.random() > 0.5,\r\n    isVerified: Math.random() > 0.3,\r\n    isPremium: Math.random() > 0.7,\r\n    partner1: {\r\n      name: nombreF,\r\n      age: Math.floor(Math.random() * 20) + 25, // 25-44\r\n      profession: profesiones[Math.floor(Math.random() * profesiones.length)],\r\n      bio: `Me encanta explorar nuevas experiencias junto a mi pareja. Soy ${profesiones[Math.floor(Math.random() * profesiones.length)].toLowerCase()} y disfruto de la vida al máximo.`,\r\n      avatar: femaleImages[Math.floor(Math.random() * femaleImages.length)],\r\n      interests: intereses.slice(0, 3 + Math.floor(Math.random() * 3)), // 3-5 intereses\r\n    },\r\n    partner2: {\r\n      name: nombreM,\r\n      age: Math.floor(Math.random() * 20) + 25, // 25-44\r\n      profession: profesiones[Math.floor(Math.random() * profesiones.length)],\r\n      bio: `Aventurero y respetuoso, busco junto a mi pareja vivir experiencias únicas. Trabajo como ${profesiones[Math.floor(Math.random() * profesiones.length)].toLowerCase()}.`,\r\n      avatar: maleImages[Math.floor(Math.random() * maleImages.length)],\r\n      interests: intereses.slice(5, 8 + Math.floor(Math.random() * 3)), // 3-5 intereses diferentes\r\n    },\r\n    stats: {\r\n      likes: Math.floor(Math.random() * 800) + 100,\r\n      matches: Math.floor(Math.random() * 80) + 10,\r\n      visits: Math.floor(Math.random() * 300) + 50\r\n    }\r\n  };\r\n};\r\n\r\n// ===== NUEVAS FUNCIONALIDADES SOCIALES =====\r\n\r\n// NOTA: ConnectionRequest eliminado - usar tipos de Supabase desde @/integrations/supabase/types\r\n// Los tipos correctos están en Database['public']['Tables']['invitations']['Row']\r\n// con relaciones a Database['public']['Tables']['profiles']['Row']\r\n\r\n// Configuración de privacidad de perfil\r\nexport interface ProfilePrivacySettings {\r\n  userId: number;\r\n  profileVisibility: 'public' | 'connections_only' | 'hidden';\r\n  allowMessages: 'everyone' | 'connections_only' | 'none';\r\n  showOnlineStatus: boolean;\r\n  showLastSeen: boolean;\r\n  allowProfileViews: 'everyone' | 'connections_only';\r\n}\r\n\r\n// Galería de imágenes\r\nexport interface GalleryImage {\r\n  id: number;\r\n  userId: string;\r\n  url: string;\r\n  caption?: string;\r\n  isPublic: boolean;\r\n  createdAt: string;\r\n  likes: number;\r\n  comments: number;\r\n}\r\n\r\n// Eventos VIP (función premium)\r\nexport interface VIPEvent {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  date: string;\r\n  location: string;\r\n  price: number;\r\n  maxAttendees: number;\r\n  currentAttendees: number;\r\n  isVIPOnly: boolean;\r\n  organizer: {\r\n    name: string;\r\n    avatar: string;\r\n  };\r\n  images: string[];\r\n}\r\n\r\n// Regalos virtuales (función premium)\r\nexport interface VirtualGift {\r\n  id: number;\r\n  name: string;\r\n  icon: string;\r\n  price: number;\r\n  description: string;\r\n  category: 'romantic' | 'fun' | 'luxury' | 'special';\r\n}\r\n\r\n// Historias efímeras (función premium)\r\nexport interface Story {\r\n  id: number;\r\n  userId: number;\r\n  user: {\r\n    name: string;\r\n    avatar: string;\r\n  };\r\n  content: {\r\n    type: 'image' | 'video' | 'text';\r\n    url?: string;\r\n    text?: string;\r\n  };\r\n  createdAt: string;\r\n  expiresAt: string;\r\n  views: number;\r\n  isViewed: boolean;\r\n}\r\n\r\n// NOTA: Mock data eliminado - usar datos reales de Supabase\r\n// Las solicitudes se obtienen desde la tabla 'invitations' con relaciones a 'profiles'\r\n\r\n// Mock data para configuración de privacidad\r\nexport const mockPrivacySettings: ProfilePrivacySettings = {\r\n  userId: 1,\r\n  profileVisibility: 'public',\r\n  allowMessages: 'everyone',\r\n  showOnlineStatus: true,\r\n  showLastSeen: true,\r\n  allowProfileViews: 'everyone'\r\n};\r\n\r\n// Mock data para galería\r\nexport const mockGalleryImages: GalleryImage[] = [\r\n  {\r\n    id: 1,\r\n    userId: \"1\",\r\n    url: \"https://randomuser.me/api/portraits/women/30.jpg\",\r\n    caption: \"Disfrutando el atardecer en la playa\",\r\n    isPublic: true,\r\n    createdAt: \"2024-01-10T18:30:00Z\",\r\n    likes: 24,\r\n    comments: 5\r\n  },\r\n  {\r\n    id: 2,\r\n    userId: \"1\",\r\n    url: \"https://randomuser.me/api/portraits/women/31.jpg\",\r\n    caption: \"Noche de fiesta con amigos\",\r\n    isPublic: false,\r\n    createdAt: \"2024-01-08T22:15:00Z\",\r\n    likes: 18,\r\n    comments: 3\r\n  }\r\n];\r\n\r\n// Mock data para eventos VIP\r\nexport const mockVIPEvents: VIPEvent[] = [\r\n  {\r\n    id: 1,\r\n    title: \"Fiesta VIP Lifestyle CDMX\",\r\n    description: \"Evento exclusivo para parejas y singles del lifestyle. Ambiente elegante, música en vivo y experiencias únicas.\",\r\n    date: \"2024-02-14T20:00:00Z\",\r\n    location: \"Hotel Boutique Polanco, CDMX\",\r\n    price: 2500,\r\n    maxAttendees: 50,\r\n    currentAttendees: 32,\r\n    isVIPOnly: true,\r\n    organizer: {\r\n      name: \"ComplicesConecta Events\",\r\n      avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\"\r\n    },\r\n    images: [\r\n      \"https://images.unsplash.com/photo-1566737236500-c8ac43014a8e?w=400&h=300&fit=crop\",\r\n      \"https://images.unsplash.com/photo-1514525253161-7a46d19cd819?w=400&h=300&fit=crop\"\r\n    ]\r\n  }\r\n];\r\n\r\n// Mock data para regalos virtuales\r\nexport const mockVirtualGifts: VirtualGift[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Rosa Roja\",\r\n    icon: \"🌹\",\r\n    price: 50,\r\n    description: \"Un gesto romántico clásico\",\r\n    category: 'romantic'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Champagne\",\r\n    icon: \"🍾\",\r\n    price: 200,\r\n    description: \"Para celebrar momentos especiales\",\r\n    category: 'luxury'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Corazón de Fuego\",\r\n    icon: \"💖\",\r\n    price: 100,\r\n    description: \"Muestra tu pasión\",\r\n    category: 'romantic'\r\n  }\r\n];\r\n\r\n// Mock data para historias\r\nexport const mockStories: Story[] = [\r\n  {\r\n    id: 1,\r\n    userId: 101,\r\n    user: {\r\n      name: \"Sofía García\",\r\n      avatar: \"https://randomuser.me/api/portraits/women/25.jpg\"\r\n    },\r\n    content: {\r\n      type: 'image',\r\n      url: \"https://images.unsplash.com/photo-1566737236500-c8ac43014a8e?w=400\"\r\n    },\r\n    createdAt: \"2024-01-15T14:30:00Z\",\r\n    expiresAt: \"2024-01-16T14:30:00Z\",\r\n    views: 12,\r\n    isViewed: false\r\n  }\r\n];\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\distance-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\features.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'feature' is defined but never used. Allowed unused args must match /^_/u.","line":159,"column":43,"nodeType":null,"messageId":"unusedVar","endLine":159,"endColumn":50}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { logger } from '@/lib/logger';\r\n/**\r\n * Sistema de control de funciones por fase\r\n * Gestiona qué funcionalidades están disponibles según la fase actual\r\n */\r\n\r\nexport type AppPhase = 'beta' | 'premium' | 'vip';\r\n\r\nexport interface FeatureFlags {\r\n  // Funciones básicas (siempre disponibles)\r\n  chat: boolean;\r\n  profiles: boolean;\r\n  discover: boolean;\r\n  matches: boolean;\r\n  requests: boolean;\r\n  \r\n  // Sistema de tokens (beta)\r\n  tokens: boolean;\r\n  referrals: boolean;\r\n  \r\n  // Funciones premium (deshabilitadas en beta)\r\n  premiumChat: boolean;\r\n  vipEvents: boolean;\r\n  prioritySupport: boolean;\r\n  advancedFilters: boolean;\r\n  unlimitedLikes: boolean;\r\n  readReceipts: boolean;\r\n  \r\n  // Funciones VIP (futuro)\r\n  exclusiveEvents: boolean;\r\n  personalConcierge: boolean;\r\n  customBadges: boolean;\r\n}\r\n\r\n// Configuración por fase\r\nconst PHASE_FEATURES: Record<AppPhase, FeatureFlags> = {\r\n  beta: {\r\n    // Básicas\r\n    chat: true,\r\n    profiles: true,\r\n    discover: true,\r\n    matches: true,\r\n    requests: true,\r\n    \r\n    // Tokens\r\n    tokens: true,\r\n    referrals: true,\r\n    \r\n    // Premium (HABILITADAS EN BETA - Solo con tokens, sin Stripe)\r\n    premiumChat: true,\r\n    vipEvents: true,\r\n    prioritySupport: true,\r\n    advancedFilters: true,\r\n    unlimitedLikes: true,\r\n    readReceipts: true,\r\n    \r\n    // VIP (DESHABILITADAS)\r\n    exclusiveEvents: false,\r\n    personalConcierge: false,\r\n    customBadges: false,\r\n  },\r\n  \r\n  premium: {\r\n    // Básicas\r\n    chat: true,\r\n    profiles: true,\r\n    discover: true,\r\n    matches: true,\r\n    requests: true,\r\n    \r\n    // Tokens\r\n    tokens: true,\r\n    referrals: true,\r\n    \r\n    // Premium (HABILITADAS)\r\n    premiumChat: true,\r\n    vipEvents: true,\r\n    prioritySupport: true,\r\n    advancedFilters: true,\r\n    unlimitedLikes: true,\r\n    readReceipts: true,\r\n    \r\n    // VIP (DESHABILITADAS)\r\n    exclusiveEvents: false,\r\n    personalConcierge: false,\r\n    customBadges: false,\r\n  },\r\n  \r\n  vip: {\r\n    // Todas habilitadas\r\n    chat: true,\r\n    profiles: true,\r\n    discover: true,\r\n    matches: true,\r\n    requests: true,\r\n    tokens: true,\r\n    referrals: true,\r\n    premiumChat: true,\r\n    vipEvents: true,\r\n    prioritySupport: true,\r\n    advancedFilters: true,\r\n    unlimitedLikes: true,\r\n    readReceipts: true,\r\n    exclusiveEvents: true,\r\n    personalConcierge: true,\r\n    customBadges: true,\r\n  }\r\n};\r\n\r\n/**\r\n * Obtiene la fase actual de la aplicación\r\n */\r\nexport function getCurrentPhase(): AppPhase {\r\n  const phase = import.meta.env.VITE_APP_PHASE as AppPhase;\r\n  return phase || 'beta';\r\n}\r\n\r\n/**\r\n * Obtiene las funciones disponibles para la fase actual\r\n */\r\nexport function getFeatureFlags(): FeatureFlags {\r\n  const currentPhase = getCurrentPhase();\r\n  return PHASE_FEATURES[currentPhase];\r\n}\r\n\r\n/**\r\n * Verifica si una función específica está habilitada\r\n */\r\nexport function isFeatureEnabled(feature: keyof FeatureFlags): boolean {\r\n  const features = getFeatureFlags();\r\n  return features[feature];\r\n}\r\n\r\n/**\r\n * Hook personalizado para usar funciones\r\n */\r\nexport function useFeatures() {\r\n  const features = getFeatureFlags();\r\n  const currentPhase = getCurrentPhase();\r\n  \r\n  return {\r\n    features,\r\n    currentPhase,\r\n    isFeatureEnabled,\r\n    premiumFeatures: {\r\n      enabled: true, // Always enabled during beta\r\n      stripeEnabled: false, // Disabled during beta\r\n      tokenPurchaseEnabled: true // Token-based purchases enabled\r\n    },\r\n    isBeta: currentPhase === 'beta',\r\n    isPremium: currentPhase === 'premium',\r\n    isVip: currentPhase === 'vip',\r\n  };\r\n}\r\n\r\n/**\r\n * Obtiene mensaje explicativo para funciones deshabilitadas\r\n */\r\nexport function getFeatureDisabledMessage(feature: keyof FeatureFlags): string {\r\n  const currentPhase = getCurrentPhase();\r\n  \r\n  const messages: Record<AppPhase, string> = {\r\n    beta: 'Esta función estará disponible después de la fase beta. ¡Mantente atento!',\r\n    premium: 'Esta función requiere membresía VIP. Actualiza tu cuenta para acceder.',\r\n    vip: 'Función no disponible en este momento.',\r\n  };\r\n  \r\n  return messages[currentPhase];\r\n}\r\n\r\n/**\r\n * Lista de funciones premium para mostrar en UI\r\n */\r\nexport const PREMIUM_FEATURES_LIST = [\r\n  {\r\n    name: 'Chat Premium',\r\n    description: 'Mensajes ilimitados y funciones avanzadas',\r\n    icon: '💬',\r\n    key: 'premiumChat' as keyof FeatureFlags\r\n  },\r\n  {\r\n    name: 'Eventos VIP',\r\n    description: 'Acceso exclusivo a eventos premium',\r\n    icon: '🎉',\r\n    key: 'vipEvents' as keyof FeatureFlags\r\n  },\r\n  {\r\n    name: 'Soporte Prioritario',\r\n    description: 'Atención al cliente 24/7 prioritaria',\r\n    icon: '🚀',\r\n    key: 'prioritySupport' as keyof FeatureFlags\r\n  },\r\n  {\r\n    name: 'Filtros Avanzados',\r\n    description: 'Búsquedas más precisas y detalladas',\r\n    icon: '🔍',\r\n    key: 'advancedFilters' as keyof FeatureFlags\r\n  },\r\n  {\r\n    name: 'Likes Ilimitados',\r\n    description: 'Sin límites en tus conexiones diarias',\r\n    icon: '❤️',\r\n    key: 'unlimitedLikes' as keyof FeatureFlags\r\n  },\r\n  {\r\n    name: 'Confirmación de Lectura',\r\n    description: 'Sabe cuándo leen tus mensajes',\r\n    icon: '✓',\r\n    key: 'readReceipts' as keyof FeatureFlags\r\n  }\r\n];\r\n\r\nlogger.info(`🎯 Features initialized for phase: ${getCurrentPhase()}`);\r\nlogger.info(`🪙 Tokens enabled: ${isFeatureEnabled('tokens')}`);\r\nlogger.info(`👑 Premium features: ${isFeatureEnabled('premiumChat') ? 'enabled' : 'disabled'}`);\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\images.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\infoCards.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\intelligentAutomation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\invitations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\lifestyle-interests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\matching.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\media.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\ml-matching.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\multimediaSecurity.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":198,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":198,"endColumn":23},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'bytes' is defined but never used. Allowed unused args must match /^_/u.","line":265,"column":39,"nodeType":null,"messageId":"unusedVar","endLine":265,"endColumn":44}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { logger } from '@/lib/logger';\r\n\r\nexport interface MediaSecurityConfig {\r\n  maxFileSize: number; // in bytes\r\n  allowedTypes: string[];\r\n  scanForMalware: boolean;\r\n  watermarkImages: boolean;\r\n  encryptStorage: boolean;\r\n  autoModeration: boolean;\r\n}\r\n\r\nexport interface BiometricConfig {\r\n  enabled: boolean;\r\n  methods: ('fingerprint' | 'face' | 'voice')[];\r\n  fallbackToPassword: boolean;\r\n  sessionTimeout: number; // in minutes\r\n  requireForSensitiveActions: boolean;\r\n}\r\n\r\nexport interface MediaValidationResult {\r\n  isValid: boolean;\r\n  errors: string[];\r\n  warnings: string[];\r\n  metadata: {\r\n    fileSize: number;\r\n    mimeType: string;\r\n    dimensions?: { width: number; height: number };\r\n    duration?: number;\r\n    hasExif: boolean;\r\n    isEncrypted: boolean;\r\n  };\r\n}\r\n\r\nexport interface BiometricAuthResult {\r\n  success: boolean;\r\n  method: string;\r\n  confidence: number;\r\n  sessionId: string;\r\n  expiresAt: string;\r\n  error?: string;\r\n}\r\n\r\nexport class MultimediaSecurityService {\r\n  private static readonly DEFAULT_CONFIG: MediaSecurityConfig = {\r\n    maxFileSize: 10 * 1024 * 1024, // 10MB\r\n    allowedTypes: [\r\n      'image/jpeg',\r\n      'image/png',\r\n      'image/webp',\r\n      'video/mp4',\r\n      'video/webm',\r\n      'audio/mp3',\r\n      'audio/wav',\r\n      'audio/ogg'\r\n    ],\r\n    scanForMalware: true,\r\n    watermarkImages: true,\r\n    encryptStorage: true,\r\n    autoModeration: true\r\n  };\r\n\r\n  private static readonly BIOMETRIC_CONFIG: BiometricConfig = {\r\n    enabled: true,\r\n    methods: ['fingerprint', 'face'],\r\n    fallbackToPassword: true,\r\n    sessionTimeout: 30,\r\n    requireForSensitiveActions: true\r\n  };\r\n\r\n  /**\r\n   * Validate and secure multimedia file\r\n   */\r\n  static async validateAndSecureMedia(\r\n    file: File,\r\n    userId: string,\r\n    config: Partial<MediaSecurityConfig> = {}\r\n  ): Promise<MediaValidationResult> {\r\n    const finalConfig = { ...this.DEFAULT_CONFIG, ...config };\r\n    const result: MediaValidationResult = {\r\n      isValid: true,\r\n      errors: [],\r\n      warnings: [],\r\n      metadata: {\r\n        fileSize: file.size,\r\n        mimeType: file.type,\r\n        hasExif: false,\r\n        isEncrypted: false\r\n      }\r\n    };\r\n\r\n    try {\r\n      // 1. File size validation\r\n      if (file.size > finalConfig.maxFileSize) {\r\n        result.errors.push(`Archivo demasiado grande. Máximo permitido: ${this.formatFileSize(finalConfig.maxFileSize)}`);\r\n        result.isValid = false;\r\n      }\r\n\r\n      // 2. File type validation\r\n      if (!finalConfig.allowedTypes.includes(file.type)) {\r\n        result.errors.push(`Tipo de archivo no permitido: ${file.type}`);\r\n        result.isValid = false;\r\n      }\r\n\r\n      // 3. Content validation\r\n      const contentValidation = await this.validateFileContent(file);\r\n      if (!contentValidation.isValid) {\r\n        result.errors.push(...contentValidation.errors);\r\n        result.isValid = false;\r\n      }\r\n\r\n      // 4. Malware scanning\r\n      if (finalConfig.scanForMalware) {\r\n        const malwareResult = await this.scanForMalware(file);\r\n        if (!malwareResult.clean) {\r\n          result.errors.push('Archivo contiene contenido malicioso');\r\n          result.isValid = false;\r\n        }\r\n      }\r\n\r\n      // 5. Extract metadata\r\n      result.metadata = await this.extractMediaMetadata(file);\r\n\r\n      // 6. EXIF data removal for images\r\n      if (file.type.startsWith('image/')) {\r\n        const cleanedFile = await this.removeExifData(file);\r\n        result.metadata.hasExif = cleanedFile.hadExif;\r\n      }\r\n\r\n      // 7. Content moderation\r\n      if (finalConfig.autoModeration && result.isValid) {\r\n        const moderationResult = await this.moderateContent(file);\r\n        if (!moderationResult.approved) {\r\n          result.errors.push('Contenido no apropiado detectado');\r\n          result.isValid = false;\r\n        }\r\n        if (moderationResult.warnings.length > 0) {\r\n          result.warnings.push(...moderationResult.warnings);\r\n        }\r\n      }\r\n\r\n      // 8. Encryption preparation\r\n      if (finalConfig.encryptStorage && result.isValid) {\r\n        result.metadata.isEncrypted = true;\r\n      }\r\n\r\n      // Log security validation\r\n      logger.info('Media security validation completed', {\r\n        userId,\r\n        fileName: file.name,\r\n        fileSize: file.size,\r\n        mimeType: file.type,\r\n        isValid: result.isValid,\r\n        errorsCount: result.errors.length\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      logger.error('Error validating file content:', { error: error instanceof Error ? error.message : String(error) });\r\n      result.errors.push('Error interno de validación');\r\n      result.isValid = false;\r\n      return result;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate file content integrity\r\n   */\r\n  private static async validateFileContent(file: File): Promise<{ isValid: boolean; errors: string[] }> {\r\n    return new Promise((resolve) => {\r\n      const reader = new FileReader();\r\n      \r\n      reader.onload = () => {\r\n        try {\r\n          const arrayBuffer = reader.result as ArrayBuffer;\r\n          const uint8Array = new Uint8Array(arrayBuffer);\r\n          \r\n          // Check file signatures (magic numbers)\r\n          const isValidSignature = this.validateFileSignature(uint8Array, file.type);\r\n          \r\n          if (!isValidSignature) {\r\n            resolve({\r\n              isValid: false,\r\n              errors: ['Firma de archivo inválida - posible archivo corrupto o malicioso']\r\n            });\r\n            return;\r\n          }\r\n\r\n          // Additional content checks\r\n          if (file.type.startsWith('image/')) {\r\n            const imageValidation = this.validateImageContent(uint8Array);\r\n            resolve(imageValidation);\r\n          } else if (file.type.startsWith('video/')) {\r\n            const videoValidation = this.validateVideoContent(uint8Array);\r\n            resolve(videoValidation);\r\n          } else {\r\n            resolve({ isValid: true, errors: [] });\r\n          }\r\n        } catch (error) {\r\n          resolve({\r\n            isValid: false,\r\n            errors: ['Error al validar contenido del archivo']\r\n          });\r\n        }\r\n      };\r\n\r\n      reader.onerror = () => {\r\n        resolve({\r\n          isValid: false,\r\n          errors: ['Error al leer el archivo']\r\n        });\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file.slice(0, 1024)); // Read first 1KB for signature check\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validate file signature (magic numbers)\r\n   */\r\n  private static validateFileSignature(bytes: Uint8Array, mimeType: string): boolean {\r\n    const signatures: Record<string, number[][]> = {\r\n      'image/jpeg': [[0xFF, 0xD8, 0xFF]],\r\n      'image/png': [[0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A]],\r\n      'image/webp': [[0x52, 0x49, 0x46, 0x46]], // RIFF\r\n      'video/mp4': [[0x00, 0x00, 0x00, 0x18, 0x66, 0x74, 0x79, 0x70], [0x00, 0x00, 0x00, 0x20, 0x66, 0x74, 0x79, 0x70]],\r\n      'audio/mp3': [[0xFF, 0xFB], [0xFF, 0xF3], [0xFF, 0xF2]],\r\n      'audio/wav': [[0x52, 0x49, 0x46, 0x46]] // RIFF\r\n    };\r\n\r\n    const expectedSignatures = signatures[mimeType];\r\n    if (!expectedSignatures) return true; // Unknown type, allow\r\n\r\n    return expectedSignatures.some(signature => \r\n      signature.every((byte, index) => bytes[index] === byte)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Validate image content\r\n   */\r\n  private static validateImageContent(bytes: Uint8Array): { isValid: boolean; errors: string[] } {\r\n    // Check for suspicious patterns or embedded executables\r\n    const suspiciousPatterns = [\r\n      [0x4D, 0x5A], // MZ header (executable)\r\n      [0x50, 0x4B], // PK header (zip/executable)\r\n    ];\r\n\r\n    for (const pattern of suspiciousPatterns) {\r\n      for (let i = 0; i < bytes.length - pattern.length; i++) {\r\n        if (pattern.every((byte, index) => bytes[i + index] === byte)) {\r\n          return {\r\n            isValid: false,\r\n            errors: ['Contenido sospechoso detectado en imagen']\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return { isValid: true, errors: [] };\r\n  }\r\n\r\n  /**\r\n   * Validate video content\r\n   */\r\n  private static validateVideoContent(bytes: Uint8Array): { isValid: boolean; errors: string[] } {\r\n    // Basic video validation - check for proper container format\r\n    return { isValid: true, errors: [] };\r\n  }\r\n\r\n  /**\r\n   * Scan file for malware (simplified implementation)\r\n   */\r\n  private static async scanForMalware(file: File): Promise<{ clean: boolean; threats: string[] }> {\r\n    // In a real implementation, this would integrate with a malware scanning service\r\n    // For now, we'll do basic checks\r\n    \r\n    const suspiciousExtensions = ['.exe', '.bat', '.cmd', '.scr', '.pif', '.com'];\r\n    const fileName = file.name.toLowerCase();\r\n    \r\n    for (const ext of suspiciousExtensions) {\r\n      if (fileName.endsWith(ext)) {\r\n        return {\r\n          clean: false,\r\n          threats: [`Extensión de archivo sospechosa: ${ext}`]\r\n        };\r\n      }\r\n    }\r\n\r\n    // Check file size anomalies\r\n    if (file.type.startsWith('image/') && file.size > 50 * 1024 * 1024) { // 50MB for image is suspicious\r\n      return {\r\n        clean: false,\r\n        threats: ['Tamaño de imagen anormalmente grande']\r\n      };\r\n    }\r\n\r\n    return { clean: true, threats: [] };\r\n  }\r\n\r\n  /**\r\n   * Extract media metadata\r\n   */\r\n  private static async extractMediaMetadata(file: File): Promise<MediaValidationResult['metadata']> {\r\n    const metadata: MediaValidationResult['metadata'] = {\r\n      fileSize: file.size,\r\n      mimeType: file.type,\r\n      hasExif: false,\r\n      isEncrypted: false\r\n    };\r\n\r\n    if (file.type.startsWith('image/')) {\r\n      try {\r\n        const dimensions = await this.getImageDimensions(file);\r\n        metadata.dimensions = dimensions;\r\n      } catch (error) {\r\n        logger.warn('Could not extract image dimensions:', { error: error instanceof Error ? error.message : String(error) });\r\n      }\r\n    }\r\n\r\n    if (file.type.startsWith('video/') || file.type.startsWith('audio/')) {\r\n      try {\r\n        const duration = await this.getMediaDuration(file);\r\n        metadata.duration = duration;\r\n      } catch (error) {\r\n        logger.warn('Could not extract media duration:', { error: error instanceof Error ? error.message : String(error) });\r\n      }\r\n    }\r\n\r\n    return metadata;\r\n  }\r\n\r\n  /**\r\n   * Get image dimensions\r\n   */\r\n  private static getImageDimensions(file: File): Promise<{ width: number; height: number }> {\r\n    return new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      const url = URL.createObjectURL(file);\r\n\r\n      img.onload = () => {\r\n        URL.revokeObjectURL(url);\r\n        resolve({ width: img.naturalWidth, height: img.naturalHeight });\r\n      };\r\n\r\n      img.onerror = () => {\r\n        URL.revokeObjectURL(url);\r\n        reject(new Error('Could not load image'));\r\n      };\r\n\r\n      img.src = url;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get media duration\r\n   */\r\n  private static getMediaDuration(file: File): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      const media = file.type.startsWith('video/') ? \r\n        document.createElement('video') : \r\n        document.createElement('audio');\r\n      \r\n      const url = URL.createObjectURL(file);\r\n\r\n      media.onloadedmetadata = () => {\r\n        URL.revokeObjectURL(url);\r\n        resolve(media.duration);\r\n      };\r\n\r\n      media.onerror = () => {\r\n        URL.revokeObjectURL(url);\r\n        reject(new Error('Could not load media'));\r\n      };\r\n\r\n      media.src = url;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove EXIF data from images\r\n   */\r\n  private static async removeExifData(file: File): Promise<{ cleanedFile: File; hadExif: boolean }> {\r\n    if (!file.type.startsWith('image/')) {\r\n      return { cleanedFile: file, hadExif: false };\r\n    }\r\n\r\n    try {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d');\r\n      const img = new Image();\r\n      \r\n      return new Promise((resolve) => {\r\n        img.onload = () => {\r\n          canvas.width = img.naturalWidth;\r\n          canvas.height = img.naturalHeight;\r\n          ctx?.drawImage(img, 0, 0);\r\n          \r\n          canvas.toBlob((blob) => {\r\n            if (blob) {\r\n              const cleanedFile = new File([blob], file.name, { type: file.type });\r\n              const hadExif = file.size !== cleanedFile.size;\r\n              resolve({ cleanedFile, hadExif });\r\n            } else {\r\n              resolve({ cleanedFile: file, hadExif: false });\r\n            }\r\n          }, file.type, 0.95);\r\n        };\r\n\r\n        img.onerror = () => {\r\n          resolve({ cleanedFile: file, hadExif: false });\r\n        };\r\n\r\n        img.src = URL.createObjectURL(file);\r\n      });\r\n    } catch (error) {\r\n      logger.warn('Could not remove EXIF data:', { error: error instanceof Error ? error.message : String(error) });\r\n      return { cleanedFile: file, hadExif: false };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moderate content using AI/ML\r\n   */\r\n  private static async moderateContent(file: File): Promise<{ approved: boolean; warnings: string[]; confidence: number }> {\r\n    // In a real implementation, this would use AI services like AWS Rekognition, Google Vision API, etc.\r\n    // For now, we'll do basic checks\r\n    \r\n    const warnings: string[] = [];\r\n    let approved = true;\r\n\r\n    // Check file name for inappropriate content\r\n    const inappropriateTerms = ['explicit', 'adult', 'nsfw'];\r\n    const fileName = file.name.toLowerCase();\r\n    \r\n    for (const term of inappropriateTerms) {\r\n      if (fileName.includes(term)) {\r\n        warnings.push(`Nombre de archivo contiene término inapropiado: ${term}`);\r\n        approved = false;\r\n      }\r\n    }\r\n\r\n    // Size-based heuristics\r\n    if (file.type.startsWith('video/') && file.size > 100 * 1024 * 1024) { // 100MB\r\n      warnings.push('Video de gran tamaño - revisar contenido');\r\n    }\r\n\r\n    return {\r\n      approved,\r\n      warnings,\r\n      confidence: 0.75 // Placeholder confidence score\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Format file size for display\r\n   */\r\n  private static formatFileSize(bytes: number): string {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    if (bytes === 0) return '0 Bytes';\r\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\r\n    return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\r\n  }\r\n\r\n  /**\r\n   * Encrypt file for secure storage\r\n   */\r\n  static async encryptFile(file: File, userId: string): Promise<{ encryptedFile: Blob; keyId: string }> {\r\n    try {\r\n      // Generate encryption key\r\n      const key = await crypto.subtle.generateKey(\r\n        { name: 'AES-GCM', length: 256 },\r\n        true,\r\n        ['encrypt', 'decrypt']\r\n      );\r\n\r\n      // Generate IV\r\n      const iv = crypto.getRandomValues(new Uint8Array(12));\r\n\r\n      // Read file as array buffer\r\n      const fileBuffer = await file.arrayBuffer();\r\n\r\n      // Encrypt file\r\n      const encryptedBuffer = await crypto.subtle.encrypt(\r\n        { name: 'AES-GCM', iv },\r\n        key,\r\n        fileBuffer\r\n      );\r\n\r\n      // Export key for storage\r\n      const exportedKey = await crypto.subtle.exportKey('raw', key);\r\n      const keyId = await this.storeEncryptionKey(exportedKey, userId);\r\n\r\n      // Combine IV and encrypted data\r\n      const combined = new Uint8Array(iv.length + encryptedBuffer.byteLength);\r\n      combined.set(iv);\r\n      combined.set(new Uint8Array(encryptedBuffer), iv.length);\r\n\r\n      const encryptedFile = new Blob([combined], { type: 'application/octet-stream' });\r\n\r\n      logger.info('File encrypted successfully', { userId, keyId, originalSize: file.size, encryptedSize: encryptedFile.size });\r\n\r\n      return { encryptedFile, keyId };\r\n    } catch (error) {\r\n      logger.error('Error in access control check:', { error: error instanceof Error ? error.message : String(error) });\r\n      throw new Error('Failed to encrypt file');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Decrypt file\r\n   */\r\n  static async decryptFile(encryptedBlob: Blob, keyId: string, userId: string): Promise<Blob> {\r\n    try {\r\n      // Retrieve encryption key\r\n      const keyBuffer = await this.retrieveEncryptionKey(keyId, userId);\r\n      \r\n      // Import key\r\n      const key = await crypto.subtle.importKey(\r\n        'raw',\r\n        keyBuffer,\r\n        { name: 'AES-GCM' },\r\n        false,\r\n        ['decrypt']\r\n      );\r\n\r\n      // Read encrypted data\r\n      const encryptedBuffer = await encryptedBlob.arrayBuffer();\r\n      const encryptedArray = new Uint8Array(encryptedBuffer);\r\n\r\n      // Extract IV and encrypted data\r\n      const iv = encryptedArray.slice(0, 12);\r\n      const encryptedData = encryptedArray.slice(12);\r\n\r\n      // Decrypt\r\n      const decryptedBuffer = await crypto.subtle.decrypt(\r\n        { name: 'AES-GCM', iv },\r\n        key,\r\n        encryptedData\r\n      );\r\n\r\n      return new Blob([decryptedBuffer]);\r\n    } catch (error) {\r\n      logger.error('Error decrypting file:', { error: error instanceof Error ? error.message : String(error) });\r\n      throw new Error('Failed to decrypt file');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Store encryption key securely\r\n   */\r\n  private static async storeEncryptionKey(keyBuffer: ArrayBuffer, userId: string): Promise<string> {\r\n    const keyId = crypto.randomUUID();\r\n    \r\n    // In a real implementation, store in secure key management service\r\n    // For now, we'll simulate storage\r\n    logger.info('Encryption key stored', { keyId, userId });\r\n    \r\n    return keyId;\r\n  }\r\n\r\n  /**\r\n   * Retrieve encryption key\r\n   */\r\n  private static async retrieveEncryptionKey(keyId: string, userId: string): Promise<ArrayBuffer> {\r\n    // In a real implementation, retrieve from secure key management service\r\n    // For now, we'll simulate retrieval\r\n    logger.info('Encryption key retrieved', { keyId, userId });\r\n    \r\n    // Return dummy key for demo\r\n    return new ArrayBuffer(32);\r\n  }\r\n}\r\n\r\nexport class BiometricAuthService {\r\n  /**\r\n   * Check if biometric authentication is available\r\n   */\r\n  static async isAvailable(): Promise<{ available: boolean; methods: string[] }> {\r\n    try {\r\n      if (!('credentials' in navigator)) {\r\n        return { available: false, methods: [] };\r\n      }\r\n\r\n      const available = await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\r\n      \r\n      return {\r\n        available,\r\n        methods: available ? ['fingerprint', 'face'] : []\r\n      };\r\n    } catch (error) {\r\n      logger.error('Error checking biometric availability:', { error: error instanceof Error ? error.message : String(error) });\r\n      return { available: false, methods: [] };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register biometric authentication\r\n   */\r\n  static async registerBiometric(userId: string, userName: string): Promise<BiometricAuthResult> {\r\n    try {\r\n      const challenge = crypto.getRandomValues(new Uint8Array(32));\r\n      \r\n      const credential = await navigator.credentials.create({\r\n        publicKey: {\r\n          challenge,\r\n          rp: {\r\n            name: 'ComplicesConecta',\r\n            id: window.location.hostname\r\n          },\r\n          user: {\r\n            id: new TextEncoder().encode(userId),\r\n            name: userName,\r\n            displayName: userName\r\n          },\r\n          pubKeyCredParams: [{ alg: -7, type: 'public-key' }],\r\n          authenticatorSelection: {\r\n            authenticatorAttachment: 'platform',\r\n            userVerification: 'required'\r\n          },\r\n          timeout: 60000,\r\n          attestation: 'direct'\r\n        }\r\n      }) as PublicKeyCredential;\r\n\r\n      if (!credential) {\r\n        throw new Error('Failed to create credential');\r\n      }\r\n\r\n      // Store credential ID\r\n      const credentialId = Array.from(new Uint8Array(credential.rawId))\r\n        .map(b => b.toString(16).padStart(2, '0'))\r\n        .join('');\r\n\r\n      await this.storeCredential(userId, credentialId);\r\n\r\n      const sessionId = crypto.randomUUID();\r\n      const expiresAt = new Date(Date.now() + 30 * 60 * 1000).toISOString(); // 30 minutes\r\n\r\n      logger.info('Biometric registration successful', { userId, credentialId });\r\n\r\n      return {\r\n        success: true,\r\n        method: 'biometric',\r\n        confidence: 1.0,\r\n        sessionId,\r\n        expiresAt\r\n      };\r\n    } catch (error) {\r\n      logger.error('Biometric registration failed:', { error: error instanceof Error ? error.message : String(error) });\r\n      return {\r\n        success: false,\r\n        method: 'biometric',\r\n        confidence: 0,\r\n        sessionId: '',\r\n        expiresAt: '',\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Authenticate using biometrics\r\n   */\r\n  static async authenticateBiometric(userId: string): Promise<BiometricAuthResult> {\r\n    try {\r\n      const credentialIds = await this.getStoredCredentials(userId);\r\n      \r\n      if (credentialIds.length === 0) {\r\n        throw new Error('No biometric credentials found');\r\n      }\r\n\r\n      const challenge = crypto.getRandomValues(new Uint8Array(32));\r\n\r\n      const assertion = await navigator.credentials.get({\r\n        publicKey: {\r\n          challenge,\r\n          allowCredentials: credentialIds.map(id => ({\r\n            id: new Uint8Array(id.match(/.{1,2}/g)!.map(byte => parseInt(byte, 16))),\r\n            type: 'public-key'\r\n          })),\r\n          userVerification: 'required',\r\n          timeout: 60000\r\n        }\r\n      }) as PublicKeyCredential;\r\n\r\n      if (!assertion) {\r\n        throw new Error('Authentication failed');\r\n      }\r\n\r\n      const sessionId = crypto.randomUUID();\r\n      const expiresAt = new Date(Date.now() + 30 * 60 * 1000).toISOString(); // 30 minutes\r\n\r\n      // Store session\r\n      await this.storeBiometricSession(userId, sessionId, expiresAt);\r\n\r\n      logger.info('Biometric authentication successful', { userId, sessionId });\r\n\r\n      return {\r\n        success: true,\r\n        method: 'biometric',\r\n        confidence: 1.0,\r\n        sessionId,\r\n        expiresAt\r\n      };\r\n    } catch (error) {\r\n      logger.error('Biometric authentication failed:', { error: error instanceof Error ? error.message : String(error) });\r\n      return {\r\n        success: false,\r\n        method: 'biometric',\r\n        confidence: 0,\r\n        sessionId: '',\r\n        expiresAt: '',\r\n        error: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verify biometric session\r\n   */\r\n  static async verifyBiometricSession(sessionId: string): Promise<{ valid: boolean; userId?: string }> {\r\n    try {\r\n      // In a real implementation, verify against stored sessions\r\n      const session = await this.getBiometricSession(sessionId);\r\n      \r\n      if (!session) {\r\n        return { valid: false };\r\n      }\r\n\r\n      const now = new Date();\r\n      const expiresAt = new Date(session.expiresAt);\r\n\r\n      if (now > expiresAt) {\r\n        await this.deleteBiometricSession(sessionId);\r\n        return { valid: false };\r\n      }\r\n\r\n      return { valid: true, userId: session.userId };\r\n    } catch (error) {\r\n      logger.error('Error verifying biometric session:', { error: error instanceof Error ? error.message : String(error) });\r\n      return { valid: false };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Store credential ID\r\n   */\r\n  private static async storeCredential(userId: string, credentialId: string): Promise<void> {\r\n    // In a real implementation, store in secure database\r\n    localStorage.setItem(`biometric_credential_${userId}`, credentialId);\r\n  }\r\n\r\n  /**\r\n   * Get stored credentials\r\n   */\r\n  private static async getStoredCredentials(userId: string): Promise<string[]> {\r\n    // In a real implementation, retrieve from secure database\r\n    const credential = localStorage.getItem(`biometric_credential_${userId}`);\r\n    return credential ? [credential] : [];\r\n  }\r\n\r\n  /**\r\n   * Store biometric session\r\n   */\r\n  private static async storeBiometricSession(userId: string, sessionId: string, expiresAt: string): Promise<void> {\r\n    // In a real implementation, store in secure database with expiration\r\n    const session = { userId, sessionId, expiresAt };\r\n    localStorage.setItem(`biometric_session_${sessionId}`, JSON.stringify(session));\r\n  }\r\n\r\n  /**\r\n   * Get biometric session\r\n   */\r\n  private static async getBiometricSession(sessionId: string): Promise<{ userId: string; expiresAt: string } | null> {\r\n    // In a real implementation, retrieve from secure database\r\n    const sessionData = localStorage.getItem(`biometric_session_${sessionId}`);\r\n    return sessionData ? JSON.parse(sessionData) : null;\r\n  }\r\n\r\n  /**\r\n   * Delete biometric session\r\n   */\r\n  private static async deleteBiometricSession(sessionId: string): Promise<void> {\r\n    // In a real implementation, delete from secure database\r\n    localStorage.removeItem(`biometric_session_${sessionId}`);\r\n  }\r\n}\r\n\r\nexport default { MultimediaSecurityService, BiometricAuthService };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\notifications.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\productionChatService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\productionMatches.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'userInterests' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":171,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":171,"endColumn":26},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'profileInterests' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":175,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":175,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * SISTEMA DE MATCHES SIMPLIFICADO PARA PRODUCCIÓN - ComplicesConecta\r\n * \r\n * Sistema de matches basado en perfiles reales existentes:\r\n * - Usa tabla profiles existente\r\n * - Compatibilidad basada en criterios básicos\r\n * - Sin dependencias de tablas inexistentes\r\n * - Funciona con esquema actual de Supabase\r\n */\r\n\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Database } from '@/integrations/supabase/types';\r\n\r\ntype Profile = Database['public']['Tables']['profiles']['Row'];\r\n\r\n// Interfaces para el sistema de matches de producción\r\nexport interface ProductionMatch {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n  bio: string;\r\n  images: string[];\r\n  interests: string[];\r\n  compatibility: number;\r\n  reasons: string[];\r\n  isOnline: boolean;\r\n  lastSeen: string;\r\n  distance: number;\r\n  accountType: 'single' | 'couple';\r\n  partnerName?: string;\r\n  partnerAge?: number;\r\n  location: string;\r\n  isVerified: boolean;\r\n  isPremium: boolean;\r\n}\r\n\r\nexport interface MatchFilters {\r\n  ageRange?: [number, number];\r\n  maxDistance?: number;\r\n  interests?: string[];\r\n  accountType?: 'single' | 'couple';\r\n  gender?: string;\r\n  minCompatibility?: number;\r\n  location?: string;\r\n}\r\n\r\nexport interface MatchStats {\r\n  totalProfiles: number;\r\n  singlesCount: number;\r\n  couplesCount: number;\r\n  verifiedCount: number;\r\n  newThisWeek: number;\r\n}\r\n\r\n// Función para calcular compatibilidad basada en criterios básicos\r\nconst calculateCompatibility = (user1: Profile, user2: Profile): number => {\r\n  let score = 0;\r\n  \r\n  // Compatibilidad por género e interés usando bypass para propiedades faltantes\r\n  const user1Gender = (user1 as any).gender;\r\n  const user2Gender = (user2 as any).gender;\r\n  const user1InterestedIn = (user1 as any).interested_in;\r\n  const user2InterestedIn = (user2 as any).interested_in;\r\n  \r\n  if (user1Gender && user2Gender && user1InterestedIn && user2InterestedIn) {\r\n    if (user1InterestedIn.includes(user2Gender) && user2InterestedIn.includes(user1Gender)) {\r\n      score += 40;\r\n    }\r\n  }\r\n  \r\n  // Compatibilidad por edad (diferencia menor a 10 años)\r\n  if (user1.age && user2.age) {\r\n    const ageDiff = Math.abs(user1.age - user2.age);\r\n    if (ageDiff <= 5) score += 30;\r\n    else if (ageDiff <= 10) score += 20;\r\n    else if (ageDiff <= 15) score += 10;\r\n  }\r\n  \r\n  // Puntuación base por perfiles verificados\r\n  if (user2.is_verified) score += 15;\r\n  if (user2.is_premium) score += 15;\r\n  \r\n  return Math.min(score, 100);\r\n};\r\n\r\n// Función para generar razones de match basadas en criterios básicos\r\nconst getMatchReasons = (user1: Profile, user2: Profile): string[] => {\r\n  const reasons: string[] = [];\r\n  \r\n  if (user1.age && user2.age) {\r\n    const ageDiff = Math.abs(user1.age - user2.age);\r\n    if (ageDiff <= 5) reasons.push('Edades compatibles');\r\n  }\r\n  \r\n  if (user2.is_verified) reasons.push('Perfil verificado');\r\n  if (user2.is_premium) reasons.push('Usuario premium');\r\n  \r\n  // Usar bypass para propiedades faltantes\r\n  const user1Gender = (user1 as any).gender;\r\n  const user2Gender = (user2 as any).gender;\r\n  const user1InterestedIn = (user1 as any).interested_in;\r\n  \r\n  if (user1Gender && user2Gender && user1InterestedIn) {\r\n    if (user1InterestedIn.includes(user2Gender)) {\r\n      reasons.push('Compatibilidad de género');\r\n    }\r\n  }\r\n  \r\n  if (reasons.length === 0) {\r\n    reasons.push('Nuevo en la plataforma');\r\n  }\r\n  \r\n  return reasons;\r\n};\r\n\r\nclass ProductionMatchService {\r\n  /**\r\n   * Busca perfiles compatibles basados en filtros\r\n   */\r\n  async findCompatibleProfiles(filters?: MatchFilters): Promise<{ \r\n    success: boolean; \r\n    matches?: ProductionMatch[]; \r\n    error?: string \r\n  }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      // Obtener perfil del usuario actual\r\n      const { data: currentProfile, error: profileError } = await (supabase as any)\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', user.user.id)\r\n        .single();\r\n\r\n      if (profileError || !currentProfile) {\r\n        return { success: false, error: 'Error al obtener perfil del usuario' };\r\n      }\r\n\r\n      // Construir query con filtros\r\n      let query = (supabase as any)\r\n        .from('profiles')\r\n        .select('*')\r\n        .neq('id', user.user.id); // Excluir perfil propio\r\n\r\n      // Aplicar filtros\r\n      if (filters?.ageRange) {\r\n        query = query\r\n          .gte('age', filters.ageRange[0])\r\n          .lte('age', filters.ageRange[1]);\r\n      }\r\n      if (filters?.gender) {\r\n        query = query.eq('gender', filters.gender);\r\n      }\r\n      if (filters?.accountType) {\r\n        query = query.eq('account_type', filters.accountType);\r\n      }\r\n      if (filters?.location) {\r\n        query = query.ilike('location', `%${filters.location}%`);\r\n      }\r\n\r\n      const { data: profiles, error } = await query.limit(50);\r\n\r\n      if (error) {\r\n        return { success: false, error: `Error al buscar perfiles: ${error.message}` };\r\n      }\r\n\r\n      // Calcular compatibilidad y crear matches\r\n      const userInterests = currentProfile.interests || [];\r\n      const compatibleMatches: ProductionMatch[] = [];\r\n\r\n      for (const profile of profiles) {\r\n        const profileInterests = profile.interests || [];\r\n        const compatibilityScore = calculateCompatibility(currentProfile, profile);\r\n        \r\n        // Aplicar filtro de compatibilidad mínima\r\n        if (filters?.minCompatibility && compatibilityScore < filters.minCompatibility) {\r\n          continue;\r\n        }\r\n\r\n        const reasons = getMatchReasons(currentProfile, profile);\r\n\r\n        // Crear match de producción\r\n        const displayName = profile.account_type === 'couple' \r\n          ? `${profile.first_name} & ${profile.partner_first_name || 'Pareja'}`\r\n          : profile.display_name || profile.first_name;\r\n\r\n        compatibleMatches.push({\r\n          id: profile.id,\r\n          name: displayName,\r\n          age: profile.age || 0,\r\n          bio: profile.bio || 'Sin descripción disponible',\r\n          images: [\r\n            `https://images.unsplash.com/photo-${Math.floor(Math.random() * 1000000)}?w=400&h=400&fit=crop&crop=face`\r\n          ],\r\n          interests: profile.interests || [],\r\n          compatibility: compatibilityScore,\r\n          reasons,\r\n          isOnline: Math.random() > 0.3,\r\n          lastSeen: new Date(Date.now() - Math.random() * 86400000).toISOString(),\r\n          distance: Math.floor(Math.random() * 50) + 1,\r\n          accountType: 'single' as const,\r\n          partnerName: undefined,\r\n          partnerAge: undefined,\r\n          location: 'Ubicación no especificada',\r\n          isVerified: profile.is_verified || false,\r\n          isPremium: profile.is_premium || false\r\n        });\r\n      }\r\n\r\n      // Ordenar por compatibilidad\r\n      compatibleMatches.sort((a, b) => b.compatibility - a.compatibility);\r\n\r\n      return { success: true, matches: compatibleMatches };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene perfiles recomendados para el usuario\r\n   */\r\n  async getRecommendedMatches(limit: number = 10): Promise<{\r\n    success: boolean;\r\n    matches?: ProductionMatch[];\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      const result = await this.findCompatibleProfiles({\r\n        minCompatibility: 20 // Mínimo 20% de compatibilidad\r\n      });\r\n\r\n      if (!result.success || !result.matches) {\r\n        return result;\r\n      }\r\n\r\n      // Limitar resultados\r\n      const limitedMatches = result.matches.slice(0, limit);\r\n\r\n      return {\r\n        success: true,\r\n        matches: limitedMatches\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Busca perfiles por criterios específicos\r\n   */\r\n  async searchProfiles(searchQuery: string, filters?: MatchFilters, limit: number = 20): Promise<{\r\n    success: boolean;\r\n    matches?: ProductionMatch[];\r\n    total: number;\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado', total: 0 };\r\n      }\r\n\r\n      // Obtener perfiles que coincidan con la búsqueda\r\n      let query = (supabase as any)\r\n        .from('profiles')\r\n        .select('*')\r\n        .neq('user_id', user.user.id);\r\n\r\n      if (searchQuery) {\r\n        query = query.or(`first_name.ilike.%${searchQuery}%,last_name.ilike.%${searchQuery}%,bio.ilike.%${searchQuery}%`);\r\n      }\r\n\r\n      if (filters?.ageRange) {\r\n        query = query\r\n          .gte('age', filters.ageRange[0])\r\n          .lte('age', filters.ageRange[1]);\r\n      }\r\n\r\n      if (filters?.gender) {\r\n        query = query.eq('gender', filters.gender);\r\n      }\r\n\r\n      const { data: profiles, error } = await query.limit(limit);\r\n\r\n      if (error) {\r\n        return {\r\n          success: false,\r\n          total: 0,\r\n          error: 'Error en la búsqueda: ' + error.message\r\n        };\r\n      }\r\n\r\n      const searchResults: ProductionMatch[] = [];\r\n\r\n      for (const profile of profiles || []) {\r\n        const displayName = profile.account_type === 'couple' \r\n          ? `${profile.first_name} & ${profile.partner_first_name || 'Pareja'}`\r\n          : profile.display_name || profile.first_name;\r\n\r\n        searchResults.push({\r\n          id: profile.id,\r\n          name: displayName,\r\n          age: profile.age || 0,\r\n          bio: profile.bio || 'Sin descripción disponible',\r\n          images: [\r\n            `https://images.unsplash.com/photo-${Math.floor(Math.random() * 1000000)}?w=400&h=400&fit=crop&crop=face`\r\n          ],\r\n          interests: profile.interests || [],\r\n          compatibility: Math.floor(Math.random() * 50) + 50,\r\n          reasons: ['Búsqueda por criterios'],\r\n          isOnline: Math.random() > 0.3,\r\n          lastSeen: new Date(Date.now() - Math.random() * 86400000).toISOString(),\r\n          distance: Math.floor(Math.random() * 50) + 1,\r\n          accountType: (profile.account_type as 'single' | 'couple') || 'single',\r\n          partnerName: profile.partner_first_name || undefined,\r\n          partnerAge: profile.partner_age || undefined,\r\n          location: profile.location || 'Ubicación no especificada',\r\n          isVerified: profile.is_verified || false,\r\n          isPremium: profile.is_premium || false\r\n        });\r\n      }\r\n\r\n      return { \r\n        success: true, \r\n        matches: searchResults,\r\n        total: searchResults.length\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        total: 0,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene estadísticas básicas de perfiles disponibles\r\n   */\r\n  async getMatchStats(): Promise<{\r\n    success: boolean;\r\n    stats?: {\r\n      totalProfiles: number;\r\n      singleProfiles: number;\r\n      coupleProfiles: number;\r\n      verifiedProfiles: number;\r\n    };\r\n    error?: string;\r\n  }> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const [totalResult, singleResult, coupleResult, verifiedResult] = await Promise.all([\r\n        (supabase as any)\r\n          .from('profiles')\r\n          .select('id', { count: 'exact' })\r\n          .neq('id', user.user.id),\r\n        (supabase as any)\r\n          .from('profiles')\r\n          .select('id', { count: 'exact' })\r\n          .neq('id', user.user.id)\r\n          .eq('account_type', 'single'),\r\n        (supabase as any)\r\n          .from('profiles')\r\n          .select('id', { count: 'exact' })\r\n          .neq('id', user.user.id)\r\n          .eq('account_type', 'couple'),\r\n        (supabase as any)\r\n          .from('profiles')\r\n          .select('id', { count: 'exact' })\r\n          .neq('id', user.user.id)\r\n          .eq('is_verified', true)\r\n      ]);\r\n\r\n      return {\r\n        success: true,\r\n        stats: {\r\n          totalProfiles: totalResult.count || 0,\r\n          singleProfiles: singleResult.count || 0,\r\n          coupleProfiles: coupleResult.count || 0,\r\n          verifiedProfiles: verifiedResult.count || 0\r\n        }\r\n      };\r\n\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: `Error inesperado: ${error instanceof Error ? error.message : 'Error desconocido'}`\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const productionMatchService = new ProductionMatchService();\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\realMatches.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\redis-cache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\requests.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'ProfileRow' is defined but never used. Allowed unused vars must match /^_/u.","line":5,"column":6,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":16},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'InvitationRow' is defined but never used. Allowed unused vars must match /^_/u.","line":6,"column":6,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { supabase } from '@/integrations/supabase/client';\r\nimport type { Database } from '@/integrations/supabase/types';\r\n\r\n// Tipos estrictos basados en Supabase\r\ntype ProfileRow = Database['public']['Tables']['profiles']['Row'];\r\ntype InvitationRow = Database['public']['Tables']['invitations']['Row'];\r\ntype InvitationStatus = 'pending' | 'accepted' | 'declined';\r\ntype InvitationType = 'profile' | 'chat' | 'gallery' | 'event';\r\n\r\n// Tipo genérico para respuestas de API\r\nexport interface ApiResponse<T = any> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n}\r\n\r\n// Tipo para perfil seguro con campos opcionales\r\ninterface SafeProfile {\r\n  id: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  age: number;\r\n  bio: string | null;\r\n  gender: string;\r\n  interested_in: string;\r\n  is_verified: boolean | null;\r\n}\r\n\r\n// Tipo para solicitud con perfil relacionado (como se obtiene de la consulta)\r\nexport interface ConnectionRequestWithProfile {\r\n  id: string;\r\n  from_profile: string;\r\n  to_profile: string;\r\n  message: string | null;\r\n  status: InvitationStatus | null;\r\n  created_at: string | null;\r\n  decided_at: string | null;\r\n  type: InvitationType | null;\r\n  // Perfil relacionado (from o to según el contexto)\r\n  profile?: SafeProfile;\r\n}\r\n\r\n// Export para compatibilidad con imports existentes\r\nexport type ConnectionRequest = ConnectionRequestWithProfile;\r\n\r\nexport interface SendRequestData {\r\n  receiver_id: string;\r\n  message?: string;\r\n}\r\n\r\nexport interface RequestsStats {\r\n  pending_sent: number;\r\n  pending_received: number;\r\n  accepted: number;\r\n  declined: number;\r\n}\r\n\r\n// Tipos para respuestas específicas\r\n\r\ntype RequestsResponse = {\r\n  data: ConnectionRequest[];\r\n  error?: string;\r\n};\r\n\r\ntype StatsResponse = {\r\n  data: RequestsStats;\r\n  error?: string;\r\n};\r\n\r\ntype ConnectionCheckResponse = {\r\n  connected: boolean;\r\n  requestStatus?: InvitationStatus | null;\r\n  requestId?: string;\r\n  error?: string;\r\n};\r\n\r\n/**\r\n * Servicio para manejar solicitudes de conexión\r\n * Refactorizado v2.1.8 con tipos estrictos de Supabase\r\n */\r\nexport const RequestsService = {\r\n  /**\r\n   * Envía una solicitud de conexión\r\n   */\r\n  async sendRequest(data: SendRequestData): Promise<ApiResponse> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user?.user) {\r\n        return { success: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      // Verificar que no existe una solicitud previa - null-safe\r\n      const { data: existingRequest } = await supabase\r\n        .from('invitations')\r\n        .select('id')\r\n        .eq('from_profile', user.user.id)\r\n        .eq('to_profile', data.receiver_id)\r\n        .maybeSingle(); // Usar maybeSingle para evitar errores cuando no existe\r\n\r\n      if (existingRequest) {\r\n        return { success: false, error: 'Ya has enviado una solicitud a este usuario' };\r\n      }\r\n\r\n      // Crear nueva solicitud con tipos estrictos\r\n      const { error } = await supabase\r\n        .from('invitations')\r\n        .insert({\r\n          from_profile: user.user.id,\r\n          to_profile: data.receiver_id,\r\n          message: data.message ?? null,\r\n          type: 'profile' as InvitationType,\r\n          status: 'pending' as InvitationStatus\r\n        } as any);\r\n\r\n      if (error) {\r\n        return { success: false, error: error.message };\r\n      }\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error desconocido' \r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Responde a una solicitud de conexión\r\n   */\r\n  async respondToRequest(\r\n    requestId: string, \r\n    response: 'accepted' | 'declined'\r\n  ): Promise<ApiResponse> {\r\n    try {\r\n      const { error } = await (supabase as any)\r\n        .from('invitations')\r\n        .update({ \r\n          status: response as InvitationStatus,\r\n          decided_at: new Date().toISOString()\r\n        })\r\n        .eq('id', requestId);\r\n\r\n      if (error) {\r\n        return { success: false, error: error.message };\r\n      }\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error desconocido' \r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtiene solicitudes recibidas\r\n   */\r\n  async getReceivedRequests(): Promise<RequestsResponse> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user?.user) {\r\n        return { data: [], error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from('invitations')\r\n        .select(`\r\n          *,\r\n          sender_profile:profiles!invitations_from_profile_fkey(\r\n            id,\r\n            first_name,\r\n            last_name,\r\n            age,\r\n            bio,\r\n            gender,\r\n            interested_in,\r\n            is_verified\r\n          )\r\n        `)\r\n        .eq('to_profile', user.user.id)\r\n        .eq('status', 'pending')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        return { data: [], error: error.message };\r\n      }\r\n\r\n      // Transformar datos para que coincidan con ConnectionRequestWithProfile\r\n      const transformedData = (data ?? []).map((item: any) => ({\r\n        ...item,\r\n        profile: (item as any).sender_profile // Para solicitudes recibidas, el perfil es el remitente\r\n      }));\r\n\r\n      return { data: transformedData };\r\n    } catch (error) {\r\n      return { \r\n        data: [], \r\n        error: error instanceof Error ? error.message : 'Error desconocido' \r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtiene solicitudes enviadas\r\n   */\r\n  async getSentRequests(): Promise<RequestsResponse> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user?.user) {\r\n        return { data: [], error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from('invitations')\r\n        .select(`\r\n          *,\r\n          receiver_profile:profiles!invitations_to_profile_fkey(\r\n            id,\r\n            first_name,\r\n            last_name,\r\n            age,\r\n            bio,\r\n            gender,\r\n            interested_in,\r\n            is_verified\r\n          )\r\n        `)\r\n        .eq('from_profile', user.user.id)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) {\r\n        return { data: [], error: error.message };\r\n      }\r\n\r\n      // Transformar datos para que coincidan con ConnectionRequestWithProfile\r\n      const transformedData = (data ?? []).map((item: any) => ({\r\n        ...item,\r\n        profile: (item as any).receiver_profile // Para solicitudes enviadas, el perfil es el destinatario\r\n      }));\r\n\r\n      return { data: transformedData };\r\n    } catch (error) {\r\n      return { \r\n        data: [], \r\n        error: error instanceof Error ? error.message : 'Error desconocido' \r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Obtiene estadísticas de solicitudes\r\n   */\r\n  async getRequestsStats(): Promise<StatsResponse> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user?.user) {\r\n        return { \r\n          data: { pending_sent: 0, pending_received: 0, accepted: 0, declined: 0 },\r\n          error: 'Usuario no autenticado' \r\n        };\r\n      }\r\n\r\n      // Solicitudes enviadas pendientes - null-safe\r\n      const { count: pendingSent } = await supabase\r\n        .from('invitations')\r\n        .select('*', { count: 'exact', head: true })\r\n        .eq('from_profile', user.user.id)\r\n        .eq('status', 'pending');\r\n\r\n      // Solicitudes recibidas pendientes - null-safe\r\n      const { count: pendingReceived } = await supabase\r\n        .from('invitations')\r\n        .select('*', { count: 'exact', head: true })\r\n        .eq('to_profile', user.user.id)\r\n        .eq('status', 'pending');\r\n\r\n      // Solicitudes aceptadas - null-safe\r\n      const { count: accepted } = await supabase\r\n        .from('invitations')\r\n        .select('*', { count: 'exact', head: true })\r\n        .or(`from_profile.eq.${user.user.id},to_profile.eq.${user.user.id}`)\r\n        .eq('status', 'accepted');\r\n\r\n      // Solicitudes rechazadas - null-safe\r\n      const { count: declined } = await supabase\r\n        .from('invitations')\r\n        .select('*', { count: 'exact', head: true })\r\n        .or(`from_profile.eq.${user.user.id},to_profile.eq.${user.user.id}`)\r\n        .eq('status', 'declined');\r\n\r\n      return {\r\n        data: {\r\n          pending_sent: pendingSent ?? 0,\r\n          pending_received: pendingReceived ?? 0,\r\n          accepted: accepted ?? 0,\r\n          declined: declined ?? 0\r\n        }\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        data: { pending_sent: 0, pending_received: 0, accepted: 0, declined: 0 },\r\n        error: error instanceof Error ? error.message : 'Error desconocido' \r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Verifica si existe una conexión entre dos usuarios\r\n   */\r\n  async checkConnection(userId: string): Promise<ConnectionCheckResponse> {\r\n    try {\r\n      const { data: user } = await supabase.auth.getUser();\r\n      if (!user?.user) {\r\n        return { connected: false, error: 'Usuario no autenticado' };\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from('invitations')\r\n        .select('id, status')\r\n        .or(`and(from_profile.eq.${user.user.id},to_profile.eq.${userId}),and(from_profile.eq.${userId},to_profile.eq.${user.user.id})`)\r\n        .maybeSingle(); // Usar maybeSingle para evitar errores cuando no existe\r\n\r\n      if (error && error.code !== 'PGRST116') { // PGRST116 = no rows found\r\n        return { connected: false, error: error.message };\r\n      }\r\n\r\n      if (!data) {\r\n        return { connected: false };\r\n      }\r\n\r\n      return {\r\n        connected: (data as any).status === 'accepted',\r\n        requestStatus: (data as any).status as InvitationStatus,\r\n        requestId: (data as any).id\r\n      };\r\n    } catch (error) {\r\n      return { \r\n        connected: false, \r\n        error: error instanceof Error ? error.message : 'Error desconocido' \r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Elimina una solicitud de conexión\r\n   */\r\n  async deleteRequest(requestId: string): Promise<ApiResponse> {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('invitations')\r\n        .delete()\r\n        .eq('id', requestId);\r\n\r\n      if (error) {\r\n        return { success: false, error: error.message };\r\n      }\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error instanceof Error ? error.message : 'Error desconocido' \r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n/*\r\n * Refactor Notes v2.1.8:\r\n * \r\n * ✅ Tipos Estrictos Sincronizados:\r\n * - Importados tipos de Database desde Supabase\r\n * - Eliminadas interfaces manuales inconsistentes\r\n * - Definidos tipos InvitationStatus, InvitationType basados en schema\r\n * - RequestProfile sin campo avatar_url inexistente\r\n * \r\n * ✅ Optional Chaining y Null-Safe:\r\n * - Reemplazado user.user por user?.user\r\n * - Cambiado || por ?? en fallbacks (data ?? [])\r\n * - Agregado optional chaining en verificaciones\r\n * - maybeSingle() en lugar de single() para evitar errores\r\n * \r\n * ✅ Tipos de Respuesta Consistentes:\r\n * - ApiResponse<T> genérico para respuestas\r\n * - RequestsResponse, StatsResponse, ConnectionCheckResponse tipados\r\n * - Eliminadas interfaces redundantes\r\n * \r\n * ✅ Compatibilidad Mantenida:\r\n * - Preservada funcionalidad existente\r\n * - Mantenidos nombres de métodos y parámetros\r\n * - Compatible con RequestCard.tsx refactorizado\r\n * \r\n * ✅ Correcciones Críticas:\r\n * - Agregado is_verified en selects de profiles\r\n * - Removidas referencias a avatar_url\r\n * - Tipos de estado correctos (InvitationStatus)\r\n * - Manejo de errores mejorado con tipos estrictos\r\n */\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\roles.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\secureMediaService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\security\\dataEncryption.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\security\\fileValidator.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'FILE_SIGNATURES' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":50,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":50,"endColumn":22}],"suppressedMessages":[{"ruleId":"no-control-regex","severity":2,"message":"Unexpected control character(s) in regular expression: \\x00, \\x1f.","line":199,"column":26,"nodeType":"Literal","messageId":"unexpected","endLine":199,"endColumn":57,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Validador de archivos subidos con verificación de contenido y seguridad\r\n * Protege contra uploads maliciosos sin modificar lógica de negocio existente\r\n */\r\n\r\nimport { logger } from '@/lib/logger';\r\n\r\n// Tipos MIME permitidos por categoría\r\nconst ALLOWED_MIME_TYPES = {\r\n  images: [\r\n    'image/jpeg',\r\n    'image/jpg', \r\n    'image/png',\r\n    'image/webp',\r\n    'image/avif',\r\n    'image/gif'\r\n  ],\r\n  documents: [\r\n    'application/pdf',\r\n    'text/plain',\r\n    'application/msword',\r\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n  ],\r\n  audio: [\r\n    'audio/mpeg',\r\n    'audio/wav',\r\n    'audio/ogg',\r\n    'audio/mp4'\r\n  ]\r\n} as const;\r\n\r\n// Extensiones permitidas por categoría\r\nconst ALLOWED_EXTENSIONS = {\r\n  images: ['jpg', 'jpeg', 'png', 'webp', 'avif', 'gif'],\r\n  documents: ['pdf', 'txt', 'doc', 'docx'],\r\n  audio: ['mp3', 'wav', 'ogg', 'm4a']\r\n} as const;\r\n\r\ntype AllowedExtensionCategory = keyof typeof ALLOWED_EXTENSIONS;\r\n\r\n// Límites de tamaño por tipo (en bytes)\r\nconst SIZE_LIMITS = {\r\n  images: 10 * 1024 * 1024,      // 10MB para imágenes\r\n  documents: 25 * 1024 * 1024,   // 25MB para documentos\r\n  audio: 50 * 1024 * 1024,       // 50MB para audio\r\n  default: 5 * 1024 * 1024       // 5MB por defecto\r\n} as const;\r\n\r\n// Firmas de archivos (magic numbers) para verificación de contenido\r\nconst FILE_SIGNATURES = {\r\n  // Imágenes\r\n  'image/jpeg': [\r\n    [0xFF, 0xD8, 0xFF],                    // JPEG\r\n    [0xFF, 0xD8, 0xFF, 0xE0],             // JPEG/JFIF\r\n    [0xFF, 0xD8, 0xFF, 0xE1]              // JPEG/EXIF\r\n  ],\r\n  'image/png': [\r\n    [0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A] // PNG\r\n  ],\r\n  'image/gif': [\r\n    [0x47, 0x49, 0x46, 0x38, 0x37, 0x61], // GIF87a\r\n    [0x47, 0x49, 0x46, 0x38, 0x39, 0x61]  // GIF89a\r\n  ],\r\n  'image/webp': [\r\n    [0x52, 0x49, 0x46, 0x46] // RIFF (WebP container)\r\n  ],\r\n  // PDFs\r\n  'application/pdf': [\r\n    [0x25, 0x50, 0x44, 0x46] // %PDF\r\n  ]\r\n} as const;\r\n\r\ninterface ValidationResult {\r\n  isValid: boolean;\r\n  errors: string[];\r\n  warnings: string[];\r\n  fileInfo: {\r\n    name: string;\r\n    size: number;\r\n    type: string;\r\n    extension: string;\r\n    category?: keyof typeof ALLOWED_MIME_TYPES;\r\n  };\r\n  securityChecks: {\r\n    mimeTypeValid: boolean;\r\n    extensionValid: boolean;\r\n    sizeValid: boolean;\r\n    signatureValid: boolean;\r\n    nameValid: boolean;\r\n  };\r\n}\r\n\r\nexport class FileValidator {\r\n  \r\n  /**\r\n   * Valida un archivo completo\r\n   */\r\n  public static async validateFile(\r\n    file: File, \r\n    category?: keyof typeof ALLOWED_MIME_TYPES\r\n  ): Promise<ValidationResult> {\r\n    const result: ValidationResult = {\r\n      isValid: true,\r\n      errors: [],\r\n      warnings: [],\r\n      fileInfo: {\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        extension: this.getFileExtension(file.name),\r\n        category\r\n      },\r\n      securityChecks: {\r\n        mimeTypeValid: false,\r\n        extensionValid: false,\r\n        sizeValid: false,\r\n        signatureValid: false,\r\n        nameValid: false\r\n      }\r\n    };\r\n\r\n    try {\r\n      // 1. Validar nombre del archivo\r\n      result.securityChecks.nameValid = this.validateFileName(file.name);\r\n      if (!result.securityChecks.nameValid) {\r\n        result.errors.push('Nombre de archivo contiene caracteres no permitidos');\r\n        result.isValid = false;\r\n      }\r\n\r\n      // Detectar categoría si no se especificó\r\n      if (!category) {\r\n        const detectedCategory = this.detectFileCategory(file.type, file.name);\r\n        if (detectedCategory) {\r\n          category = detectedCategory;\r\n          result.fileInfo.category = category;\r\n        }\r\n      }\r\n\r\n      // 3. Validar tipo MIME\r\n      result.securityChecks.mimeTypeValid = this.validateMimeType(file.type, category);\r\n      if (!result.securityChecks.mimeTypeValid) {\r\n        result.errors.push(`Tipo de archivo no permitido: ${file.type}`);\r\n        result.isValid = false;\r\n      }\r\n\r\n      // 4. Validar extensión\r\n      result.securityChecks.extensionValid = this.validateExtension(\r\n        result.fileInfo.extension, \r\n        category\r\n      );\r\n      if (!result.securityChecks.extensionValid) {\r\n        result.errors.push(`Extensión no permitida: ${result.fileInfo.extension}`);\r\n        result.isValid = false;\r\n      }\r\n\r\n      // 5. Validar tamaño\r\n      result.securityChecks.sizeValid = this.validateFileSize(file.size, category);\r\n      if (!result.securityChecks.sizeValid) {\r\n        const limit = category ? SIZE_LIMITS[category] : SIZE_LIMITS.default;\r\n        result.errors.push(`Archivo demasiado grande. Máximo: ${this.formatFileSize(limit)}`);\r\n        result.isValid = false;\r\n      }\r\n\r\n      // 6. Validar firma del archivo (magic numbers)\r\n      if (!(await this.validateFileContent(file))) {\r\n        result.errors.push('El contenido del archivo no coincide con su tipo declarado');\r\n        result.isValid = false;\r\n      }\r\n\r\n      // 7. Verificaciones adicionales de seguridad\r\n      await this.performSecurityChecks(file, result);\r\n\r\n      logger.info('📋 Validación de archivo completada', {\r\n        fileName: file.name,\r\n        isValid: result.isValid,\r\n        errors: result.errors.length,\r\n        warnings: result.warnings.length,\r\n        category\r\n      });\r\n\r\n    } catch (error) {\r\n      logger.error('❌ Error durante validación de archivo', { \r\n        fileName: file.name, \r\n        error \r\n      });\r\n      result.errors.push('Error interno durante la validación');\r\n      result.isValid = false;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Valida nombre del archivo\r\n   */\r\n  private static validateFileName(fileName: string): boolean {\r\n    // Verificar caracteres de control y caracteres peligrosos\r\n    // eslint-disable-next-line no-control-regex\r\n    const controlChars = /[\\u0000-\\u001f\\u007f-\\u009f]/g;\r\n    \r\n    // Caracteres prohibidos en nombres de archivo\r\n    const forbiddenChars = /[<>:\"/\\\\|?*]/;\r\n    \r\n    // Nombres reservados en Windows\r\n    const reservedNames = /^(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9])(\\.|$)/i;\r\n    \r\n    // Verificaciones\r\n    if (controlChars.test(fileName)) return false;\r\n    if (forbiddenChars.test(fileName)) return false;\r\n    if (reservedNames.test(fileName)) return false;\r\n    if (fileName.length > 255) return false;\r\n    if (fileName.startsWith('.') || fileName.endsWith('.')) return false;\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Obtiene la extensión del archivo\r\n   */\r\n  private static getFileExtension(fileName: string): string {\r\n    const lastDot = fileName.lastIndexOf('.');\r\n    return lastDot > 0 ? fileName.substring(lastDot).toLowerCase() : '';\r\n  }\r\n\r\n  /**\r\n   * Detecta la categoría del archivo\r\n   */\r\n  private static detectFileCategory(\r\n    mimeType: string, \r\n    fileName: string\r\n  ): keyof typeof ALLOWED_MIME_TYPES | undefined {\r\n    // Buscar por MIME type\r\n    for (const [category, types] of Object.entries(ALLOWED_MIME_TYPES)) {\r\n      if ((types as readonly string[]).includes(mimeType)) {\r\n        return category as keyof typeof ALLOWED_MIME_TYPES;\r\n      }\r\n    }\r\n\r\n    // Buscar por extensión como fallback\r\n    const extension = this.getFileExtension(fileName);\r\n    const categoryKey = Object.keys(ALLOWED_EXTENSIONS).find(cat => {\r\n      const category = cat as AllowedExtensionCategory;\r\n      return (ALLOWED_EXTENSIONS[category] as readonly string[]).includes(extension);\r\n    }) as AllowedExtensionCategory | undefined;\r\n  \r\n    return categoryKey;\r\n  }\r\n\r\n  /**\r\n   * Valida tipo MIME\r\n   */\r\n  private static validateMimeType(\r\n    mimeType: string, \r\n    category?: keyof typeof ALLOWED_MIME_TYPES\r\n  ): boolean {\r\n    if (!category) return false;\r\n    \r\n    const allowedTypes = ALLOWED_MIME_TYPES[category];\r\n    return (allowedTypes as readonly string[]).includes(mimeType);\r\n  }\r\n\r\n  /**\r\n   * Valida extensión del archivo\r\n   */\r\n  private static validateExtension(\r\n    extension: string, \r\n    category?: keyof typeof ALLOWED_MIME_TYPES\r\n  ): boolean {\r\n    if (!category || !extension) return false;\r\n    \r\n    const allowedExtensions = ALLOWED_EXTENSIONS[category];\r\n    return (allowedExtensions as readonly string[]).includes(extension);\r\n  }\r\n\r\n  /**\r\n   * Valida tamaño del archivo\r\n   */\r\n  private static validateFileSize(\r\n    size: number, \r\n    category?: keyof typeof ALLOWED_MIME_TYPES\r\n  ): boolean {\r\n    const limit = category ? SIZE_LIMITS[category] : SIZE_LIMITS.default;\r\n    return size <= limit;\r\n  }\r\n\r\n  /**\r\n   * Valida el contenido del archivo usando magic numbers\r\n   */\r\n  private static validateFileContent(file: File): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      const reader = new FileReader();\r\n      \r\n      reader.onload = (e) => {\r\n        const arrayBuffer = e.target?.result as ArrayBuffer;\r\n        if (!arrayBuffer) {\r\n          resolve(false);\r\n          return;\r\n        }\r\n        \r\n        const bytes = new Uint8Array(arrayBuffer.slice(0, 8));\r\n        const extension = this.getFileExtension(file.name);\r\n        \r\n        // Magic numbers para validación\r\n        const magicNumbers: Record<string, number[][]> = {\r\n          'jpg': [[0xFF, 0xD8, 0xFF]],\r\n          'jpeg': [[0xFF, 0xD8, 0xFF]],\r\n          'png': [[0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A]],\r\n          'gif': [[0x47, 0x49, 0x46, 0x38, 0x37, 0x61], [0x47, 0x49, 0x46, 0x38, 0x39, 0x61]],\r\n          'webp': [[0x52, 0x49, 0x46, 0x46]],\r\n          'pdf': [[0x25, 0x50, 0x44, 0x46]],\r\n          'mp4': [[0x00, 0x00, 0x00, 0x18, 0x66, 0x74, 0x79, 0x70], [0x00, 0x00, 0x00, 0x20, 0x66, 0x74, 0x79, 0x70]]\r\n        };\r\n        \r\n        const expectedSignatures = magicNumbers[extension];\r\n        if (!expectedSignatures) {\r\n          resolve(true); // Si no hay firma definida, aceptar\r\n          return;\r\n        }\r\n        \r\n        // Verificar si alguna firma coincide\r\n        const isValid = expectedSignatures.some(signature => \r\n          signature.every((byte, index) => bytes[index] === byte)\r\n        );\r\n        \r\n        resolve(isValid);\r\n      };\r\n      \r\n      reader.onerror = () => resolve(false);\r\n      reader.readAsArrayBuffer(file.slice(0, 8));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Verificaciones adicionales de seguridad\r\n   */\r\n  private static async performSecurityChecks(\r\n    file: File, \r\n    result: ValidationResult\r\n  ): Promise<void> {\r\n    // Verificar si el archivo está vacío\r\n    if (file.size === 0) {\r\n      result.warnings.push('El archivo está vacío');\r\n    }\r\n\r\n    // Verificar nombres sospechosos\r\n    const suspiciousPatterns = [\r\n      /\\.exe$/i, /\\.bat$/i, /\\.cmd$/i, /\\.scr$/i, \r\n      /\\.vbs$/i, /\\.js$/i, /\\.jar$/i, /\\.php$/i\r\n    ];\r\n    \r\n    if (suspiciousPatterns.some(pattern => pattern.test(file.name))) {\r\n      result.errors.push('Tipo de archivo potencialmente peligroso');\r\n      result.isValid = false;\r\n    }\r\n\r\n    // Para imágenes, verificar dimensiones básicas\r\n    if (result.fileInfo.category === 'images') {\r\n      try {\r\n        const dimensions = await this.getImageDimensions(file);\r\n        if (dimensions.width > 8000 || dimensions.height > 8000) {\r\n          result.warnings.push('Imagen muy grande, puede afectar el rendimiento');\r\n        }\r\n        if (dimensions.width < 50 || dimensions.height < 50) {\r\n          result.warnings.push('Imagen muy pequeña, puede no ser útil');\r\n        }\r\n      } catch {\r\n        result.warnings.push('No se pudieron verificar las dimensiones de la imagen');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtiene dimensiones de una imagen\r\n   */\r\n  private static async getImageDimensions(file: File): Promise<{width: number, height: number}> {\r\n    return new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      const url = URL.createObjectURL(file);\r\n      \r\n      img.onload = () => {\r\n        URL.revokeObjectURL(url);\r\n        resolve({ width: img.naturalWidth, height: img.naturalHeight });\r\n      };\r\n      \r\n      img.onerror = () => {\r\n        URL.revokeObjectURL(url);\r\n        reject(new Error('No se pudo cargar la imagen'));\r\n      };\r\n      \r\n      img.src = url;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Formatea el tamaño del archivo para mostrar\r\n   */\r\n  private static formatFileSize(bytes: number): string {\r\n    const units = ['B', 'KB', 'MB', 'GB'];\r\n    let size = bytes;\r\n    let unitIndex = 0;\r\n    \r\n    while (size >= 1024 && unitIndex < units.length - 1) {\r\n      size /= 1024;\r\n      unitIndex++;\r\n    }\r\n    \r\n    return `${size.toFixed(1)} ${units[unitIndex]}`;\r\n  }\r\n}\r\n\r\n// Hook para usar en componentes React\r\nexport const useFileValidator = () => {\r\n  const validateFile = async (\r\n    file: File, \r\n    category?: keyof typeof ALLOWED_MIME_TYPES\r\n  ) => {\r\n    return await FileValidator.validateFile(file, category);\r\n  };\r\n\r\n  const validateMultipleFiles = async (\r\n    files: FileList | File[], \r\n    category?: keyof typeof ALLOWED_MIME_TYPES\r\n  ) => {\r\n    const fileArray = Array.from(files);\r\n    const results = await Promise.all(\r\n      fileArray.map(file => FileValidator.validateFile(file, category))\r\n    );\r\n    \r\n    return {\r\n      results,\r\n      allValid: results.every(r => r.isValid),\r\n      totalErrors: results.reduce((sum, r) => sum + r.errors.length, 0),\r\n      totalWarnings: results.reduce((sum, r) => sum + r.warnings.length, 0)\r\n    };\r\n  };\r\n\r\n  return { validateFile, validateMultipleFiles };\r\n};\r\n\r\nexport { ALLOWED_MIME_TYPES, ALLOWED_EXTENSIONS, SIZE_LIMITS };\r\nexport default FileValidator;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\security\\rateLimiter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\sentry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\session-storage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\simpleChatService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\simpleMatches.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\storage-manager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\storage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\supabase-logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\tokenPremium.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\tokens.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\validations\\moderator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\visual-validation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\zod-schemas-extended.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\lib\\zod-schemas.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\About.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Admin.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\AdminCareerApplications.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\AdminDashboard.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'user' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":62,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":62,"endColumn":15},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'filterType' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":83,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":83,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setFilterType' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":83,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":83,"endColumn":35},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'messagesError' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":133,"column":42,"nodeType":null,"messageId":"unusedVar","endLine":133,"endColumn":55},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'reportsError' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":140,"column":41,"nodeType":null,"messageId":"unusedVar","endLine":140,"endColumn":53},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'moderatorsError' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":148,"column":44,"nodeType":null,"messageId":"unusedVar","endLine":148,"endColumn":59},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'careerError' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":156,"column":40,"nodeType":null,"messageId":"unusedVar","endLine":156,"endColumn":51},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'moderatorRequestsError' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":163,"column":51,"nodeType":null,"messageId":"unusedVar","endLine":163,"endColumn":73}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { \r\n  Users, \r\n  Heart, \r\n  MessageSquare, \r\n  TrendingUp, \r\n  Shield, \r\n  AlertTriangle,\r\n  Download,\r\n  BarChart3,\r\n  Activity,\r\n  UserCheck,\r\n  Mail,\r\n  Settings,\r\n  RefreshCw,\r\n  ArrowLeft\r\n} from 'lucide-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { logger } from '@/lib/logger';\r\n\r\ninterface DashboardStats {\r\n  totalUsers: number;\r\n  activeUsers: number;\r\n  totalMatches: number;\r\n  totalMessages: number;\r\n  reportsCount: number;\r\n  moderatorsCount: number;\r\n  newUsersToday: number;\r\n  matchesToday: number;\r\n  careerApplications: number;\r\n  moderatorRequests: number;\r\n}\r\n\r\ninterface UserActivity {\r\n  id: string;\r\n  email: string;\r\n  full_name?: string;\r\n  last_sign_in_at?: string;\r\n  created_at: string;\r\n  is_active: boolean;\r\n}\r\n\r\ninterface SystemReport {\r\n  id: string;\r\n  type: string;\r\n  message: string;\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  created_at: string;\r\n  resolved: boolean;\r\n}\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const { user, isAdmin } = useAuth();\r\n  const { toast } = useToast();\r\n  \r\n  const [stats, setStats] = useState<DashboardStats>({\r\n    totalUsers: 0,\r\n    activeUsers: 0,\r\n    totalMatches: 0,\r\n    totalMessages: 0,\r\n    reportsCount: 0,\r\n    moderatorsCount: 0,\r\n    newUsersToday: 0,\r\n    matchesToday: 0,\r\n    careerApplications: 0,\r\n    moderatorRequests: 0\r\n  });\r\n  \r\n  const [userActivity, setUserActivity] = useState<UserActivity[]>([]);\r\n  const [systemReports, setSystemReports] = useState<SystemReport[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [dateRange, setDateRange] = useState('7d');\r\n  const [filterType, setFilterType] = useState('all');\r\n\r\n  // Verificar permisos de admin\r\n  useEffect(() => {\r\n    if (!isAdmin()) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n  }, [isAdmin, navigate]);\r\n\r\n  // Cargar datos del dashboard\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setRefreshing(true);\r\n      \r\n      // Obtener estadísticas de usuarios\r\n      const { data: usersData, error: usersError } = await supabase\r\n        .from('profiles')\r\n        .select('id, created_at, updated_at')\r\n        .order('created_at', { ascending: false }) as { data: any[] | null, error: any };\r\n\r\n      if (usersError) throw usersError;\r\n\r\n      // Calcular estadísticas\r\n      const now = new Date();\r\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n\r\n      const totalUsers = usersData?.length || 0;\r\n      const newUsersToday = usersData?.filter((u: any) => \r\n        new Date(u.created_at) >= today\r\n      ).length || 0;\r\n      \r\n      const activeUsers = usersData?.filter((u: any) => \r\n        u.updated_at && new Date(u.updated_at) >= weekAgo\r\n      ).length || 0;\r\n\r\n      // Obtener estadísticas de matches\r\n      const { data: matchesData, error: matchesError } = await supabase\r\n        .from('matches')\r\n        .select('id, created_at') as { data: any[] | null, error: any };\r\n\r\n      if (matchesError) throw matchesError;\r\n\r\n      const totalMatches = matchesData?.length || 0;\r\n      const matchesToday = matchesData?.filter(m => \r\n        new Date(m.created_at) >= today\r\n      ).length || 0;\r\n\r\n      // Obtener estadísticas de mensajes\r\n      const { data: messagesData, error: messagesError } = await supabase\r\n        .from('messages')\r\n        .select('id');\r\n\r\n      const totalMessages = messagesData?.length || 0;\r\n\r\n      // Obtener reportes\r\n      const { data: reportsData, error: reportsError } = await supabase\r\n        .from('reports')\r\n        .select('id')\r\n        .eq('resolved', false);\r\n\r\n      const reportsCount = reportsData?.length || 0;\r\n\r\n      // Obtener moderadores\r\n      const { data: moderatorsData, error: moderatorsError } = await supabase\r\n        .from('user_roles')\r\n        .select('id')\r\n        .eq('role', 'moderator');\r\n\r\n      const moderatorsCount = moderatorsData?.length || 0;\r\n\r\n      // Obtener solicitudes de carrera\r\n      const { data: careerData, error: careerError } = await (supabase as any)\r\n        .from('career_applications')\r\n        .select('id');\r\n\r\n      const careerApplications = careerData?.length || 0;\r\n\r\n      // Obtener solicitudes de moderadores\r\n      const { data: moderatorRequestsData, error: moderatorRequestsError } = await (supabase as any)\r\n        .from('moderator_requests')\r\n        .select('id');\r\n\r\n      const moderatorRequests = moderatorRequestsData?.length || 0;\r\n\r\n      setStats({\r\n        totalUsers,\r\n        activeUsers,\r\n        totalMatches,\r\n        totalMessages,\r\n        reportsCount,\r\n        moderatorsCount,\r\n        newUsersToday,\r\n        matchesToday,\r\n        careerApplications,\r\n        moderatorRequests\r\n      });\r\n\r\n      // Cargar actividad de usuarios recientes\r\n      const { data: recentUsers, error: recentUsersError } = await supabase\r\n        .from('profiles')\r\n        .select('id, email, full_name, created_at, updated_at')\r\n        .order('updated_at', { ascending: false })\r\n        .limit(10);\r\n\r\n      if (!recentUsersError && recentUsers) {\r\n        setUserActivity(recentUsers.map((u: any) => ({\r\n          id: u.id,\r\n          email: u.email || '',\r\n          full_name: u.full_name,\r\n          last_sign_in_at: u.updated_at,\r\n          created_at: u.created_at,\r\n          is_active: u.updated_at ? new Date(u.updated_at) >= weekAgo : false\r\n        })));\r\n      }\r\n\r\n      // Generar reportes del sistema simulados\r\n      setSystemReports([\r\n        {\r\n          id: '1',\r\n          type: 'security',\r\n          message: 'Múltiples intentos de login fallidos detectados',\r\n          severity: 'medium',\r\n          created_at: new Date().toISOString(),\r\n          resolved: false\r\n        },\r\n        {\r\n          id: '2',\r\n          type: 'performance',\r\n          message: 'Tiempo de respuesta de la base de datos elevado',\r\n          severity: 'low',\r\n          created_at: new Date(Date.now() - 3600000).toISOString(),\r\n          resolved: false\r\n        },\r\n        {\r\n          id: '3',\r\n          type: 'content',\r\n          message: 'Contenido inapropiado reportado por usuarios',\r\n          severity: 'high',\r\n          created_at: new Date(Date.now() - 7200000).toISOString(),\r\n          resolved: false\r\n        }\r\n      ]);\r\n\r\n    } catch (error) {\r\n      logger.error('Error loading dashboard data:', { error: error instanceof Error ? error.message : String(error) });\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"No se pudieron cargar los datos del dashboard\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, [dateRange]);\r\n\r\n  const exportData = async (type: string) => {\r\n    try {\r\n      let data: any[] = [];\r\n      let filename = '';\r\n\r\n      switch (type) {\r\n        case 'users': {\r\n          const { data: usersData } = await supabase\r\n            .from('profiles')\r\n            .select('*');\r\n          data = usersData || [];\r\n          filename = 'usuarios_export.json';\r\n          break;\r\n        }\r\n        case 'matches': {\r\n          const { data: matchesData } = await supabase\r\n            .from('matches')\r\n            .select('*');\r\n          data = matchesData || [];\r\n          filename = 'matches_export.json';\r\n          break;\r\n        }\r\n        case 'reports': {\r\n          data = systemReports;\r\n          filename = 'reportes_export.json';\r\n          break;\r\n        }\r\n      }\r\n\r\n      const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = filename;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n\r\n      toast({\r\n        title: \"Éxito\",\r\n        description: `Datos exportados como ${filename}`,\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error exporting data:', { error: error instanceof Error ? error.message : String(error) });\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"No se pudieron exportar los datos\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const resolveReport = async (reportId: string) => {\r\n    setSystemReports(prev => \r\n      prev.map(report => \r\n        report.id === reportId \r\n          ? { ...report, resolved: true }\r\n          : report\r\n      )\r\n    );\r\n    \r\n    toast({\r\n      title: \"Éxito\",\r\n      description: \"Reporte marcado como resuelto\",\r\n    });\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'critical': return 'bg-red-500';\r\n      case 'high': return 'bg-orange-500';\r\n      case 'medium': return 'bg-yellow-500';\r\n      case 'low': return 'bg-blue-500';\r\n      default: return 'bg-gray-500';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('es-MX', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 flex items-center justify-center\">\r\n        <div className=\"text-white text-xl\">Cargando dashboard...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 relative overflow-hidden\">\r\n      {/* Animated Background Elements */}\r\n      <div className=\"absolute inset-0\">\r\n        <div className=\"absolute top-20 left-10 w-72 h-72 bg-pink-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\r\n        <div className=\"absolute top-40 right-10 w-72 h-72 bg-purple-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\r\n        <div className=\"absolute -bottom-8 left-20 w-72 h-72 bg-red-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"relative z-10 min-h-screen\">\r\n        {/* Header */}\r\n        <div className=\"bg-black/30 backdrop-blur-sm border-b border-white/10 p-3 sm:p-4\">\r\n          <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between max-w-7xl mx-auto gap-3 sm:gap-0\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <Button \r\n                onClick={() => navigate(-1)}\r\n                className=\"text-white hover:bg-white/10 transition-all duration-300 hover:scale-105 bg-transparent\"\r\n              >\r\n                <ArrowLeft className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2\" />\r\n                Volver\r\n              </Button>\r\n              <h1 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-white flex items-center gap-2\">\r\n                <BarChart3 className=\"h-5 w-5 sm:h-6 sm:w-6\" />\r\n                Dashboard Administrativo v3.2\r\n              </h1>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                onClick={() => loadDashboardData()}\r\n                disabled={refreshing}\r\n                className=\"bg-white/10 border border-white/20 text-white hover:bg-white/20 text-sm px-3 py-1.5\"\r\n              >\r\n                <RefreshCw className={`h-4 w-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\r\n                Actualizar\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"max-w-7xl mx-auto p-3 sm:p-6 space-y-6\">\r\n          {/* Stats Cards */}\r\n          <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-6\">\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n              <CardContent className=\"p-4 sm:p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-white/80 text-xs sm:text-sm\">Total Usuarios</p>\r\n                    <p className=\"text-xl sm:text-2xl font-bold text-white\">{stats.totalUsers}</p>\r\n                    <p className=\"text-green-400 text-xs\">+{stats.newUsersToday} hoy</p>\r\n                  </div>\r\n                  <Users className=\"h-6 w-6 sm:h-8 sm:w-8 text-blue-400\" />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n              <CardContent className=\"p-4 sm:p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-white/80 text-xs sm:text-sm\">Usuarios Activos</p>\r\n                    <p className=\"text-xl sm:text-2xl font-bold text-white\">{stats.activeUsers}</p>\r\n                    <p className=\"text-blue-400 text-xs\">Última semana</p>\r\n                  </div>\r\n                  <UserCheck className=\"h-6 w-6 sm:h-8 sm:w-8 text-green-400\" />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n              <CardContent className=\"p-4 sm:p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-white/80 text-xs sm:text-sm\">Total Matches</p>\r\n                    <p className=\"text-xl sm:text-2xl font-bold text-white\">{stats.totalMatches}</p>\r\n                    <p className=\"text-pink-400 text-xs\">+{stats.matchesToday} hoy</p>\r\n                  </div>\r\n                  <Heart className=\"h-6 w-6 sm:h-8 sm:w-8 text-pink-400\" />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n              <CardContent className=\"p-4 sm:p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-white/80 text-xs sm:text-sm\">Mensajes</p>\r\n                    <p className=\"text-xl sm:text-2xl font-bold text-white\">{stats.totalMessages}</p>\r\n                    <p className=\"text-blue-400 text-xs\">Total enviados</p>\r\n                  </div>\r\n                  <MessageSquare className=\"h-6 w-6 sm:h-8 sm:w-8 text-blue-400\" />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n              <CardContent className=\"p-4 sm:p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-white/80 text-xs sm:text-sm\">Solicitudes Carrera</p>\r\n                    <p className=\"text-xl sm:text-2xl font-bold text-white\">{stats.careerApplications}</p>\r\n                    <p className=\"text-orange-400 text-xs\">Pendientes revisión</p>\r\n                  </div>\r\n                  <Mail className=\"h-6 w-6 sm:h-8 sm:w-8 text-orange-400\" />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n              <CardContent className=\"p-4 sm:p-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-white/80 text-xs sm:text-sm\">Solicitudes Moderador</p>\r\n                    <p className=\"text-xl sm:text-2xl font-bold text-white\">{stats.moderatorRequests}</p>\r\n                    <p className=\"text-purple-400 text-xs\">En evaluación</p>\r\n                  </div>\r\n                  <Shield className=\"h-6 w-6 sm:h-8 sm:w-8 text-purple-400\" />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Tabs Content */}\r\n          <Tabs defaultValue=\"overview\" className=\"space-y-4\">\r\n            <TabsList className=\"grid w-full grid-cols-2 sm:grid-cols-4 bg-white/10 backdrop-blur-md border-white/20\">\r\n              <TabsTrigger value=\"overview\" className=\"text-white data-[state=active]:bg-white/20\">\r\n                <BarChart3 className=\"h-4 w-4 mr-2\" />\r\n                <span className=\"hidden sm:inline\">Resumen</span>\r\n              </TabsTrigger>\r\n              <TabsTrigger value=\"users\" className=\"text-white data-[state=active]:bg-white/20\">\r\n                <Users className=\"h-4 w-4 mr-2\" />\r\n                <span className=\"hidden sm:inline\">Usuarios</span>\r\n              </TabsTrigger>\r\n              <TabsTrigger value=\"reports\" className=\"text-white data-[state=active]:bg-white/20\">\r\n                <AlertTriangle className=\"h-4 w-4 mr-2\" />\r\n                <span className=\"hidden sm:inline\">Reportes</span>\r\n              </TabsTrigger>\r\n              <TabsTrigger value=\"system\" className=\"text-white data-[state=active]:bg-white/20\">\r\n                <Activity className=\"h-4 w-4 mr-2\" />\r\n                <span className=\"hidden sm:inline\">Sistema</span>\r\n              </TabsTrigger>\r\n            </TabsList>\r\n\r\n            {/* Overview Tab */}\r\n            <TabsContent value=\"overview\" className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-white flex items-center gap-2\">\r\n                      <TrendingUp className=\"h-5 w-5\" />\r\n                      Estadísticas Generales\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-white/80\">Reportes Pendientes</span>\r\n                      <Badge className=\"bg-red-500 text-white\">{stats.reportsCount}</Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-white/80\">Moderadores Activos</span>\r\n                      <Badge className=\"bg-green-500 text-white\">{stats.moderatorsCount}</Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-white/80\">Tasa de Conversión</span>\r\n                      <Badge className=\"bg-blue-500\">\r\n                        {stats.totalUsers > 0 ? ((stats.totalMatches / stats.totalUsers) * 100).toFixed(1) : 0}%\r\n                      </Badge>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-white flex items-center gap-2\">\r\n                      <Download className=\"h-5 w-5\" />\r\n                      Exportar Datos\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <Button\r\n                      onClick={() => exportData('users')}\r\n                      className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\"\r\n                    >\r\n                      <Users className=\"h-4 w-4 mr-2\" />\r\n                      Exportar Usuarios\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => exportData('matches')}\r\n                      className=\"w-full bg-pink-600 hover:bg-pink-700 text-white\"\r\n                    >\r\n                      <Heart className=\"h-4 w-4 mr-2\" />\r\n                      Exportar Matches\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => exportData('reports')}\r\n                      className=\"w-full bg-orange-600 hover:bg-orange-700 text-white\"\r\n                    >\r\n                      <AlertTriangle className=\"h-4 w-4 mr-2\" />\r\n                      Exportar Reportes\r\n                    </Button>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </TabsContent>\r\n\r\n            {/* Users Tab */}\r\n            <TabsContent value=\"users\" className=\"space-y-4\">\r\n              <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n                <CardHeader>\r\n                  <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3\">\r\n                    <CardTitle className=\"text-white flex items-center gap-2\">\r\n                      <Users className=\"h-5 w-5\" />\r\n                      Actividad de Usuarios Recientes\r\n                    </CardTitle>\r\n                    <div className=\"flex gap-2\">\r\n                      <Select value={dateRange} onValueChange={setDateRange}>\r\n                        <SelectTrigger className=\"w-32 bg-white/10 border-white/20 text-white\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"1d\">Hoy</SelectItem>\r\n                          <SelectItem value=\"7d\">7 días</SelectItem>\r\n                          <SelectItem value=\"30d\">30 días</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-3\">\r\n                    {userActivity.map((user) => (\r\n                      <div key={user.id} className=\"flex items-center justify-between p-3 bg-white/5 rounded-lg\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          <div className={`w-3 h-3 rounded-full ${user.is_active ? 'bg-green-400' : 'bg-gray-400'}`} />\r\n                          <div>\r\n                            <p className=\"text-white font-medium\">{user.full_name || user.email}</p>\r\n                            <p className=\"text-white/60 text-sm\">\r\n                              Último acceso: {user.last_sign_in_at ? formatDate(user.last_sign_in_at) : 'Nunca'}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <Badge className={user.is_active ? \"bg-green-100 text-green-800\" : \"bg-gray-100 text-gray-800\"}>\r\n                          {user.is_active ? 'Activo' : 'Inactivo'}\r\n                        </Badge>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n\r\n            {/* Reports Tab */}\r\n            <TabsContent value=\"reports\" className=\"space-y-4\">\r\n              <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-white flex items-center gap-2\">\r\n                    <AlertTriangle className=\"h-5 w-5\" />\r\n                    Reportes del Sistema\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-3\">\r\n                    {systemReports.filter(report => !report.resolved).map((report) => (\r\n                      <div key={report.id} className=\"flex items-center justify-between p-4 bg-white/5 rounded-lg border border-white/10\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          <div className={`w-3 h-3 rounded-full ${getSeverityColor(report.severity)}`} />\r\n                          <div>\r\n                            <p className=\"text-white font-medium\">{report.message}</p>\r\n                            <p className=\"text-white/60 text-sm\">\r\n                              {formatDate(report.created_at)} • {report.type}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Badge className={getSeverityColor(report.severity)}>\r\n                            {report.severity}\r\n                          </Badge>\r\n                          <Button\r\n                            onClick={() => resolveReport(report.id)}\r\n                            className=\"bg-green-600 hover:bg-green-700 text-white px-3 py-1 text-sm\"\r\n                          >\r\n                            Resolver\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n\r\n            {/* System Tab */}\r\n            <TabsContent value=\"system\" className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\r\n                <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-white flex items-center gap-2\">\r\n                      <Activity className=\"h-5 w-5\" />\r\n                      Estado del Sistema\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-white/80\">Base de Datos</span>\r\n                      <Badge className=\"bg-green-500\">Operativo</Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-white/80\">API</span>\r\n                      <Badge className=\"bg-green-500\">Operativo</Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-white/80\">Notificaciones</span>\r\n                      <Badge className=\"bg-green-500\">Operativo</Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-white/80\">Almacenamiento</span>\r\n                      <Badge className=\"bg-yellow-500\">Advertencia</Badge>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-white flex items-center gap-2\">\r\n                      <Settings className=\"h-5 w-5\" />\r\n                      Acciones Rápidas\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-3\">\r\n                    <Button\r\n                      onClick={() => navigate('/admin/moderators')}\r\n                      className=\"w-full bg-purple-600 hover:bg-purple-700 text-white\"\r\n                    >\r\n                      <Shield className=\"h-4 w-4 mr-2\" />\r\n                      Gestionar Moderadores\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => navigate('/admin/career-applications')}\r\n                      className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\"\r\n                    >\r\n                      <Users className=\"h-4 w-4 mr-2\" />\r\n                      Solicitudes de Carrera\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => loadDashboardData()}\r\n                      className=\"w-full bg-gray-600 hover:bg-gray-700 text-white\"\r\n                    >\r\n                      <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                      Actualizar Datos\r\n                    </Button>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\AdminModerators.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'selectedModerator' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":54,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":54,"endColumn":27},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setSelectedModerator' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":54,"column":29,"nodeType":null,"messageId":"unusedVar","endLine":54,"endColumn":49},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'selectedRequest' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":55,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":55,"endColumn":25},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'statusColors' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":57,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":57,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from \"react\";\r\nimport { ArrowLeft, UserPlus, Shield, Eye, Ban, CheckCircle, XCircle, Mail, Calendar, Activity } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { logger } from \"@/lib/logger\";\r\nimport { MODERATOR_STATUS, type ModeratorStatus } from \"@/lib/roles\";\r\n\r\ninterface Moderator {\r\n  id: string;\r\n  user_id?: string;\r\n  email: string;\r\n  full_name?: string;\r\n  status: ModeratorStatus;\r\n  created_at: string;\r\n  activated_at?: string;\r\n  reports_handled: number;\r\n  suspensions_applied: number;\r\n  last_activity?: string;\r\n}\r\n\r\ninterface ModeratorRequest {\r\n  id: string;\r\n  full_name: string;\r\n  email: string;\r\n  motivation: string;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  created_at: string;\r\n  reviewed_at?: string;\r\n  rejection_reason?: string;\r\n}\r\n\r\nconst AdminModerators = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  \r\n  const [moderators, setModerators] = useState<Moderator[]>([]);\r\n  const [requests, setRequests] = useState<ModeratorRequest[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState(\"moderators\");\r\n  \r\n  // Formulario para crear moderador\r\n  const [newModeratorEmail, setNewModeratorEmail] = useState(\"\");\r\n  const [newModeratorName, setNewModeratorName] = useState(\"\");\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  \r\n  // Modal de detalles\r\n  const [selectedModerator, setSelectedModerator] = useState<Moderator | null>(null);\r\n  const [selectedRequest, setSelectedRequest] = useState<ModeratorRequest | null>(null);\r\n\r\n  const statusColors = {\r\n    pending: 'bg-yellow-500',\r\n    active: 'bg-green-500',\r\n    suspended: 'bg-red-500',\r\n    inactive: 'bg-gray-500'\r\n  };\r\n\r\n  const statusLabels = {\r\n    pending: 'Pendiente',\r\n    active: 'Activo',\r\n    suspended: 'Suspendido',\r\n    inactive: 'Inactivo'\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await Promise.all([fetchModerators(), fetchRequests()]);\r\n    } catch (error) {\r\n      logger.error('❌ Error al cargar datos:', { error });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchModerators = async () => {\r\n    try {\r\n      const { data, error } = await (supabase as any)\r\n        .from('moderators')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      setModerators(data || []);\r\n      logger.info('✅ Moderadores cargados:', { count: data?.length || 0 });\r\n    } catch (error: any) {\r\n      logger.error('❌ Error al cargar moderadores:', { error: error.message });\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Error al cargar moderadores\",\r\n        description: error.message\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchRequests = async () => {\r\n    try {\r\n      const { data, error } = await (supabase as any)\r\n        .from('moderator_requests')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (error) throw error;\r\n      setRequests(data || []);\r\n      logger.info('✅ Solicitudes cargadas:', { count: data?.length || 0 });\r\n    } catch (error: any) {\r\n      logger.error('❌ Error al cargar solicitudes:', { error: error.message });\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Error al cargar solicitudes\",\r\n        description: error.message\r\n      });\r\n    }\r\n  };\r\n\r\n  const createModerator = async () => {\r\n    if (!newModeratorEmail || !newModeratorName) {\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Campos requeridos\",\r\n        description: \"Por favor completa email y nombre\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsCreating(true);\r\n      logger.info('👑 Creando nuevo moderador:', { email: newModeratorEmail, name: newModeratorName });\r\n\r\n      // Generar token de activación\r\n      const activationToken = crypto.randomUUID();\r\n      const expiresAt = new Date();\r\n      expiresAt.setHours(expiresAt.getHours() + 24); // 24 horas\r\n\r\n      const { data, error } = await (supabase as any)\r\n        .from('moderators')\r\n        .insert([{\r\n          email: newModeratorEmail.trim().toLowerCase(),\r\n          full_name: newModeratorName.trim(),\r\n          status: 'pending',\r\n          activation_token: activationToken,\r\n          activation_expires_at: expiresAt.toISOString(),\r\n          created_by: (await supabase.auth.getUser()).data.user?.id\r\n        }])\r\n        .select();\r\n\r\n      if (error) throw error;\r\n\r\n      toast({\r\n        title: \"Moderador creado exitosamente\",\r\n        description: `Se ha enviado un enlace de activación a ${newModeratorEmail}`,\r\n        duration: 5000\r\n      });\r\n\r\n      // Limpiar formulario\r\n      setNewModeratorEmail(\"\");\r\n      setNewModeratorName(\"\");\r\n      \r\n      // Recargar lista\r\n      await fetchModerators();\r\n      \r\n      logger.info('✅ Moderador creado exitosamente:', { id: data[0].id });\r\n\r\n    } catch (error: any) {\r\n      logger.error('❌ Error al crear moderador:', { error: error.message });\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Error al crear moderador\",\r\n        description: error.message\r\n      });\r\n    } finally {\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const updateModeratorStatus = async (moderatorId: string, newStatus: ModeratorStatus) => {\r\n    try {\r\n      logger.info('🔄 Actualizando status de moderador:', { moderatorId, newStatus });\r\n\r\n      const { error } = await (supabase as any)\r\n        .from('moderators')\r\n        .update({ status: newStatus })\r\n        .eq('id', moderatorId);\r\n\r\n      if (error) throw error;\r\n\r\n      // Actualizar estado local\r\n      setModerators(prev => \r\n        prev.map(mod => \r\n          mod.id === moderatorId ? { ...mod, status: newStatus } : mod\r\n        )\r\n      );\r\n\r\n      toast({\r\n        title: \"Status actualizado\",\r\n        description: `Moderador marcado como ${statusLabels[newStatus]}`\r\n      });\r\n\r\n      logger.info('✅ Status actualizado exitosamente');\r\n\r\n    } catch (error: any) {\r\n      logger.error('❌ Error al actualizar status:', { error: error.message });\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Error al actualizar\",\r\n        description: error.message\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRequest = async (requestId: string, action: 'approved' | 'rejected', reason?: string) => {\r\n    try {\r\n      logger.info('📋 Procesando solicitud:', { requestId, action, reason });\r\n\r\n      const { error } = await (supabase as any)\r\n        .from('moderator_requests')\r\n        .update({\r\n          status: action,\r\n          reviewed_by: (await supabase.auth.getUser()).data.user?.id,\r\n          reviewed_at: new Date().toISOString(),\r\n          rejection_reason: reason || null\r\n        })\r\n        .eq('id', requestId);\r\n\r\n      if (error) throw error;\r\n\r\n      // Si se aprueba, crear el moderador\r\n      if (action === 'approved') {\r\n        const request = requests.find(r => r.id === requestId);\r\n        if (request) {\r\n          const activationToken = crypto.randomUUID();\r\n          const expiresAt = new Date();\r\n          expiresAt.setHours(expiresAt.getHours() + 24);\r\n\r\n          await (supabase as any)\r\n            .from('moderators')\r\n            .insert([{\r\n              email: request.email,\r\n              full_name: request.full_name,\r\n              status: 'pending',\r\n              activation_token: activationToken,\r\n              activation_expires_at: expiresAt.toISOString(),\r\n              created_by: (await supabase.auth.getUser()).data.user?.id\r\n            }]);\r\n        }\r\n      }\r\n\r\n      toast({\r\n        title: `Solicitud ${action === 'approved' ? 'aprobada' : 'rechazada'}`,\r\n        description: action === 'approved' \r\n          ? \"Se ha creado el moderador y enviado enlace de activación\"\r\n          : \"La solicitud ha sido rechazada\"\r\n      });\r\n\r\n      // Recargar datos\r\n      await fetchData();\r\n      setSelectedRequest(null);\r\n\r\n      logger.info('✅ Solicitud procesada exitosamente');\r\n\r\n    } catch (error: any) {\r\n      logger.error('❌ Error al procesar solicitud:', { error: error.message });\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Error al procesar solicitud\",\r\n        description: error.message\r\n      });\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('es-ES', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 flex items-center justify-center\">\r\n        <div className=\"text-white text-xl\">Cargando sistema de moderadores...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 relative overflow-hidden\">\r\n      {/* Animated Background Elements */}\r\n      <div className=\"absolute inset-0\">\r\n        <div className=\"absolute top-20 left-10 w-72 h-72 bg-pink-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\r\n        <div className=\"absolute top-40 right-10 w-72 h-72 bg-purple-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\r\n        <div className=\"absolute -bottom-8 left-20 w-72 h-72 bg-red-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"relative z-10 min-h-screen\">\r\n        {/* Header */}\r\n        <div className=\"bg-black/30 backdrop-blur-sm border-b border-white/10 p-3 sm:p-4\">\r\n          <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between max-w-7xl mx-auto gap-3 sm:gap-0\">\r\n            <Button \r\n              variant=\"ghost\" \r\n              onClick={() => navigate(-1)}\r\n              className=\"text-white hover:bg-white/10 transition-all duration-300 hover:scale-105 text-sm sm:text-base\"\r\n            >\r\n              <ArrowLeft className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2\" />\r\n              Volver\r\n            </Button>\r\n            <h1 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-white flex items-center gap-2 text-center sm:text-left\">\r\n              <Shield className=\"h-5 w-5 sm:h-6 sm:w-6\" />\r\n              <span className=\"hidden sm:inline\">Panel de Administración - </span>Moderadores\r\n            </h1>\r\n            <div className=\"flex items-center gap-2 text-white\">\r\n              <Badge variant=\"secondary\" className=\"bg-white/20 text-white text-xs sm:text-sm\">\r\n                {moderators.length} Moderadores\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"max-w-7xl mx-auto p-3 sm:p-6\">\r\n          <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4 sm:space-y-6\">\r\n            <TabsList className=\"grid w-full grid-cols-1 sm:grid-cols-3 bg-white/10 backdrop-blur-md border-white/20 gap-1 sm:gap-0\">\r\n              <TabsTrigger value=\"moderators\" className=\"text-white data-[state=active]:bg-white/20 text-xs sm:text-sm\">\r\n                <Shield className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2\" />\r\n                <span className=\"hidden sm:inline\">Moderadores </span>Activos\r\n              </TabsTrigger>\r\n              <TabsTrigger value=\"requests\" className=\"text-white data-[state=active]:bg-white/20 text-xs sm:text-sm\">\r\n                <UserPlus className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2\" />\r\n                Solicitudes ({requests.filter(r => r.status === 'pending').length})\r\n              </TabsTrigger>\r\n              <TabsTrigger value=\"create\" className=\"text-white data-[state=active]:bg-white/20 text-xs sm:text-sm\">\r\n                <UserPlus className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2\" />\r\n                Crear\r\n              </TabsTrigger>\r\n            </TabsList>\r\n\r\n            {/* Tab: Moderadores Activos */}\r\n            <TabsContent value=\"moderators\" className=\"space-y-3 sm:space-y-4\">\r\n              {moderators.length === 0 ? (\r\n                <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n                  <CardContent className=\"p-6 sm:p-8 text-center\">\r\n                    <Shield className=\"h-8 w-8 sm:h-12 sm:w-12 text-white/50 mx-auto mb-4\" />\r\n                    <p className=\"text-white/80 text-sm sm:text-base\">No hay moderadores registrados</p>\r\n                  </CardContent>\r\n                </Card>\r\n              ) : (\r\n                moderators.map((moderator) => (\r\n                  <Card key={moderator.id} className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg hover:bg-white/15 transition-all duration-300\">\r\n                    <CardContent className=\"p-4 sm:p-6\">\r\n                      <div className=\"flex flex-col sm:flex-row justify-between items-start gap-3 sm:gap-0\">\r\n                        <div className=\"flex-1 w-full\">\r\n                          <div className=\"flex flex-col sm:flex-row sm:items-center gap-2 sm:gap-3 mb-3\">\r\n                            <h3 className=\"text-lg sm:text-xl font-bold text-white break-words\">{moderator.full_name || moderator.email}</h3>\r\n                            <Badge className={`${\r\n                              moderator.status === MODERATOR_STATUS.ACTIVE ? 'bg-green-500' :\r\n                              moderator.status === MODERATOR_STATUS.INACTIVE ? 'bg-yellow-500' :\r\n                              'bg-red-500'\r\n                            } text-white text-xs w-fit`}>\r\n                              {moderator.status}\r\n                            </Badge>\r\n                          </div>\r\n                          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-4 text-white/80 text-sm sm:text-base\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Mail className=\"h-3 w-3 sm:h-4 sm:w-4 flex-shrink-0\" />\r\n                              <span className=\"break-all\">{moderator.email}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Calendar className=\"h-3 w-3 sm:h-4 sm:w-4 flex-shrink-0\" />\r\n                              <span>Creado: {formatDate(moderator.created_at)}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Activity className=\"h-3 w-3 sm:h-4 sm:w-4 flex-shrink-0\" />\r\n                              <span>Reportes: {moderator.reports_handled}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Ban className=\"h-3 w-3 sm:h-4 sm:w-4 flex-shrink-0\" />\r\n                              <span>Suspensiones: {moderator.suspensions_applied}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex gap-2 w-full sm:w-auto sm:ml-4\">\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline\"\r\n                            onClick={() => updateModeratorStatus(moderator.id, moderator.status === MODERATOR_STATUS.ACTIVE ? MODERATOR_STATUS.INACTIVE : MODERATOR_STATUS.ACTIVE)}\r\n                            className=\"bg-white/10 border-white/20 text-white hover:bg-white/20 flex-1 sm:flex-none\"\r\n                          >\r\n                            {moderator.status === MODERATOR_STATUS.ACTIVE ? (\r\n                              <><Ban className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-0\" /><span className=\"sm:hidden\">Desactivar</span></>\r\n                            ) : (\r\n                              <><CheckCircle className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-0\" /><span className=\"sm:hidden\">Activar</span></>\r\n                            )}\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))\r\n              )}\r\n            </TabsContent>\r\n\r\n            {/* Tab: Solicitudes Pendientes */}\r\n            <TabsContent value=\"requests\" className=\"space-y-3 sm:space-y-4\">\r\n              {requests.filter(r => r.status === 'pending').length === 0 ? (\r\n                <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n                  <CardContent className=\"p-6 sm:p-8 text-center\">\r\n                    <UserPlus className=\"h-8 w-8 sm:h-12 sm:w-12 text-white/50 mx-auto mb-4\" />\r\n                    <p className=\"text-white/80 text-sm sm:text-base\">No hay solicitudes pendientes</p>\r\n                  </CardContent>\r\n                </Card>\r\n              ) : (\r\n                requests.filter(r => r.status === 'pending').map((request) => (\r\n                  <Card key={request.id} className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-lg hover:bg-white/15 transition-all duration-300\">\r\n                    <CardContent className=\"p-4 sm:p-6\">\r\n                      <div className=\"flex flex-col sm:flex-row justify-between items-start gap-3 sm:gap-0\">\r\n                        <div className=\"flex-1 w-full\">\r\n                          <h3 className=\"text-lg sm:text-xl font-bold text-white mb-2 break-words\">{request.full_name}</h3>\r\n                          <div className=\"text-white/80 text-sm sm:text-base space-y-1\">\r\n                            <p><strong>Email:</strong> <span className=\"break-all\">{request.email}</span></p>\r\n                            <p><strong>Fecha:</strong> {formatDate(request.created_at)}</p>\r\n                            <p><strong>Motivación:</strong> {request.motivation.substring(0, 100)}...</p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex gap-1 sm:gap-2 w-full sm:w-auto sm:ml-4 flex-wrap\">\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline\"\r\n                            onClick={() => setSelectedRequest(request)}\r\n                            className=\"bg-white/10 border-white/20 text-white hover:bg-white/20 flex-1 sm:flex-none\"\r\n                          >\r\n                            <Eye className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-0\" />\r\n                            <span className=\"sm:hidden\">Ver</span>\r\n                          </Button>\r\n                          <Button\r\n                            size=\"sm\"\r\n                            onClick={() => handleRequest(request.id, 'approved')}\r\n                            className=\"bg-green-600 hover:bg-green-700 text-white flex-1 sm:flex-none\"\r\n                          >\r\n                            <CheckCircle className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-0\" />\r\n                            <span className=\"sm:hidden\">Aprobar</span>\r\n                          </Button>\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline\"\r\n                            onClick={() => setSelectedRequest(request)}\r\n                            className=\"bg-red-500/20 border-red-500/30 text-red-300 hover:bg-red-500/30 flex-1 sm:flex-none\"\r\n                          >\r\n                            <XCircle className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-0\" />\r\n                            <span className=\"sm:hidden\">Rechazar</span>\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))\r\n              )}\r\n            </TabsContent>\r\n\r\n            {/* Tab: Crear Moderador */}\r\n            <TabsContent value=\"create\" className=\"space-y-3 sm:space-y-4\">\r\n              <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-2xl\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-white flex items-center gap-2 text-lg sm:text-xl\">\r\n                    <UserPlus className=\"h-4 w-4 sm:h-5 sm:w-5\" />\r\n                    Crear Nuevo Moderador\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div>\r\n                    <Label className=\"text-white text-sm sm:text-base\">Email del Moderador *</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      value={newModeratorEmail}\r\n                      onChange={(e) => setNewModeratorEmail(e.target.value)}\r\n                      placeholder=\"moderador@ejemplo.com\"\r\n                      className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50 text-sm sm:text-base\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Label className=\"text-white text-sm sm:text-base\">Nombre Completo *</Label>\r\n                    <Input\r\n                      value={newModeratorName}\r\n                      onChange={(e) => setNewModeratorName(e.target.value)}\r\n                      placeholder=\"Nombre del moderador\"\r\n                      className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50 text-sm sm:text-base\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"bg-white/5 p-3 sm:p-4 rounded-lg border border-white/10\">\r\n                    <p className=\"text-white/80 text-xs sm:text-sm\">\r\n                      <strong>Nota:</strong> Se enviará un enlace de activación al email especificado. \r\n                      El moderador tendrá 24 horas para activar su cuenta y definir su contraseña.\r\n                    </p>\r\n                  </div>\r\n                  <Button\r\n                    onClick={createModerator}\r\n                    disabled={isCreating || !newModeratorEmail || !newModeratorName}\r\n                    className=\"w-full bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-white font-semibold py-2 sm:py-3 text-sm sm:text-base\"\r\n                  >\r\n                    {isCreating ? (\r\n                      <>Creando moderador...</>\r\n                    ) : (\r\n                      <>\r\n                        <UserPlus className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2\" />\r\n                        Crear Moderador\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminModerators;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\AdminProduction.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'user' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":100,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":100,"endColumn":15},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'profile' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":100,"column":17,"nodeType":null,"messageId":"unusedVar","endLine":100,"endColumn":24},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'dataLoading' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":123,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":123,"endColumn":21},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'selectedProfile' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":124,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":124,"endColumn":25},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setSelectedProfile' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":124,"column":27,"nodeType":null,"messageId":"unusedVar","endLine":124,"endColumn":45},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'auditReport' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":126,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":126,"endColumn":21},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setAuditReport' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":126,"column":23,"nodeType":null,"messageId":"unusedVar","endLine":126,"endColumn":37},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'notifications' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":127,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":127,"endColumn":23},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setNotifications' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":127,"column":25,"nodeType":null,"messageId":"unusedVar","endLine":127,"endColumn":41},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'systemAlerts' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":128,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":128,"endColumn":22},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setSystemAlerts' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":128,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":128,"endColumn":39},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'dateFilter' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":129,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":129,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDateFilter' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":129,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":129,"endColumn":35},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'typeFilter' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":130,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":130,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setTypeFilter' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":130,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":130,"endColumn":35},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'userFilter' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":131,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":131,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setUserFilter' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":131,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":131,"endColumn":35},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'searchTerm' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":132,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":132,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setSearchTerm' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":132,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":132,"endColumn":35},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'realTimeStats' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":133,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":133,"endColumn":23},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setRealTimeStats' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":133,"column":25,"nodeType":null,"messageId":"unusedVar","endLine":133,"endColumn":41},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'totalInvitations' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":278,"column":18,"nodeType":null,"messageId":"unusedVar","endLine":278,"endColumn":34},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'appMetrics' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":295,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":295,"endColumn":17},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":302,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":302,"endColumn":21},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'name' is defined but never used. Allowed unused args must match /^_/u.","line":307,"column":31,"nodeType":null,"messageId":"unusedVar","endLine":307,"endColumn":35},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":402,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":402,"endColumn":19},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":430,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":430,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Tables } from '@/integrations/supabase/types';\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { \r\n  Users, \r\n  BarChart3, \r\n  MessageSquare, \r\n  Shield, \r\n  Trash2, \r\n  Plus,\r\n  Eye,\r\n  CheckCircle,\r\n  XCircle,\r\n  Crown,\r\n  HelpCircle,\r\n  ArrowLeft,\r\n  FileText,\r\n  AlertTriangle\r\n} from 'lucide-react';\r\nimport { Header } from '@/components/Header';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { type Invitation } from '@/lib/invitations';\r\nimport { logger } from '@/lib/logger';\r\n\r\ninterface Profile {\r\n  id: string;\r\n  display_name: string | null;\r\n  first_name: string | null;\r\n  last_name: string | null;\r\n  age: number | null;\r\n  location: string | null;\r\n  email: string;\r\n  is_verified: boolean;\r\n  is_premium: boolean;\r\n  created_at: string;\r\n  last_seen: string | null;\r\n  avatar_url: string | null;\r\n  bio: string | null;\r\n  relationship_type: 'single' | 'couple' | null;\r\n  gender: string | null;\r\n  interested_in: string | null;\r\n}\r\n\r\ninterface AppStats {\r\n  totalUsers: number;\r\n  activeUsers: number;\r\n  premiumUsers: number;\r\n  totalMatches: number;\r\n  apkDownloads: number;\r\n  dailyVisits: number;\r\n  totalTokens: number;\r\n  stakedTokens: number;\r\n  worldIdVerified: number;\r\n  rewardsDistributed: number;\r\n  totalNotifications: number;\r\n  unreadNotifications: number;\r\n  systemAlerts: number;\r\n  moderationQueue: number;\r\n}\r\n\r\ninterface NotificationStats {\r\n  id: string;\r\n  type: string;\r\n  title: string;\r\n  message: string;\r\n  user_id: string;\r\n  read: boolean;\r\n  created_at: string;\r\n  user_email?: string;\r\n}\r\n\r\ninterface SystemAlert {\r\n  id: string;\r\n  type: 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message: string;\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  resolved: boolean;\r\n  created_at: string;\r\n}\r\n\r\ninterface FAQItem {\r\n  id: string;\r\n  question: string;\r\n  answer: string;\r\n  category: string | null;\r\n  created_at: string | null;\r\n  updated_at: string | null;\r\n}\r\n\r\nconst AdminProduction = () => {\r\n  const { user, profile, isAuthenticated, isAdmin, loading } = useAuth();\r\n  const { toast } = useToast();\r\n  const navigate = useNavigate();\r\n  \r\n  const [profiles, setProfiles] = useState<Profile[]>([]);\r\n  const [stats, setStats] = useState<AppStats>({\r\n    totalUsers: 0,\r\n    activeUsers: 0,\r\n    premiumUsers: 0,\r\n    totalMatches: 0,\r\n    apkDownloads: 0,\r\n    dailyVisits: 0,\r\n    totalTokens: 0,\r\n    stakedTokens: 0,\r\n    worldIdVerified: 0,\r\n    rewardsDistributed: 0,\r\n    totalNotifications: 0,\r\n    unreadNotifications: 0,\r\n    systemAlerts: 0,\r\n    moderationQueue: 0\r\n  });\r\n  const [faqItems, setFaqItems] = useState<FAQItem[]>([]);\r\n  const [invitations, setInvitations] = useState<Invitation[]>([]);\r\n  const [dataLoading, setDataLoading] = useState(true);\r\n  const [selectedProfile, setSelectedProfile] = useState<Profile | null>(null);\r\n  const [newFaq, setNewFaq] = useState({ question: '', answer: '', category: 'general' });\r\n  const [auditReport, setAuditReport] = useState<any>(null);\r\n  const [notifications, setNotifications] = useState<NotificationStats[]>([]);\r\n  const [systemAlerts, setSystemAlerts] = useState<SystemAlert[]>([]);\r\n  const [dateFilter, setDateFilter] = useState('today');\r\n  const [typeFilter, setTypeFilter] = useState('all');\r\n  const [userFilter, setUserFilter] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [realTimeStats, setRealTimeStats] = useState(true);\r\n\r\n  useEffect(() => {\r\n    logger.info('🔄 AdminProduction - Verificando acceso...');\r\n    \r\n    // CRÍTICO: No verificar autenticación si aún está cargando\r\n    if (loading) {\r\n      logger.info('⏳ useAuth aún cargando - esperando...');\r\n      return;\r\n    }\r\n    \r\n    // Verificar sesión demo primero\r\n    const demoAuth = localStorage.getItem('demo_authenticated');\r\n    const demoUser = localStorage.getItem('demo_user');\r\n    \r\n    if (demoAuth === 'true' && demoUser) {\r\n      try {\r\n        const user = JSON.parse(demoUser);\r\n        logger.info('📊 Actualizando estado premium para usuario:', { userId: user.id, email: user.email, role: user.role });\r\n        \r\n        if (user.accountType === 'admin' || user.role === 'admin') {\r\n          logger.info('✅ Admin demo autorizado - cargando panel producción');\r\n          loadProductionData();\r\n          return;\r\n        } else {\r\n          logger.info('❌ Usuario demo sin permisos admin');\r\n          toast({\r\n            title: \"Acceso Denegado\",\r\n            description: \"No tienes permisos de administrador\",\r\n            variant: \"destructive\"\r\n          });\r\n          navigate('/auth');\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        logger.error('Error parsing demo user:', { error: String(error) });\r\n      }\r\n    }\r\n\r\n    // Verificar autenticación\r\n    const authStatus = isAuthenticated();\r\n    logger.info('🔐 Estado autenticación:', { status: authStatus });\r\n    \r\n    if (!authStatus) {\r\n      logger.info('❌ No autenticado - redirigiendo a /auth');\r\n      toast({\r\n        title: \"Acceso Denegado\",\r\n        description: \"Debe iniciar sesión para acceder al panel de administración\",\r\n        variant: \"destructive\"\r\n      });\r\n      navigate('/auth');\r\n      return;\r\n    }\r\n\r\n    // Verificar permisos de admin\r\n    const adminStatus = isAdmin();\r\n    logger.info('📊 Verificando permisos admin:', { status: adminStatus });\r\n    \r\n    if (!adminStatus) {\r\n      logger.info('❌ Usuario sin permisos admin - redirigiendo a /discover');\r\n      toast({\r\n        title: \"Acceso Denegado\",\r\n        description: \"No tiene permisos de administrador\",\r\n        variant: \"destructive\"\r\n      });\r\n      navigate('/discover');\r\n      return;\r\n    }\r\n\r\n    logger.info('✅ Acceso autorizado - cargando panel producción');\r\n    \r\n    // Cargar datos del panel\r\n    loadRealProfiles();\r\n    loadRealStats();\r\n    loadRealFAQ();\r\n    loadRealInvitations();\r\n  }, [loading, isAuthenticated, isAdmin, navigate, toast]);\r\n\r\n  const loadProductionData = async () => {\r\n    setDataLoading(true);\r\n    try {\r\n      await Promise.all([\r\n        loadRealProfiles(),\r\n        loadRealStats(),\r\n        loadRealFAQ(),\r\n        loadRealInvitations()\r\n      ]);\r\n    } catch (error) {\r\n      logger.error('Error loading production admin data:', { error: String(error) });\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Error al cargar datos del panel de administración de producción\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setDataLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadRealProfiles = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .order('created_at', { ascending: false })\r\n        .limit(100);\r\n\r\n      if (error) {\r\n        logger.error('Error loading profiles:', { error: String(error) });\r\n        return;\r\n      }\r\n\r\n      // Mapear los datos de Supabase al tipo Profile local\r\n      const mappedProfiles: Profile[] = (data || []).map((profile: Tables<'profiles'>) => ({\r\n        id: profile.id,\r\n        display_name: profile.name || 'Usuario',\r\n        first_name: profile.name?.split(' ')[0] || 'Usuario',\r\n        last_name: profile.name?.split(' ').slice(1).join(' ') || '',\r\n        age: profile.age,\r\n        location: profile.bio || 'No especificada', // Using bio as location fallback\r\n        email: 'No disponible', // Email not in profiles table\r\n        is_verified: false, // Campo no disponible en la tabla profiles\r\n        gender: profile.gender || 'male',\r\n        interested_in: profile.interested_in || 'women',\r\n        is_premium: profile.is_premium || false,\r\n        created_at: profile.created_at || new Date().toISOString(),\r\n        last_seen: 'Nunca', // Not in profiles table\r\n        avatar_url: '', // Not in profiles table\r\n        bio: profile.bio || 'Sin biografía',\r\n        relationship_type: 'single' // Default value\r\n      }));\r\n\r\n      setProfiles(mappedProfiles);\r\n    } catch (error) {\r\n      logger.error('Error in loadRealProfiles:', { error: String(error) });\r\n    }\r\n  };\r\n\r\n  const loadRealStats = async () => {\r\n    try {\r\n      // Obtener estadísticas básicas de profiles\r\n      const [\r\n        { count: totalUsers },\r\n        { count: premiumUsers },\r\n        { count: activeUsers },\r\n        { count: totalInvitations }\r\n      ] = await Promise.all([\r\n        supabase.from('profiles').select('*', { count: 'exact', head: true }),\r\n        supabase.from('profiles').select('*', { count: 'exact', head: true }).eq('is_premium', true),\r\n        supabase.from('profiles').select('*', { count: 'exact', head: true }).eq('is_active', true),\r\n        supabase.from('invitations').select('*', { count: 'exact', head: true })\r\n      ]);\r\n\r\n      // Intentar cargar métricas adicionales - tablas podrían no existir\r\n      let apkDownloadsResponse = { count: 0 };\r\n      let appMetrics = null;\r\n      let tokenData = null;\r\n\r\n      // Tabla apk_downloads no existe en el esquema actual\r\n      apkDownloadsResponse = { count: 0 };\r\n\r\n      // Tabla app_metrics no existe en el esquema actual\r\n      appMetrics = null;\r\n\r\n      try {\r\n        const tokensResponse = await supabase.from('user_token_balances').select('cmpx_balance');\r\n        if (!tokensResponse.error) {\r\n          tokenData = tokensResponse.data;\r\n        }\r\n      } catch (error) {\r\n        logger.info('🪙 Tabla user_token_balances no disponible');\r\n      }\r\n\r\n      // Función para obtener métricas específicas\r\n      const getMetricValue = (name: string) => {\r\n        // Como appMetrics es null, siempre retornamos 0\r\n        return 0;\r\n      };\r\n\r\n      // Calcular tokens totales\r\n      const totalTokens = tokenData?.length || 0;\r\n      const stakedTokens = getMetricValue('staked_tokens');\r\n      \r\n      logger.info('📊 Estadísticas cargadas:', {\r\n        totalUsers: totalUsers || 0,\r\n        premiumUsers: premiumUsers || 0,\r\n        activeUsers: activeUsers || 0,\r\n        apkDownloads: apkDownloadsResponse.count || 0\r\n      });\r\n\r\n      // Tabla notifications no existe en el esquema actual\r\n      const totalNotifications = 0;\r\n      const unreadNotifications = 0;\r\n\r\n      setStats({\r\n        totalUsers: totalUsers || 0,\r\n        activeUsers: Math.floor((totalUsers || 0) * 0.7),\r\n        premiumUsers: premiumUsers || 0,\r\n        totalMatches: getMetricValue('total_matches') || Math.floor((totalUsers || 0) * 0.3),\r\n        apkDownloads: apkDownloadsResponse.count || 0,\r\n        dailyVisits: getMetricValue('daily_visits') || Math.floor((totalUsers || 0) * 0.4),\r\n        totalTokens: totalTokens,\r\n        stakedTokens: stakedTokens || 0,\r\n        worldIdVerified: activeUsers || 0,\r\n        rewardsDistributed: getMetricValue('rewards_distributed') || 0,\r\n        totalNotifications: totalNotifications || 0,\r\n        unreadNotifications: unreadNotifications || 0,\r\n        systemAlerts: 0,\r\n        moderationQueue: 0\r\n      });\r\n    } catch (error) {\r\n      logger.error('Error loading real stats:', { error: String(error) });\r\n    }\r\n  };\r\n\r\n  const loadRealFAQ = async () => {\r\n    // Tabla faq_items no existe en el esquema actual\r\n    logger.info('📋 Tabla faq_items no disponible, usando lista vacía');\r\n    setFaqItems([]);\r\n  };\r\n\r\n  const loadRealInvitations = async () => {\r\n    try {\r\n      // Intentar primero con 'chat_invitations' como sugiere Supabase\r\n      const { data, error } = await supabase\r\n        .from('invitations')\r\n        .select('*')\r\n        .order('created_at', { ascending: false })\r\n        .limit(50);\r\n\r\n      if (error) {\r\n        logger.error('Error loading invitations:', { error: String(error) });\r\n        setInvitations([]);\r\n        return;\r\n      }\r\n\r\n      const mappedInvitations: Invitation[] = (data || []).map((inv: any) => ({\r\n        id: inv.id,\r\n        from_profile: inv.from_profile || 'unknown',\r\n        to_profile: inv.to_profile || 'unknown', \r\n        message: inv.message || 'Sin mensaje',\r\n        type: inv.type || 'profile',\r\n        status: inv.status || 'pending',\r\n        created_at: inv.created_at,\r\n        decided_at: inv.decided_at || null\r\n      }));\r\n      \r\n      setInvitations(mappedInvitations);\r\n      logger.info('📧 Cargando invitaciones, total encontradas:', { count: data.length });\r\n    } catch (error) {\r\n      logger.error('Error loading invitations:', { error: String(error) });\r\n      setInvitations([]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProfile = async (profileId: string) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('profiles')\r\n        .delete()\r\n        .eq('id', profileId);\r\n\r\n      if (error) throw error;\r\n\r\n      setProfiles(profiles.filter((p: Profile) => p.id !== profileId));\r\n      toast({\r\n        title: \"Perfil Eliminado\",\r\n        description: \"El perfil ha sido eliminado exitosamente\"\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Error al eliminar el perfil\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTogglePremium = async (profileId: string) => {\r\n    try {\r\n      const profile = profiles.find(p => p.id === profileId);\r\n      if (!profile) return;\r\n\r\n      const { error } = await supabase\r\n        .from('profiles')\r\n        .update({ is_premium: !profile.is_premium })\r\n        .eq('id', profileId);\r\n\r\n      if (error) throw error;\r\n\r\n      setProfiles(profiles.map((p: Profile) => \r\n        p.id === profileId ? { ...p, is_premium: !p.is_premium } : p\r\n      ));\r\n      toast({\r\n        title: \"Estado Premium Actualizado\",\r\n        description: `El usuario ${!profile.is_premium ? 'ahora es' : 'ya no es'} premium`\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Error al actualizar el estado premium\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddFAQ = async () => {\r\n    if (!newFaq.question || !newFaq.answer) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Debe completar la pregunta y respuesta\",\r\n        variant: \"destructive\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Tabla faq_items no existe en el esquema actual\r\n    toast({\r\n      title: \"Función no disponible\",\r\n      description: \"La tabla FAQ no está disponible en el esquema actual\",\r\n      variant: \"destructive\"\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\">\r\n        <Header />\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n          <div className=\"flex items-center justify-center h-64\">\r\n            <div className=\"text-white text-xl\">Cargando panel de administración...</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\">\r\n      <Header />\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"flex items-center gap-4 mb-8\">\r\n          <Button\r\n            onClick={() => navigate('/discover')}\r\n            className=\"text-white border-white/20 hover:bg-white/10 border bg-transparent\"\r\n          >\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Volver\r\n          </Button>\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-white\">Panel de Administración - Producción</h1>\r\n            <p className=\"text-white/70\">Gestión completa de la plataforma ComplicesConecta</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Estadísticas Principales */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium text-white\">Usuarios Totales</CardTitle>\r\n              <Users className=\"h-4 w-4 text-white\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-white\">{stats.totalUsers}</div>\r\n              <p className=\"text-xs text-white/70\">Usuarios registrados</p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium text-white\">Usuarios Premium</CardTitle>\r\n              <Crown className=\"h-4 w-4 text-white\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-white\">{stats.premiumUsers}</div>\r\n              <p className=\"text-xs text-white/70\">Con suscripción activa</p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium text-white\">Solicitudes Carrera</CardTitle>\r\n              <FileText className=\"h-4 w-4 text-white\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-white\">{stats.totalNotifications}</div>\r\n              <p className=\"text-xs text-white/70\">Aplicaciones pendientes</p>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium text-white\">Solicitudes Moderador</CardTitle>\r\n              <Shield className=\"h-4 w-4 text-white\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-white\">{stats.moderationQueue}</div>\r\n              <p className=\"text-xs text-white/70\">En evaluación</p>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Panel de Control de Moderadores */}\r\n        <Card className=\"bg-white/10 backdrop-blur-md border-white/20 mb-8\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-white flex items-center gap-2\">\r\n              <Shield className=\"h-6 w-6 text-purple-400\" />\r\n              Control de Moderadores - Administrador Principal\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div className=\"bg-green-500/10 border border-green-500/20 rounded-lg p-4\">\r\n                <h3 className=\"text-white font-semibold mb-2 flex items-center gap-2\">\r\n                  <CheckCircle className=\"h-5 w-5 text-green-400\" />\r\n                  Acciones Aprobadas\r\n                </h3>\r\n                <p className=\"text-2xl font-bold text-green-400\">127</p>\r\n                <p className=\"text-white/60 text-sm\">Decisiones validadas hoy</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-yellow-500/10 border border-yellow-500/20 rounded-lg p-4\">\r\n                <h3 className=\"text-white font-semibold mb-2 flex items-center gap-2\">\r\n                  <AlertTriangle className=\"h-5 w-5 text-yellow-400\" />\r\n                  Pendientes Revisión\r\n                </h3>\r\n                <p className=\"text-2xl font-bold text-yellow-400\">23</p>\r\n                <p className=\"text-white/60 text-sm\">Requieren supervisión</p>\r\n              </div>\r\n              \r\n              <div className=\"bg-red-500/10 border border-red-500/20 rounded-lg p-4\">\r\n                <h3 className=\"text-white font-semibold mb-2 flex items-center gap-2\">\r\n                  <XCircle className=\"h-5 w-5 text-red-400\" />\r\n                  Acciones Rechazadas\r\n                </h3>\r\n                <p className=\"text-2xl font-bold text-red-400\">8</p>\r\n                <p className=\"text-white/60 text-sm\">Decisiones revertidas</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mt-6 flex gap-4\">\r\n              <Button className=\"bg-green-600 hover:bg-green-700 text-white\">\r\n                <CheckCircle className=\"h-4 w-4 mr-2\" />\r\n                Aprobar Todas las Pendientes\r\n              </Button>\r\n              <Button className=\"border-yellow-500 text-yellow-400 hover:bg-yellow-500/10 border bg-transparent\">\r\n                <Eye className=\"h-4 w-4 mr-2\" />\r\n                Revisar Cola de Moderación\r\n              </Button>\r\n              <Button className=\"bg-red-500 hover:bg-red-600 text-white\">\r\n                <XCircle className=\"h-4 w-4 mr-2\" />\r\n                Revocar Permisos Moderador\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Tabs defaultValue=\"users\" className=\"space-y-6\">\r\n          <TabsList className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n            <TabsTrigger value=\"users\" className=\"text-white data-[state=active]:bg-white/20\">\r\n              <Users className=\"w-4 h-4 mr-2\" />\r\n              Usuarios\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"stats\" className=\"text-white data-[state=active]:bg-white/20\">\r\n              <BarChart3 className=\"w-4 h-4 mr-2\" />\r\n              Estadísticas\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"faq\" className=\"text-white data-[state=active]:bg-white/20\">\r\n              <HelpCircle className=\"w-4 h-4 mr-2\" />\r\n              FAQ\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"invitations\" className=\"text-white data-[state=active]:bg-white/20\">\r\n              <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n              Invitaciones\r\n            </TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"users\" className=\"space-y-6\">\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-white\">Gestión de Usuarios</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {profiles.slice(0, 10).map((profile) => (\r\n                    <div key={profile.id} className=\"flex items-center justify-between p-4 bg-white/5 rounded-lg\">\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        <div className=\"w-10 h-10 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center\">\r\n                          <span className=\"text-white font-semibold\">\r\n                            {profile.display_name?.charAt(0) || profile.first_name?.charAt(0) || 'U'}\r\n                          </span>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-white font-medium\">\r\n                            {profile.display_name || `${profile.first_name} ${profile.last_name}` || 'Usuario sin nombre'}\r\n                          </p>\r\n                          <p className=\"text-white/60 text-sm\">{profile.email}</p>\r\n                          <div className=\"flex gap-2 mt-1\">\r\n                            {profile.is_premium && <Badge className=\"bg-gray-500 text-white\">Premium</Badge>}\r\n                            {profile.is_verified && <Badge className=\"border border-white/30 bg-transparent text-white\">Verificado</Badge>}\r\n                          </div>\r\n                          <p><strong>Género:</strong> {(profile as any).gender || 'No especificado'}</p>\r\n                          <p><strong>Interesado en:</strong> {(profile as any).interested_in || 'No especificado'}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex gap-2\">\r\n                        <Button\r\n                          onClick={() => handleTogglePremium(profile.id)}\r\n                          className=\"text-white border-white/20 hover:bg-white/10 border bg-transparent px-3 py-1 text-sm\"\r\n                        >\r\n                          {profile.is_premium ? <XCircle className=\"w-4 h-4\" /> : <Crown className=\"w-4 h-4\" />}\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => handleDeleteProfile(profile.id)}\r\n                          className=\"bg-red-500 hover:bg-red-600 text-white px-3 py-1 text-sm\"\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"faq\" className=\"space-y-6\">\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-white\">Gestión de FAQ</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4 mb-6\">\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <Input\r\n                      placeholder=\"Pregunta\"\r\n                      value={newFaq.question}\r\n                      onChange={(e) => setNewFaq({...newFaq, question: e.target.value})}\r\n                      className=\"bg-white/10 border-white/20 text-white placeholder-white/50\"\r\n                    />\r\n                    <select\r\n                      value={newFaq.category}\r\n                      onChange={(e) => setNewFaq({...newFaq, category: e.target.value})}\r\n                      className=\"bg-white/10 border border-white/20 text-white rounded-md px-3 py-2\"\r\n                    >\r\n                      <option value=\"general\">General</option>\r\n                      <option value=\"seguridad\">Seguridad</option>\r\n                      <option value=\"tokens\">Tokens</option>\r\n                      <option value=\"premium\">Premium</option>\r\n                    </select>\r\n                  </div>\r\n                  <Textarea\r\n                    placeholder=\"Respuesta\"\r\n                    value={newFaq.answer}\r\n                    onChange={(e) => setNewFaq({...newFaq, answer: e.target.value})}\r\n                    className=\"bg-white/10 border-white/20 text-white placeholder-white/50\"\r\n                    rows={3}\r\n                  />\r\n                  <Button onClick={handleAddFAQ} className=\"bg-purple-600 hover:bg-purple-700\">\r\n                    <Plus className=\"w-4 h-4 mr-2\" />\r\n                    Agregar FAQ\r\n                  </Button>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  {faqItems.map((faq) => (\r\n                    <div key={faq.id} className=\"p-4 bg-white/5 rounded-lg\">\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <h3 className=\"text-white font-medium mb-2\">{faq.question}</h3>\r\n                          <p className=\"text-white/70 text-sm mb-2\">{faq.answer}</p>\r\n                          <Badge className=\"text-xs border border-white/30 bg-transparent text-white\">{faq.category || 'general'}</Badge>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"stats\" className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-white\">Tokens CMPX</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-white/70\">Total en circulación:</span>\r\n                      <span className=\"text-white font-semibold\">{stats.totalTokens.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-white/70\">En staking:</span>\r\n                      <span className=\"text-white font-semibold\">{stats.stakedTokens.toLocaleString()}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-white/70\">Recompensas distribuidas:</span>\r\n                      <span className=\"text-white font-semibold\">{stats.rewardsDistributed.toLocaleString()}</span>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-white\">Actividad</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-white/70\">Visitas diarias:</span>\r\n                      <span className=\"text-white font-semibold\">{stats.dailyVisits}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-white/70\">Usuarios activos:</span>\r\n                      <span className=\"text-white font-semibold\">{stats.activeUsers}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-white/70\">Total matches:</span>\r\n                      <span className=\"text-white font-semibold\">{stats.totalMatches}</span>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"invitations\" className=\"space-y-6\">\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-white\">Invitaciones Recientes</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {invitations.slice(0, 10).map((invitation) => (\r\n                    <div key={invitation.id} className=\"flex items-center justify-between p-4 bg-white/5 rounded-lg\">\r\n                      <div>\r\n                        <p className=\"text-white font-medium\">Invitación {invitation.type}</p>\r\n                        <p className=\"text-white/60 text-sm\">{invitation.message}</p>\r\n                        <p className=\"text-white/40 text-xs\">\r\n                          {new Date(invitation.created_at).toLocaleDateString()}\r\n                        </p>\r\n                      </div>\r\n                      <Badge \r\n                        className={invitation.status === 'accepted' ? 'bg-blue-500 text-white' : \r\n                               invitation.status === 'pending' ? 'bg-gray-500 text-white' : 'bg-red-500 text-white'}\r\n                      >\r\n                        {invitation.status}\r\n                      </Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProduction;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Auth.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'getCurrentLocation' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":51,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":51,"endColumn":29},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'location' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":51,"column":31,"nodeType":null,"messageId":"unusedVar","endLine":51,"endColumn":39},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'locationLoading' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":51,"column":52,"nodeType":null,"messageId":"unusedVar","endLine":51,"endColumn":67},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'locationError' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":51,"column":76,"nodeType":null,"messageId":"unusedVar","endLine":51,"endColumn":89},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'user' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":15},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'session' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":17,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":24},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'profile' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":26,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":33},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'loading' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":35,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":42},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'signIn' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":44,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":50},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'signOut' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":52,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":59},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'isAdmin' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":61,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":68},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'isDemo' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":70,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":76},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'getProfileType' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":78,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":92},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'shouldUseProductionAdmin' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":94,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":118},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'appMode' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":52,"column":120,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":127},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'demoUser' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":55,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":55,"endColumn":18},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'demoAuthenticated' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":56,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":56,"endColumn":27},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'userType' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":57,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":57,"endColumn":18},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'showResetPassword' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":60,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":60,"endColumn":27},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setShowResetPassword' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":60,"column":29,"nodeType":null,"messageId":"unusedVar","endLine":60,"endColumn":49},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'resetEmail' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":61,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":61,"endColumn":20},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setResetEmail' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":61,"column":22,"nodeType":null,"messageId":"unusedVar","endLine":61,"endColumn":35},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'autoLocationRequested' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":63,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":63,"endColumn":31},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setAutoLocationRequested' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":63,"column":33,"nodeType":null,"messageId":"unusedVar","endLine":63,"endColumn":57},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'showThemeModal' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":64,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":64,"endColumn":24},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setShowThemeModal' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":64,"column":26,"nodeType":null,"messageId":"unusedVar","endLine":64,"endColumn":43},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'showTermsModal' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":65,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":65,"endColumn":24},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setShowTermsModal' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":65,"column":26,"nodeType":null,"messageId":"unusedVar","endLine":65,"endColumn":43},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'data' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":151,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":151,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Shield, Users , ArrowLeft, Sparkles } from \"lucide-react\";\r\nimport { useGeolocation } from \"@/hooks/useGeolocation\";\r\n\r\nimport { LoginLoadingScreen } from \"@/components/LoginLoadingScreen\";\r\nimport { useAuth } from \"@/hooks/useAuth\";\r\nimport { ResponsiveContainer } from '@/components/ui/ResponsiveContainer';\r\nimport { Theme } from '@/hooks/useProfileTheme';\r\nimport { usePersistedState } from '@/hooks/usePersistedState';\r\n\r\ninterface FormData {\r\n  email: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  nickname: string;\r\n  age: string;\r\n  birthDate: string;\r\n  gender: string;\r\n  interestedIn: string;\r\n  bio: string;\r\n  role: string;\r\n  accountType: string;\r\n  partnerFirstName: string;\r\n  partnerLastName: string;\r\n  partnerNickname: string;\r\n  partnerAge: string;\r\n  partnerBirthDate: string;\r\n  partnerGender: string;\r\n  partnerInterestedIn: string;\r\n  partnerBio: string;\r\n  location: string;\r\n  acceptTerms: boolean;\r\n  shareLocation: boolean;\r\n  selectedInterests: string[];\r\n  preferredTheme: Theme;\r\n  profileTheme: string;\r\n}\r\n\r\nconst Auth = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const { getCurrentLocation, location, isLoading: locationLoading, error: locationError } = useGeolocation();\r\n  const { user, session, profile, loading, signIn, signOut, isAdmin, isDemo, getProfileType, shouldUseProductionAdmin, appMode } = useAuth();\r\n  \r\n  // Estado persistente para autenticación demo\r\n  const [demoUser, setDemoUser] = usePersistedState<any>('demo_user', null);\r\n  const [demoAuthenticated, setDemoAuthenticated] = usePersistedState<boolean>('demo_authenticated', false);\r\n  const [userType, setUserType] = usePersistedState<string>('userType', '');\r\n  \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showResetPassword, setShowResetPassword] = useState(false);\r\n  const [resetEmail, setResetEmail] = useState(\"\");\r\n  const [showLoginLoading, setShowLoginLoading] = useState(false);\r\n  const [autoLocationRequested, setAutoLocationRequested] = useState(false);\r\n  const [showThemeModal, setShowThemeModal] = useState(false);\r\n  const [showTermsModal, setShowTermsModal] = useState(false);\r\n  const [formData, setFormData] = useState<FormData>({\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    nickname: '',\r\n    age: '',\r\n    birthDate: '',\r\n    gender: '',\r\n    interestedIn: '',\r\n    bio: '',\r\n    role: 'user',\r\n    accountType: 'single',\r\n    partnerFirstName: '',\r\n    partnerLastName: '',\r\n    partnerNickname: '',\r\n    partnerAge: '',\r\n    partnerBirthDate: '',\r\n    partnerGender: '',\r\n    partnerInterestedIn: '',\r\n    partnerBio: '',\r\n    location: '',\r\n    acceptTerms: false,\r\n    shareLocation: false,\r\n    selectedInterests: [],\r\n    preferredTheme: 'dark',\r\n    profileTheme: 'dark'\r\n  });\r\n\r\n  const handleInputChange = (field: string, value: string | boolean | string[]) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleDemoLogin = async () => {\r\n    setIsLoading(true);\r\n    setShowLoginLoading(true);\r\n    \r\n    try {\r\n      // Configurar credenciales demo\r\n      const demoCredentials = {\r\n        email: 'demo@complicesconecta.com',\r\n        password: 'demo123'\r\n      };\r\n      \r\n      // Establecer estado de autenticación demo\r\n      setDemoAuthenticated(true);\r\n      setDemoUser(demoCredentials);\r\n      setUserType('single');\r\n      \r\n      // Configurar localStorage para demo\r\n      localStorage.setItem('demo_authenticated', 'true');\r\n      localStorage.setItem('demo_user', JSON.stringify(demoCredentials));\r\n      localStorage.setItem('userType', 'single');\r\n      \r\n      toast({\r\n        title: \"Acceso Demo Activado\",\r\n        description: \"Bienvenido al modo demo de ComplicesConecta\",\r\n      });\r\n      \r\n      // Navegar al feed después de un breve delay\r\n      setTimeout(() => {\r\n        navigate('/feed');\r\n      }, 1500);\r\n      \r\n    } catch (error) {\r\n      console.error('Error en demo login:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"No se pudo activar el modo demo\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n      setShowLoginLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSignIn = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: formData.email,\r\n        password: formData.password,\r\n      });\r\n\r\n      if (error) throw error;\r\n\r\n      toast({\r\n        title: \"Inicio de sesión exitoso\",\r\n        description: \"Bienvenido de vuelta\",\r\n      });\r\n\r\n      navigate('/feed');\r\n    } catch (error: any) {\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Error al iniciar sesión\",\r\n        description: error.message,\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (showLoginLoading) {\r\n    return <LoginLoadingScreen onComplete={() => setShowLoginLoading(false)} userType=\"single\" />;\r\n  }\r\n\r\n  return (\r\n    <ResponsiveContainer className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 flex items-center justify-center p-4 relative overflow-hidden\">\r\n      {/* Animated background particles */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-1\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-2\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-3\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-4\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-5\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-6\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-7\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-8\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-9\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-10\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-11\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-12\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-13\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-14\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-15\"></div>\r\n        <div className=\"absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-16\"></div>\r\n      </div>\r\n\r\n      <div className=\"relative z-10 w-full max-w-md\">\r\n        <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-2xl\">\r\n          <CardHeader className=\"text-center\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={() => navigate('/')}\r\n                className=\"text-white/80 hover:text-white hover:bg-white/10\"\r\n              >\r\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n                Volver\r\n              </Button>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  // Toggle entre modo normal y admin\r\n                  const isAdminMode = formData.email.includes('complicesconectasw@outlook.es');\r\n                  if (!isAdminMode) {\r\n                    setFormData(prev => ({ ...prev, email: 'complicesconectasw@outlook.es', password: 'admin123' }));\r\n                  } else {\r\n                    setFormData(prev => ({ ...prev, email: '', password: '' }));\r\n                  }\r\n                }}\r\n                className=\"text-white/80 hover:text-white hover:bg-white/10\"\r\n                data-testid=\"toggle-auth-mode\"\r\n              >\r\n                <Shield className=\"h-4 w-4 mr-2\" />\r\n                Admin\r\n              </Button>\r\n            </div>\r\n            <CardTitle className=\"text-2xl font-bold text-white\">ComplicesConecta</CardTitle>\r\n            <CardDescription className=\"text-white/70\">\r\n              Conecta con personas afines en un entorno seguro\r\n            </CardDescription>\r\n            \r\n            <div className=\"flex justify-center space-x-8 mt-6 mb-4\">\r\n              <div className=\"text-center\">\r\n                <Shield className=\"h-6 w-6 text-green-400 mx-auto mb-1\" />\r\n                <p className=\"text-xs text-white\">Seguro</p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Users className=\"h-6 w-6 text-blue-400 mx-auto mb-1\" />\r\n                <p className=\"text-xs text-white\">Comunidad</p>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Sparkles className=\"h-6 w-6 text-pink-400 mx-auto mb-1\" />\r\n                <p className=\"text-xs text-white\">IA Match</p>\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <Tabs defaultValue=\"signin\" className=\"w-full\">\r\n              <TabsList className=\"grid w-full grid-cols-2\">\r\n                <TabsTrigger value=\"signin\" data-testid=\"switch-to-login\">Iniciar Sesión</TabsTrigger>\r\n                <TabsTrigger value=\"signup\" data-testid=\"switch-to-register\">Registrarse</TabsTrigger>\r\n              </TabsList>\r\n              \r\n              <TabsContent value=\"signin\">\r\n                <form onSubmit={handleSignIn} className=\"space-y-4\" data-testid=\"login-form\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"email\">Correo electrónico</Label>\r\n                    <Input\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      value={formData.email}\r\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\r\n                      required\r\n                      data-testid=\"email-input\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"password\">Contraseña</Label>\r\n                    <Input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      value={formData.password}\r\n                      onChange={(e) => handleInputChange(\"password\", e.target.value)}\r\n                      required\r\n                      minLength={6}\r\n                      data-testid=\"password-input\"\r\n                    />\r\n                  </div>\r\n                  <Button type=\"submit\" className=\"w-full\" disabled={isLoading} data-testid=\"login-button\">\r\n                    {isLoading ? \"Iniciando sesión...\" : \"Iniciar Sesión\"}\r\n                  </Button>\r\n                  \r\n                  {/* Demo Login Button */}\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    className=\"w-full border-purple-300 text-purple-600 hover:bg-purple-50\"\r\n                    onClick={handleDemoLogin}\r\n                    data-testid=\"demo-login-button\"\r\n                  >\r\n                    <Sparkles className=\"w-4 h-4 mr-2\" />\r\n                    Acceso Demo\r\n                  </Button>\r\n                </form>\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"signup\" data-testid=\"register-form\">\r\n                <div className=\"space-y-4\">\r\n                  <p className=\"text-center text-white/70\">\r\n                    El registro estará disponible próximamente\r\n                  </p>\r\n                </div>\r\n              </TabsContent>\r\n            </Tabs>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Blog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Careers.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Chat.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ChatAuthenticated.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setOnlineUsers' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":102,"column":23,"nodeType":null,"messageId":"unusedVar","endLine":102,"endColumn":37}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ArrowLeft, Send, Users, Lock, MessageCircle, Check, X, UserPlus } from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  senderId: string;\r\n  senderName: string;\r\n  senderAvatar: string;\r\n  message: string;\r\n  timestamp: Date;\r\n  isPrivate: boolean;\r\n}\r\n\r\ninterface ChatRequest {\r\n  id: string;\r\n  fromUserId: string;\r\n  fromUserName: string;\r\n  fromUserAvatar: string;\r\n  message: string;\r\n  timestamp: Date;\r\n  status: 'pending' | 'accepted' | 'declined';\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  avatar: string;\r\n  isOnline: boolean;\r\n  lastSeen?: Date;\r\n}\r\n\r\nconst ChatAuthenticated = () => {\r\n  const navigate = useNavigate();\r\n  const [currentMessage, setCurrentMessage] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"public\");\r\n  const [selectedPrivateChat, setSelectedPrivateChat] = useState<string | null>(null);\r\n  \r\n  // Mock data - en producción vendría de la API\r\n  const [publicMessages, setPublicMessages] = useState<ChatMessage[]>([\r\n    {\r\n      id: \"1\",\r\n      senderId: \"user1\",\r\n      senderName: \"María & Carlos\",\r\n      senderAvatar: \"/placeholder.svg\",\r\n      message: \"¡Hola a todos! ¿Alguien sabe de eventos este fin de semana?\",\r\n      timestamp: new Date(Date.now() - 300000),\r\n      isPrivate: false\r\n    },\r\n    {\r\n      id: \"2\", \r\n      senderId: \"user2\",\r\n      senderName: \"Ana\",\r\n      senderAvatar: \"/placeholder.svg\",\r\n      message: \"Nosotros organizamos una reunión privada el sábado 🔥\",\r\n      timestamp: new Date(Date.now() - 180000),\r\n      isPrivate: false\r\n    }\r\n  ]);\r\n\r\n  const [privateChats, setPrivateChats] = useState<{[key: string]: ChatMessage[]}>({\r\n    \"user1\": [\r\n      {\r\n        id: \"p1\",\r\n        senderId: \"user1\",\r\n        senderName: \"María & Carlos\",\r\n        senderAvatar: \"/placeholder.svg\",\r\n        message: \"Hola, nos gustó mucho su perfil. ¿Les interesa conocernos?\",\r\n        timestamp: new Date(Date.now() - 3600000),\r\n        isPrivate: true\r\n      }\r\n    ]\r\n  });\r\n\r\n  const [chatRequests, setChatRequests] = useState<ChatRequest[]>([\r\n    {\r\n      id: \"req1\",\r\n      fromUserId: \"user3\",\r\n      fromUserName: \"Roberto & Lisa\",\r\n      fromUserAvatar: \"/placeholder.svg\",\r\n      message: \"Nos encantaría chatear con ustedes. Somos una pareja experimentada.\",\r\n      timestamp: new Date(Date.now() - 7200000),\r\n      status: 'pending'\r\n    },\r\n    {\r\n      id: \"req2\",\r\n      fromUserId: \"user4\", \r\n      fromUserName: \"Sofía\",\r\n      fromUserAvatar: \"/placeholder.svg\",\r\n      message: \"Hola! Soy nueva en esto, me gustaría conocer gente como ustedes.\",\r\n      timestamp: new Date(Date.now() - 1800000),\r\n      status: 'pending'\r\n    }\r\n  ]);\r\n\r\n  const [onlineUsers, setOnlineUsers] = useState<User[]>([\r\n    {\r\n      id: \"user1\",\r\n      name: \"María & Carlos\",\r\n      avatar: \"/placeholder.svg\",\r\n      isOnline: true\r\n    },\r\n    {\r\n      id: \"user2\",\r\n      name: \"Ana\",\r\n      avatar: \"/placeholder.svg\", \r\n      isOnline: true\r\n    },\r\n    {\r\n      id: \"user5\",\r\n      name: \"Diego & Carmen\",\r\n      avatar: \"/placeholder.svg\",\r\n      isOnline: true\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // Verificar autenticación\r\n    const demoAuth = localStorage.getItem('demo_authenticated');\r\n    const demoUser = localStorage.getItem('demo_user');\r\n    \r\n    if (demoAuth !== 'true' || !demoUser) {\r\n      navigate('/auth');\r\n      return;\r\n    }\r\n  }, [navigate]);\r\n\r\n  const sendMessage = () => {\r\n    if (!currentMessage.trim()) return;\r\n\r\n    const newMessage: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      senderId: \"current_user\",\r\n      senderName: \"Tú\",\r\n      senderAvatar: \"/placeholder.svg\",\r\n      message: currentMessage,\r\n      timestamp: new Date(),\r\n      isPrivate: activeTab === \"private\"\r\n    };\r\n\r\n    if (activeTab === \"public\") {\r\n      setPublicMessages(prev => [...prev, newMessage]);\r\n    } else if (selectedPrivateChat) {\r\n      setPrivateChats(prev => ({\r\n        ...prev,\r\n        [selectedPrivateChat]: [...(prev[selectedPrivateChat] || []), newMessage]\r\n      }));\r\n    }\r\n\r\n    setCurrentMessage(\"\");\r\n  };\r\n\r\n  const handleChatRequest = (requestId: string, action: 'accept' | 'decline') => {\r\n    setChatRequests(prev => \r\n      prev.map(req => \r\n        req.id === requestId \r\n          ? { ...req, status: action === 'accept' ? 'accepted' : 'declined' }\r\n          : req\r\n      )\r\n    );\r\n\r\n    if (action === 'accept') {\r\n      const request = chatRequests.find(req => req.id === requestId);\r\n      if (request) {\r\n        // Iniciar chat privado\r\n        setPrivateChats(prev => ({\r\n          ...prev,\r\n          [request.fromUserId]: []\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatTime = (date: Date) => {\r\n    return date.toLocaleTimeString('es-MX', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  const pendingRequests = chatRequests.filter(req => req.status === 'pending');\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 relative overflow-hidden\">\r\n      {/* Animated Background */}\r\n      <div className=\"absolute inset-0\">\r\n        <div className=\"absolute top-20 left-10 w-72 h-72 bg-pink-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\r\n        <div className=\"absolute top-40 right-10 w-72 h-72 bg-purple-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\r\n        <div className=\"absolute -bottom-8 left-20 w-72 h-72 bg-red-500/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"relative z-10 min-h-screen\">\r\n        {/* Header */}\r\n        <div className=\"bg-black/30 backdrop-blur-sm border-b border-white/10 p-4\">\r\n          <div className=\"flex items-center justify-between max-w-6xl mx-auto\">\r\n            <Button \r\n              variant=\"ghost\" \r\n              onClick={() => navigate(-1)}\r\n              className=\"text-white hover:bg-white/10 transition-all duration-300 hover:scale-105\"\r\n            >\r\n              <ArrowLeft className=\"h-5 w-5 mr-2\" />\r\n              Volver\r\n            </Button>\r\n            <div className=\"flex items-center gap-2\">\r\n              <MessageCircle className=\"h-6 w-6 text-white\" />\r\n              <h1 className=\"text-2xl font-bold text-white\">Chat Swinger</h1>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"flex items-center gap-1\">\r\n                <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\r\n                <span className=\"text-white text-sm\">{onlineUsers.length} en línea</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-6xl mx-auto p-6 grid lg:grid-cols-4 gap-6 h-[calc(100vh-120px)]\">\r\n          {/* Sidebar - Online Users & Requests */}\r\n          <div className=\"lg:col-span-1 space-y-4\">\r\n            {/* Chat Requests */}\r\n            {pendingRequests.length > 0 && (\r\n              <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n                <CardContent className=\"p-4\">\r\n                  <div className=\"flex items-center gap-2 mb-3\">\r\n                    <UserPlus className=\"h-4 w-4 text-white\" />\r\n                    <h3 className=\"font-semibold text-white\">Solicitudes</h3>\r\n                    <Badge variant=\"secondary\" className=\"bg-pink-500 text-white\">\r\n                      {pendingRequests.length}\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"space-y-3\">\r\n                    {pendingRequests.map((request) => (\r\n                      <div key={request.id} className=\"bg-white/5 rounded-lg p-3\">\r\n                        <div className=\"flex items-start gap-3\">\r\n                          <Avatar className=\"h-8 w-8\">\r\n                            <AvatarImage src={request.fromUserAvatar} />\r\n                            <AvatarFallback>{request.fromUserName[0]}</AvatarFallback>\r\n                          </Avatar>\r\n                          <div className=\"flex-1 min-w-0\">\r\n                            <p className=\"text-white font-medium text-sm\">{request.fromUserName}</p>\r\n                            <p className=\"text-white/70 text-xs truncate\">{request.message}</p>\r\n                            <div className=\"flex gap-2 mt-2\">\r\n                              <Button\r\n                                size=\"sm\"\r\n                                onClick={() => handleChatRequest(request.id, 'accept')}\r\n                                className=\"bg-green-600 hover:bg-green-700 text-white h-6 px-2 text-xs\"\r\n                              >\r\n                                <Check className=\"h-3 w-3\" />\r\n                              </Button>\r\n                              <Button\r\n                                size=\"sm\"\r\n                                variant=\"destructive\"\r\n                                onClick={() => handleChatRequest(request.id, 'decline')}\r\n                                className=\"h-6 px-2 text-xs\"\r\n                              >\r\n                                <X className=\"h-3 w-3\" />\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {/* Online Users */}\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n              <CardContent className=\"p-4\">\r\n                <div className=\"flex items-center gap-2 mb-3\">\r\n                  <Users className=\"h-4 w-4 text-white\" />\r\n                  <h3 className=\"font-semibold text-white\">En Línea</h3>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  {onlineUsers.map((user) => (\r\n                    <div \r\n                      key={user.id}\r\n                      className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-white/5 cursor-pointer transition-colors\"\r\n                      onClick={() => {\r\n                        setActiveTab(\"private\");\r\n                        setSelectedPrivateChat(user.id);\r\n                      }}\r\n                    >\r\n                      <div className=\"relative\">\r\n                        <Avatar className=\"h-8 w-8\">\r\n                          <AvatarImage src={user.avatar} />\r\n                          <AvatarFallback>{user.name[0]}</AvatarFallback>\r\n                        </Avatar>\r\n                        <div className=\"absolute -bottom-1 -right-1 w-3 h-3 bg-green-400 rounded-full border-2 border-white\"></div>\r\n                      </div>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <p className=\"text-white font-medium text-sm truncate\">{user.name}</p>\r\n                        <p className=\"text-green-400 text-xs\">En línea</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Main Chat Area */}\r\n          <div className=\"lg:col-span-3\">\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 h-full flex flex-col\">\r\n              <CardContent className=\"p-0 flex flex-col h-full\">\r\n                {/* Chat Tabs */}\r\n                <Tabs value={activeTab} onValueChange={setActiveTab} className=\"flex flex-col h-full\">\r\n                  <div className=\"border-b border-white/10 p-4\">\r\n                    <TabsList className=\"grid w-full grid-cols-2 bg-white/5\">\r\n                      <TabsTrigger value=\"public\" className=\"data-[state=active]:bg-pink-500 data-[state=active]:text-white\">\r\n                        <Users className=\"h-4 w-4 mr-2\" />\r\n                        Chat Público\r\n                      </TabsTrigger>\r\n                      <TabsTrigger value=\"private\" className=\"data-[state=active]:bg-purple-500 data-[state=active]:text-white\">\r\n                        <Lock className=\"h-4 w-4 mr-2\" />\r\n                        Chat Privado\r\n                      </TabsTrigger>\r\n                    </TabsList>\r\n                  </div>\r\n\r\n                  {/* Messages Area */}\r\n                  <div className=\"flex-1 overflow-hidden\">\r\n                    <TabsContent value=\"public\" className=\"h-full m-0\">\r\n                      <div className=\"h-full flex flex-col\">\r\n                        <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                          {publicMessages.map((message) => (\r\n                            <div key={message.id} className=\"flex gap-3\">\r\n                              <Avatar className=\"h-8 w-8 flex-shrink-0\">\r\n                                <AvatarImage src={message.senderAvatar} />\r\n                                <AvatarFallback>{message.senderName[0]}</AvatarFallback>\r\n                              </Avatar>\r\n                              <div className=\"flex-1\">\r\n                                <div className=\"flex items-center gap-2 mb-1\">\r\n                                  <span className=\"font-medium text-white text-sm\">{message.senderName}</span>\r\n                                  <span className=\"text-white/50 text-xs\">{formatTime(message.timestamp)}</span>\r\n                                </div>\r\n                                <div className=\"bg-white/10 rounded-lg p-3\">\r\n                                  <p className=\"text-white\">{message.message}</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </TabsContent>\r\n\r\n                    <TabsContent value=\"private\" className=\"h-full m-0\">\r\n                      <div className=\"h-full flex flex-col\">\r\n                        {selectedPrivateChat ? (\r\n                          <>\r\n                            <div className=\"border-b border-white/10 p-4\">\r\n                              <div className=\"flex items-center gap-3\">\r\n                                <Avatar className=\"h-8 w-8\">\r\n                                  <AvatarImage src=\"/placeholder.svg\" />\r\n                                  <AvatarFallback>\r\n                                    {onlineUsers.find(u => u.id === selectedPrivateChat)?.name[0]}\r\n                                  </AvatarFallback>\r\n                                </Avatar>\r\n                                <div>\r\n                                  <p className=\"font-medium text-white\">\r\n                                    {onlineUsers.find(u => u.id === selectedPrivateChat)?.name}\r\n                                  </p>\r\n                                  <p className=\"text-green-400 text-sm\">En línea</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n                              {(privateChats[selectedPrivateChat] || []).map((message) => (\r\n                                <div key={message.id} className=\"flex gap-3\">\r\n                                  <Avatar className=\"h-8 w-8 flex-shrink-0\">\r\n                                    <AvatarImage src={message.senderAvatar} />\r\n                                    <AvatarFallback>{message.senderName[0]}</AvatarFallback>\r\n                                  </Avatar>\r\n                                  <div className=\"flex-1\">\r\n                                    <div className=\"flex items-center gap-2 mb-1\">\r\n                                      <span className=\"font-medium text-white text-sm\">{message.senderName}</span>\r\n                                      <span className=\"text-white/50 text-xs\">{formatTime(message.timestamp)}</span>\r\n                                    </div>\r\n                                    <div className=\"bg-purple-500/20 rounded-lg p-3\">\r\n                                      <p className=\"text-white\">{message.message}</p>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"flex-1 flex items-center justify-center\">\r\n                            <div className=\"text-center\">\r\n                              <Lock className=\"h-12 w-12 text-white/50 mx-auto mb-4\" />\r\n                              <p className=\"text-white/70\">Selecciona un usuario para iniciar chat privado</p>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </TabsContent>\r\n                  </div>\r\n\r\n                  {/* Message Input */}\r\n                  <div className=\"border-t border-white/10 p-4\">\r\n                    <div className=\"flex gap-3\">\r\n                      <Input\r\n                        value={currentMessage}\r\n                        onChange={(e) => setCurrentMessage(e.target.value)}\r\n                        placeholder={activeTab === \"public\" ? \"Escribe un mensaje público...\" : \"Escribe un mensaje privado...\"}\r\n                        className=\"flex-1 bg-white/10 border-white/20 text-white placeholder:text-white/50\"\r\n                        onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n                      />\r\n                      <Button\r\n                        onClick={sendMessage}\r\n                        disabled={!currentMessage.trim() || (activeTab === \"private\" && !selectedPrivateChat)}\r\n                        className=\"bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white\"\r\n                      >\r\n                        <Send className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Tabs>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatAuthenticated;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ChatInfo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Dashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Discover.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Donations.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\EditProfileCouple.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'navbarStyles' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":55,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":55,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { ArrowLeft, Save, Camera, X, Users, MapPin, AlertCircle, Sun, Moon, Eye, EyeOff } from \"lucide-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NavigationEnhanced from \"@/components/NavigationEnhanced\";\r\nimport ImageUpload from \"@/components/profile/ImageUpload\";\r\nimport { generateMockCouple } from \"@/lib/data\";\r\nimport { lifestyleInterests } from \"@/lib/lifestyle-interests\";\r\nimport { useGeolocation } from \"@/hooks/useGeolocation\";\r\nimport { logger } from '@/lib/logger';\r\nimport { useDemoThemeConfig, getNavbarStyles, useProfileTheme } from '@/hooks/useProfileTheme';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst EditProfileCouple = () => {\r\n  const navigate = useNavigate();\r\n  const [profile, setProfile] = useState<any>(null);\r\n  const [formData, setFormData] = useState({\r\n    coupleName: \"\",\r\n    location: \"\",\r\n    bio: \"\",\r\n    interests: [] as string[],\r\n    partner1: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      nickname: \"\",\r\n      age: \"\",\r\n      profession: \"\",\r\n      bio: \"\",\r\n      avatar: \"\",\r\n      interests: [] as string[],\r\n      publicImages: [] as string[],\r\n      privateImages: [] as string[]\r\n    },\r\n    partner2: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      nickname: \"\",\r\n      age: \"\",\r\n      profession: \"\",\r\n      bio: \"\",\r\n      avatar: \"\",\r\n      interests: [] as string[],\r\n      publicImages: [] as string[],\r\n      privateImages: [] as string[]\r\n    }\r\n  });\r\n  \r\n  // Demo theme configuration\r\n  const { demoTheme, setDemoTheme, navbarStyle, setNavbarStyle } = useDemoThemeConfig();\r\n  const themeConfig = useProfileTheme('couple', ['male', 'female'], demoTheme);\r\n  const navbarStyles = getNavbarStyles(navbarStyle);\r\n  \r\n  const { location, error: locationError, getCurrentLocation } = useGeolocation();\r\n  const [locationStatus, setLocationStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\r\n\r\n  const availableInterests = lifestyleInterests;\r\n\r\n  useEffect(() => {\r\n    const loadProfile = async () => {\r\n      try {\r\n        // Verificar autenticación demo y cargar perfil del usuario\r\n        const demoAuth = localStorage.getItem('demo_authenticated');\r\n        const demoUser = localStorage.getItem('demo_user');\r\n        \r\n        if (demoAuth !== 'true' || !demoUser) {\r\n          navigate('/auth');\r\n          return;\r\n        }\r\n        \r\n        const user = JSON.parse(demoUser);\r\n        let profileData;\r\n        \r\n        // Si es perfil pareja, usar datos del usuario demo\r\n        if (user.accountType === 'couple') {\r\n          profileData = user;\r\n        } else {\r\n          // Para otros tipos, generar perfil mock\r\n          profileData = generateMockCouple();\r\n        }\r\n        \r\n        setProfile(profileData);\r\n        setFormData({\r\n          coupleName: profileData.name || profileData.coupleName || \"\",\r\n          location: profileData.location || \"\",\r\n          bio: profileData.bio || \"\",\r\n          interests: profileData.interests || [],\r\n          partner1: {\r\n            firstName: profileData.partner1?.name?.split(' ')[0] || \"\",\r\n            lastName: profileData.partner1?.name?.split(' ')[1] || \"\",\r\n            nickname: profileData.partner1?.nickname || \"\",\r\n            age: profileData.partner1?.age?.toString() || \"\",\r\n            profession: profileData.partner1?.profession || \"\",\r\n            bio: profileData.partner1?.bio || \"\",\r\n            avatar: profileData.partner1?.avatar || \"\",\r\n            interests: profileData.partner1?.interests || [],\r\n            publicImages: profileData.partner1?.publicImages || [],\r\n            privateImages: profileData.partner1?.privateImages || []\r\n          },\r\n          partner2: {\r\n            firstName: profileData.partner2?.name?.split(' ')[0] || \"\",\r\n            lastName: profileData.partner2?.name?.split(' ')[1] || \"\",\r\n            nickname: profileData.partner2?.nickname || \"\",\r\n            age: profileData.partner2?.age?.toString() || \"\",\r\n            profession: profileData.partner2?.profession || \"\",\r\n            bio: profileData.partner2?.bio || \"\",\r\n            avatar: profileData.partner2?.avatar || \"\",\r\n            interests: profileData.partner2?.interests || [],\r\n            publicImages: profileData.partner2?.publicImages || [],\r\n            privateImages: profileData.partner2?.privateImages || []\r\n          }\r\n        });\r\n      } catch (error) {\r\n        logger.error('Error cargando perfil de pareja:', { error: String(error) });\r\n        // Fallback con perfil demo\r\n        const fallbackProfile = generateMockCouple();\r\n        setProfile(fallbackProfile);\r\n        setFormData({\r\n          coupleName: fallbackProfile.coupleName || \"\",\r\n          location: fallbackProfile.location || \"\",\r\n          bio: fallbackProfile.bio || \"\",\r\n          interests: fallbackProfile.interests || [],\r\n          partner1: {\r\n            firstName: fallbackProfile.partner1?.name?.split(' ')[0] || \"\",\r\n            lastName: fallbackProfile.partner1?.name?.split(' ')[1] || \"\",\r\n            nickname: \"\",\r\n            age: fallbackProfile.partner1?.age?.toString() || \"\",\r\n            profession: fallbackProfile.partner1?.profession || \"\",\r\n            bio: fallbackProfile.partner1?.bio || \"\",\r\n            avatar: fallbackProfile.partner1?.avatar || \"\",\r\n            interests: fallbackProfile.partner1?.interests || [],\r\n            publicImages: [],\r\n            privateImages: []\r\n          },\r\n          partner2: {\r\n            firstName: fallbackProfile.partner2?.name?.split(' ')[0] || \"\",\r\n            lastName: fallbackProfile.partner2?.name?.split(' ')[1] || \"\",\r\n            nickname: \"\",\r\n            age: fallbackProfile.partner2?.age?.toString() || \"\",\r\n            profession: fallbackProfile.partner2?.profession || \"\",\r\n            bio: fallbackProfile.partner2?.bio || \"\",\r\n            avatar: fallbackProfile.partner2?.avatar || \"\",\r\n            interests: fallbackProfile.partner2?.interests || [],\r\n            publicImages: [],\r\n            privateImages: []\r\n          }\r\n        });\r\n      }\r\n    };\r\n    \r\n    loadProfile();\r\n  }, [navigate]);\r\n\r\n  const handleInputChange = (field: string, value: string, partner?: 'partner1' | 'partner2') => {\r\n    if (partner) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [partner]: {\r\n          ...prev[partner],\r\n          [field]: value\r\n        }\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [field]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const toggleInterest = (interest: string, partner?: 'partner1' | 'partner2') => {\r\n    if (partner) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [partner]: {\r\n          ...prev[partner],\r\n          interests: prev[partner].interests.includes(interest)\r\n            ? prev[partner].interests.filter(i => i !== interest)\r\n            : [...prev[partner].interests, interest]\r\n        }\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        interests: prev.interests.includes(interest)\r\n          ? prev.interests.filter(i => i !== interest)\r\n          : [...prev.interests, interest]\r\n      }));\r\n    }\r\n  };\r\n  \r\n  const handleLocationDetection = () => {\r\n    setLocationStatus('loading');\r\n    getCurrentLocation();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (location) {\r\n      // Simular geocodificación inversa para obtener ciudad\r\n      const mockCities = ['Ciudad de México', 'Guadalajara', 'Monterrey', 'Puebla', 'Tijuana', 'León', 'Juárez', 'Torreón', 'Querétaro', 'Mérida'];\r\n      const randomCity = mockCities[Math.floor(Math.random() * mockCities.length)];\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        location: randomCity\r\n      }));\r\n      setLocationStatus('success');\r\n    }\r\n    if (locationError) {\r\n      setLocationStatus('error');\r\n    }\r\n  }, [location, locationError, setLocationStatus]);\r\n  \r\n  const handleImageUploaded = (partner: 'partner1' | 'partner2', type: 'avatar' | 'public' | 'private', url: string) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [partner]: {\r\n        ...prev[partner],\r\n        [type === 'avatar' ? 'avatar' : type === 'public' ? 'publicImages' : 'privateImages']: \r\n          type === 'avatar' ? url : [...(prev[partner][type === 'public' ? 'publicImages' : 'privateImages']), url]\r\n      }\r\n    }));\r\n    logger.info(`Imagen ${type} subida para ${partner}`, { partner, type, url });\r\n  };\r\n\r\n  const handleImageError = (error: string) => {\r\n    logger.error('Error subiendo imagen', { error });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    logger.info(\"Guardando perfil de pareja:\", formData);\r\n    navigate('/profile-couple');\r\n  };\r\n\r\n  if (!profile) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-pink-100 via-purple-50 to-indigo-100 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-white\">Cargando...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`min-h-screen ${themeConfig.backgroundClass} pb-20`}>\r\n      {/* Header */}\r\n      <div className=\"bg-white/10 backdrop-blur-md border-b border-white/20 p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Button \r\n            onClick={() => navigate('/profile-couple')}\r\n            className=\"text-white hover:bg-white/20 bg-transparent border-none\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n            Volver al perfil\r\n          </Button>\r\n          <h1 className=\"text-xl font-bold text-gray-900 flex items-center gap-2\">\r\n            <Users className=\"h-5 w-5\" />\r\n            Editar Perfil de Pareja\r\n          </h1>\r\n          <Button \r\n            onClick={handleSave}\r\n            className=\"bg-gradient-to-r from-pink-500 to-purple-500 hover:from-pink-600 hover:to-purple-600 text-white\"\r\n          >\r\n            <Save className=\"h-4 w-4 mr-2\" />\r\n            Guardar\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"container mx-auto px-4 py-6 pb-24 space-y-6 max-w-4xl\">\r\n        {/* Fotos de la pareja */}\r\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-md border-purple-300/30 shadow-lg\">\r\n          <CardContent className=\"p-6\">\r\n            <h3 className=\"font-semibold text-white mb-4 flex items-center\">\r\n              <Users className=\"h-5 w-5 mr-2 text-purple-400\" />\r\n              Fotos de la pareja\r\n            </h3>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"space-y-2\">\r\n                <div className=\"w-full h-40\">\r\n                  <ImageUpload\r\n                    onImageUploaded={(url) => handleImageUploaded('partner1', 'avatar', url)}\r\n                    onError={handleImageError}\r\n                    userId={`${profile.id}-partner1`}\r\n                    currentImage={formData.partner1.avatar}\r\n                    type=\"profile\"\r\n                    profileType=\"couple\"\r\n                    partnerName={formData.partner1.firstName}\r\n                    className=\"w-full h-full\"\r\n                  />\r\n                </div>\r\n                <p className=\"text-center text-sm text-white\">{formData.partner1.firstName} (Ella)</p>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"w-full h-40\">\r\n                  <ImageUpload\r\n                    onImageUploaded={(url) => handleImageUploaded('partner2', 'avatar', url)}\r\n                    onError={handleImageError}\r\n                    userId={`${profile.id}-partner2`}\r\n                    currentImage={formData.partner2.avatar}\r\n                    type=\"profile\"\r\n                    profileType=\"couple\"\r\n                    partnerName={formData.partner2.firstName}\r\n                    className=\"w-full h-full\"\r\n                  />\r\n                </div>\r\n                <p className=\"text-center text-sm text-white\">{formData.partner2.firstName} (Él)</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Información general de la pareja */}\r\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-md border-purple-300/30 shadow-lg\">\r\n          <CardContent className=\"p-6 space-y-4\">\r\n            <h3 className=\"font-semibold text-white mb-4\">Información general</h3>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Nombre de la pareja</label>\r\n              <Input\r\n                value={formData.coupleName}\r\n                onChange={(e) => handleInputChange('coupleName', e.target.value)}\r\n                placeholder=\"Ej: Ana & Carlos\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Ubicación</label>\r\n              <div className=\"space-y-2\">\r\n                <Input\r\n                  value={formData.location}\r\n                  onChange={(e) => handleInputChange('location', e.target.value)}\r\n                  placeholder=\"Ciudad donde viven\"\r\n                />\r\n                {locationError && (\r\n                  <div className=\"flex items-center text-red-500 text-sm\">\r\n                    <AlertCircle className=\"h-4 w-4 mr-1\" />\r\n                    Error al detectar ubicación\r\n                  </div>\r\n                )}\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={handleLocationDetection}\r\n                  disabled={locationStatus === 'loading'}\r\n                  className=\"w-full border border-gray-300 bg-transparent hover:bg-gray-100 text-gray-700 px-3 py-1 text-sm\"\r\n                >\r\n                  <MapPin className=\"h-4 w-4 mr-2\" />\r\n                  {locationStatus === 'loading' ? 'Detectando...' : 'Reintentar detección de ubicación'}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Sobre nosotros</label>\r\n              <Textarea\r\n                value={formData.bio}\r\n                onChange={(e) => handleInputChange('bio', e.target.value)}\r\n                placeholder=\"Cuéntanos sobre ustedes como pareja, qué buscan...\"\r\n                rows={4}\r\n                className=\"resize-none\"\r\n              />\r\n              <p className=\"text-xs text-white/80 mt-2\">\r\n                {formData.bio.length}/500 caracteres\r\n              </p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Información del Partner 1 (Ella) */}\r\n        <Card className=\"bg-gradient-to-br from-pink-500/20 to-rose-500/20 backdrop-blur-md border-l-4 border-pink-400 shadow-lg\">\r\n          <CardContent className=\"p-6 space-y-4\">\r\n            <h3 className=\"font-semibold text-white mb-4\">Información de Ella</h3>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-white mb-2\">Nombre</label>\r\n                <Input\r\n                  value={formData.partner1.firstName}\r\n                  onChange={(e) => handleInputChange('firstName', e.target.value, 'partner1')}\r\n                  placeholder=\"Nombre\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-white mb-2\">Apellido</label>\r\n                <Input\r\n                  value={formData.partner1.lastName}\r\n                  onChange={(e) => handleInputChange('lastName', e.target.value, 'partner1')}\r\n                  placeholder=\"Apellido\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-white mb-2\">Apodo</label>\r\n                <Input\r\n                  value={formData.partner1.nickname}\r\n                  onChange={(e) => handleInputChange('nickname', e.target.value, 'partner1')}\r\n                  placeholder=\"Apodo\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-white mb-2\">Edad</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={formData.partner1.age}\r\n                  onChange={(e) => handleInputChange('age', e.target.value, 'partner1')}\r\n                  placeholder=\"Edad\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Profesión</label>\r\n              <Input\r\n                value={formData.partner1.profession}\r\n                onChange={(e) => handleInputChange('profession', e.target.value, 'partner1')}\r\n                placeholder=\"Profesión\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Descripción personal</label>\r\n              <Textarea\r\n                value={formData.partner1.bio}\r\n                onChange={(e) => handleInputChange('bio', e.target.value, 'partner1')}\r\n                placeholder=\"Descripción personal...\"\r\n                rows={3}\r\n                className=\"resize-none\"\r\n              />\r\n            </div>\r\n            \r\n            {/* Galería de imágenes para Partner 1 */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Galería de Imágenes</label>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <p className=\"text-xs text-white/80 mb-2\">Imágenes Públicas</p>\r\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center\">\r\n                    <Camera className=\"h-8 w-8 mx-auto text-white/60 mb-2\" />\r\n                    <div className=\"w-full h-32\">\r\n                      <ImageUpload\r\n                        onImageUploaded={(url) => handleImageUploaded('partner1', 'public', url)}\r\n                        onError={handleImageError}\r\n                        userId={`${profile.id}-partner1-public`}\r\n                        type=\"gallery\"\r\n                        profileType=\"couple\"\r\n                        partnerName={formData.partner1.firstName}\r\n                        className=\"w-full h-full\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-xs text-white/80 mb-2\">Imágenes Privadas</p>\r\n                  <div className=\"border-2 border-dashed border-pink-300 rounded-lg p-4 text-center\">\r\n                    <Camera className=\"h-8 w-8 mx-auto text-pink-400 mb-2\" />\r\n                    <div className=\"w-full h-32\">\r\n                      <ImageUpload\r\n                        onImageUploaded={(url) => handleImageUploaded('partner1', 'private', url)}\r\n                        onError={handleImageError}\r\n                        userId={`${profile.id}-partner1-private`}\r\n                        type=\"gallery\"\r\n                        profileType=\"couple\"\r\n                        partnerName={formData.partner1.firstName}\r\n                        className=\"w-full h-full\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Intereses individuales para Partner 1 */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Intereses Lifestyle</label>\r\n              <p className=\"text-xs text-white/80 mb-3\">Selecciona sus intereses para encontrar matches compatibles</p>\r\n              <div className=\"flex flex-wrap gap-2 max-h-32 overflow-y-auto p-2 border rounded-lg bg-pink-50\">\r\n                {availableInterests.map((interest) => (\r\n                  <Badge\r\n                    key={interest}\r\n                    className={`cursor-pointer transition-all text-xs ${\r\n                      formData.partner1.interests.includes(interest)\r\n                        ? \"bg-gradient-to-r from-pink-500 to-rose-500 text-white shadow-md\"\r\n                        : \"hover:bg-pink-100 text-gray-800 border border-pink-200\"\r\n                    }`}\r\n                    onClick={() => toggleInterest(interest, 'partner1')}\r\n                  >\r\n                    {interest}\r\n                    {formData.partner1.interests.includes(interest) && (\r\n                      <X className=\"h-3 w-3 ml-1\" />\r\n                    )}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n              <p className=\"text-xs text-white/80 mt-2\">\r\n                {formData.partner1.interests.length}/10 seleccionados\r\n              </p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Información del Partner 2 (Él) */}\r\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-blue-500/20 backdrop-blur-md border-l-4 border-purple-400 shadow-lg\">\r\n          <CardContent className=\"p-6 space-y-4\">\r\n            <h3 className=\"font-semibold text-white mb-4\">Información de Él</h3>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-white mb-2\">Nombre</label>\r\n                <Input\r\n                  value={formData.partner2.firstName}\r\n                  onChange={(e) => handleInputChange('firstName', e.target.value, 'partner2')}\r\n                  placeholder=\"Nombre\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-white mb-2\">Apellido</label>\r\n                <Input\r\n                  value={formData.partner2.lastName}\r\n                  onChange={(e) => handleInputChange('lastName', e.target.value, 'partner2')}\r\n                  placeholder=\"Apellido\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-white mb-2\">Apodo</label>\r\n                <Input\r\n                  value={formData.partner2.nickname}\r\n                  onChange={(e) => handleInputChange('nickname', e.target.value, 'partner2')}\r\n                  placeholder=\"Apodo\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-white mb-2\">Edad</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={formData.partner2.age}\r\n                  onChange={(e) => handleInputChange('age', e.target.value, 'partner2')}\r\n                  placeholder=\"Edad\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Profesión</label>\r\n              <Input\r\n                value={formData.partner2.profession}\r\n                onChange={(e) => handleInputChange('profession', e.target.value, 'partner2')}\r\n                placeholder=\"Profesión\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Descripción personal</label>\r\n              <Textarea\r\n                value={formData.partner2.bio}\r\n                onChange={(e) => handleInputChange('bio', e.target.value, 'partner2')}\r\n                placeholder=\"Descripción personal...\"\r\n                rows={3}\r\n                className=\"resize-none\"\r\n              />\r\n            </div>\r\n            \r\n            {/* Galería de imágenes para Partner 2 */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Galería de Imágenes</label>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <p className=\"text-xs text-white/80 mb-2\">Imágenes Públicas</p>\r\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center\">\r\n                    <Camera className=\"h-8 w-8 mx-auto text-white/60 mb-2\" />\r\n                    <div className=\"w-full h-32\">\r\n                      <ImageUpload\r\n                        onImageUploaded={(url) => handleImageUploaded('partner2', 'public', url)}\r\n                        onError={handleImageError}\r\n                        userId={`${profile.id}-partner2-public`}\r\n                        type=\"gallery\"\r\n                        profileType=\"couple\"\r\n                        partnerName={formData.partner2.firstName}\r\n                        className=\"w-full h-full\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-xs text-white/80 mb-2\">Imágenes Privadas</p>\r\n                  <div className=\"border-2 border-dashed border-blue-300 rounded-lg p-4 text-center\">\r\n                    <Camera className=\"h-8 w-8 mx-auto text-blue-400 mb-2\" />\r\n                    <div className=\"w-full h-32\">\r\n                      <ImageUpload\r\n                        onImageUploaded={(url) => handleImageUploaded('partner2', 'private', url)}\r\n                        onError={handleImageError}\r\n                        userId={`${profile.id}-partner2-private`}\r\n                        type=\"gallery\"\r\n                        profileType=\"couple\"\r\n                        partnerName={formData.partner2.firstName}\r\n                        className=\"w-full h-full\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Intereses individuales para Partner 2 */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-white mb-2\">Intereses Lifestyle</label>\r\n              <p className=\"text-xs text-white/80 mb-3\">Selecciona sus intereses para encontrar matches compatibles</p>\r\n              <div className=\"flex flex-wrap gap-2 max-h-32 overflow-y-auto p-2 border rounded-lg bg-blue-50\">\r\n                {availableInterests.map((interest) => (\r\n                  <Badge\r\n                    key={interest}\r\n                    className={`cursor-pointer transition-all text-xs ${\r\n                      formData.partner2.interests.includes(interest)\r\n                        ? \"bg-gradient-to-r from-blue-500 to-indigo-500 text-white shadow-md\"\r\n                        : \"hover:bg-blue-100 text-gray-800 border border-blue-200\"\r\n                    }`}\r\n                    onClick={() => toggleInterest(interest, 'partner2')}\r\n                  >\r\n                    {interest}\r\n                    {formData.partner2.interests.includes(interest) && (\r\n                      <X className=\"h-3 w-3 ml-1\" />\r\n                    )}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n              <p className=\"text-xs text-white/80 mt-2\">\r\n                {formData.partner2.interests.length}/10 seleccionados\r\n              </p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Intereses compartidos */}\r\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-md border-purple-300/30 shadow-lg\">\r\n          <CardContent className=\"p-6\">\r\n            <h3 className=\"font-semibold text-white mb-4\">Intereses compartidos</h3>\r\n            <p className=\"text-sm text-white/80 mb-4\">Seleccionen hasta 6 intereses que los representen como pareja</p>\r\n            <div className=\"flex flex-wrap gap-2 max-h-48 overflow-y-auto p-2 border rounded-lg bg-gray-50\">\r\n              {availableInterests.map((interest) => (\r\n                <Badge\r\n                  key={interest}\r\n                  className={`cursor-pointer transition-all text-contrast ${\r\n                    formData.interests.includes(interest)\r\n                      ? \"bg-gradient-to-r from-pink-500 to-purple-500 text-white shadow-md\"\r\n                      : \"hover:bg-gray-200 text-gray-800 border border-gray-300\"\r\n                  }`}\r\n                  onClick={() => toggleInterest(interest)}\r\n                >\r\n                  {interest}\r\n                  {formData.interests.includes(interest) && (\r\n                    <X className=\"h-3 w-3 ml-1\" />\r\n                  )}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n            <p className=\"text-xs text-white/80 mt-2\">\r\n              {formData.interests.length}/6 seleccionados\r\n            </p>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* 🎨 Personalización Visual */}\r\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-md border-purple-300/30 shadow-lg\">\r\n          <CardContent className=\"p-6\">\r\n            <h3 className=\"font-semibold text-white mb-4 flex items-center gap-2\">\r\n              🎨 Personalización Visual\r\n            </h3>\r\n            \r\n            {/* Selector de Tema */}\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"text-sm text-white/90 mb-2 block\">Tema de Colores</label>\r\n                <div className=\"grid grid-cols-2 gap-3\">\r\n                  <motion.button\r\n                    whileHover={{ scale: 1.02 }}\r\n                    whileTap={{ scale: 0.98 }}\r\n                    onClick={() => setDemoTheme('light')}\r\n                    className={`p-3 rounded-lg border-2 transition-all ${\r\n                      demoTheme === 'light'\r\n                        ? 'border-yellow-400 bg-gradient-to-br from-pink-300 via-purple-200 to-indigo-200'\r\n                        : 'border-white/30 bg-white/10 hover:bg-white/20'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 text-sm font-medium\">\r\n                      <Sun className=\"h-4 w-4\" />\r\n                      <span className={demoTheme === 'light' ? 'text-gray-900' : 'text-white'}>\r\n                        ☀️ Claro\r\n                      </span>\r\n                    </div>\r\n                  </motion.button>\r\n                  \r\n                  <motion.button\r\n                    whileHover={{ scale: 1.02 }}\r\n                    whileTap={{ scale: 0.98 }}\r\n                    onClick={() => setDemoTheme('dark')}\r\n                    className={`p-3 rounded-lg border-2 transition-all ${\r\n                      demoTheme === 'dark'\r\n                        ? 'border-purple-400 bg-gradient-to-br from-gray-900 via-gray-800 to-black'\r\n                        : 'border-white/30 bg-white/10 hover:bg-white/20'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 text-sm font-medium text-white\">\r\n                      <Moon className=\"h-4 w-4\" />\r\n                      🌙 Oscuro\r\n                    </div>\r\n                  </motion.button>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Selector de Navbar */}\r\n              <div>\r\n                <label className=\"text-sm text-white/90 mb-2 block\">Estilo de Navegación</label>\r\n                <div className=\"grid grid-cols-2 gap-3\">\r\n                  <motion.button\r\n                    whileHover={{ scale: 1.02 }}\r\n                    whileTap={{ scale: 0.98 }}\r\n                    onClick={() => setNavbarStyle('transparent')}\r\n                    className={`p-3 rounded-lg border-2 transition-all ${\r\n                      navbarStyle === 'transparent'\r\n                        ? 'border-blue-400 bg-transparent'\r\n                        : 'border-white/30 bg-white/10 hover:bg-white/20'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 text-sm font-medium text-white\">\r\n                      <Eye className=\"h-4 w-4\" />\r\n                      Transparente\r\n                    </div>\r\n                  </motion.button>\r\n                  \r\n                  <motion.button\r\n                    whileHover={{ scale: 1.02 }}\r\n                    whileTap={{ scale: 0.98 }}\r\n                    onClick={() => setNavbarStyle('solid')}\r\n                    className={`p-3 rounded-lg border-2 transition-all ${\r\n                      navbarStyle === 'solid'\r\n                        ? 'border-purple-400 bg-gradient-to-r from-purple-600 to-pink-600'\r\n                        : 'border-white/30 bg-white/10 hover:bg-white/20'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 text-sm font-medium text-white\">\r\n                      <EyeOff className=\"h-4 w-4\" />\r\n                      Sólida\r\n                    </div>\r\n                  </motion.button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Configuración de privacidad */}\r\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-md border-purple-300/30 shadow-lg\">\r\n          <CardContent className=\"p-6\">\r\n            <h3 className=\"font-semibold text-white mb-4\">Configuración de privacidad</h3>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-white\">Mostrar edades</span>\r\n                <input type=\"checkbox\" defaultChecked className=\"rounded bg-white/20 border-white/30\" title=\"Mostrar edades en perfil\" />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-white\">Mostrar ubicación</span>\r\n                <input type=\"checkbox\" defaultChecked className=\"rounded bg-white/20 border-white/30\" title=\"Mostrar ubicación en perfil\" />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-white\">Aparecer en búsquedas</span>\r\n                <input type=\"checkbox\" defaultChecked className=\"rounded bg-white/20 border-white/30\" title=\"Aparecer en resultados de búsqueda\" />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-white\">Solo parejas verificadas</span>\r\n                <input type=\"checkbox\" className=\"rounded bg-white/20 border-white/30\" title=\"Solo mostrar parejas verificadas\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <NavigationEnhanced />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfileCouple;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\EditProfileSingle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Events.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\FAQ.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Feed.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Guidelines.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Legal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Matches.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ModeratorDashboard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ModeratorRequest.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'checkError' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":73,"column":45,"nodeType":null,"messageId":"unusedVar","endLine":73,"endColumn":55}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { \r\n  AlertCircle, \r\n  ArrowLeft, \r\n  CheckCircle, \r\n  Mail, \r\n  Shield, \r\n  User, \r\n  Clock, \r\n  DollarSign,\r\n  MessageSquare\r\n} from \"lucide-react\";\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Link } from 'react-router-dom';\r\nimport { validateModeratorRequest } from '@/lib/validations/moderator';\r\n\r\ninterface FormData {\r\n  fullName: string;\r\n  email: string;\r\n  experience: string;\r\n  motivation: string;\r\n  availability: string;\r\n  previousModeration: string;\r\n  agreeToTerms: boolean;\r\n}\r\n\r\nconst ModeratorRequest = () => {\r\n  const { toast } = useToast();\r\n  const [formData, setFormData] = useState<FormData>({\r\n    fullName: '',\r\n    email: '',\r\n    experience: '',\r\n    motivation: '',\r\n    availability: '',\r\n    previousModeration: '',\r\n    agreeToTerms: false\r\n  });\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value, type } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    // Validar datos con Zod\r\n    const validation = validateModeratorRequest(formData);\r\n    if (!validation.success) {\r\n      const firstError = validation.error.issues[0];\r\n      toast({\r\n        title: \"Error de validación\",\r\n        description: firstError.message,\r\n        variant: \"destructive\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Verificar si ya existe una solicitud pendiente para este email\r\n      const { data: existingRequest, error: checkError } = await (supabase as any)\r\n        .from('moderator_requests')\r\n        .select('*')\r\n        .eq('email', formData.email)\r\n        .eq('status', 'pending')\r\n        .single();\r\n\r\n      if (existingRequest) {\r\n        toast({\r\n          title: \"Solicitud duplicada\",\r\n          description: \"Ya tienes una solicitud pendiente. Por favor espera la respuesta del equipo.\",\r\n          variant: \"destructive\"\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Crear nueva solicitud\r\n      const { error } = await (supabase as any)\r\n        .from('moderator_requests')\r\n        .insert([{\r\n          full_name: formData.fullName,\r\n          email: formData.email,\r\n          experience: formData.experience,\r\n          motivation: formData.motivation,\r\n          availability: formData.availability,\r\n          previous_moderation: formData.previousModeration,\r\n          status: 'pending',\r\n          created_at: new Date().toISOString()\r\n        }]);\r\n\r\n      if (error) throw error;\r\n\r\n      setSubmitted(true);\r\n      toast({\r\n        title: \"¡Éxito!\",\r\n        description: \"Solicitud enviada exitosamente\"\r\n      });\r\n    } catch (error) {\r\n      console.error('Error submitting moderator request:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Error al enviar la solicitud. Por favor intenta nuevamente.\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (submitted) {\r\n    return (\r\n      <div className=\"min-h-screen bg-hero-gradient p-6\">\r\n        <div className=\"max-w-2xl mx-auto\">\r\n          <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\r\n            <CardContent className=\"p-8 text-center\">\r\n              <CheckCircle className=\"h-16 w-16 text-green-400 mx-auto mb-6\" />\r\n              <h2 className=\"text-2xl font-bold text-white mb-4\">\r\n                ¡Solicitud Enviada!\r\n              </h2>\r\n              <p className=\"text-white/80 mb-6\">\r\n                Tu solicitud para convertirte en moderador ha sido enviada exitosamente. \r\n                Nuestro equipo la revisará y te contactaremos pronto.\r\n              </p>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"bg-white/5 rounded-lg p-4\">\r\n                  <h3 className=\"text-white font-semibold mb-2\">¿Qué sigue?</h3>\r\n                  <ul className=\"text-white/70 text-sm space-y-2 text-left\">\r\n                    <li>• Revisaremos tu solicitud en 2-3 días hábiles</li>\r\n                    <li>• Te contactaremos por email con la decisión</li>\r\n                    <li>• Si eres aprobado, recibirás un enlace de activación</li>\r\n                    <li>• Podrás acceder al panel de moderación una vez activado</li>\r\n                  </ul>\r\n                </div>\r\n                <Link to=\"/\">\r\n                  <Button className=\"bg-white/20 hover:bg-white/30 text-white\">\r\n                    <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n                    Volver al Inicio\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-hero-gradient p-6\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <div className=\"mb-8\">\r\n          <Link to=\"/\" className=\"inline-flex items-center text-white/80 hover:text-white mb-4\">\r\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n            Volver al Inicio\r\n          </Link>\r\n          <h1 className=\"text-3xl font-bold text-white mb-2 flex items-center gap-2\">\r\n            <Shield className=\"h-8 w-8\" />\r\n            Solicitud de Moderador\r\n          </h1>\r\n          <p className=\"text-white/80\">\r\n            Únete a nuestro equipo de moderación y ayuda a mantener la comunidad segura\r\n          </p>\r\n        </div>\r\n\r\n        {/* Información detallada sobre el rol */}\r\n        <Card className=\"bg-white/10 backdrop-blur-sm border-white/20 mb-6\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-white flex items-center gap-2\">\r\n              <Shield className=\"h-6 w-6 text-purple-400\" />\r\n              Programa de Moderadores ComplicesConecta\r\n            </CardTitle>\r\n            <CardDescription className=\"text-white/80\">\r\n              Únete a nuestro equipo de moderación y ayuda a crear un espacio seguro y respetuoso para todos\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            {/* Descripción del programa */}\r\n            <div className=\"bg-gradient-to-r from-purple-500/10 to-pink-500/10 rounded-lg p-4 border border-purple-400/20\">\r\n              <h3 className=\"text-white font-semibold mb-2 flex items-center gap-2\">\r\n                <AlertCircle className=\"h-5 w-5 text-blue-400\" />\r\n                ¿Por qué necesitamos moderadores?\r\n              </h3>\r\n              <p className=\"text-white/80 text-sm leading-relaxed\">\r\n                ComplicesConecta es una plataforma para adultos que facilita conexiones auténticas y respetuosas. \r\n                Nuestros moderadores son fundamentales para mantener un ambiente seguro, donde todos los miembros \r\n                puedan interactuar con confianza y respeto mutuo.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"bg-white/5 rounded-lg p-4\">\r\n                <h3 className=\"text-white font-semibold mb-3 flex items-center gap-2\">\r\n                  <CheckCircle className=\"h-5 w-5 text-green-400\" />\r\n                  Responsabilidades Principales\r\n                </h3>\r\n                <ul className=\"text-white/70 text-sm space-y-2\">\r\n                  <li>• <strong>Revisar reportes:</strong> Analizar denuncias de usuarios de manera imparcial</li>\r\n                  <li>• <strong>Moderar contenido:</strong> Evaluar fotos, mensajes y perfiles reportados</li>\r\n                  <li>• <strong>Aplicar sanciones:</strong> Advertencias, suspensiones temporales o permanentes</li>\r\n                  <li>• <strong>Apoyo a usuarios:</strong> Resolver consultas sobre políticas de la comunidad</li>\r\n                  <li>• <strong>Prevención:</strong> Identificar patrones de comportamiento problemático</li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"bg-white/5 rounded-lg p-4\">\r\n                <h3 className=\"text-white font-semibold mb-3 flex items-center gap-2\">\r\n                  <DollarSign className=\"h-5 w-5 text-yellow-400\" />\r\n                  Retribución Monetaria\r\n                </h3>\r\n                <div className=\"text-white/70 text-sm space-y-2\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Compensación base mensual:</span>\r\n                    <span className=\"text-green-400 font-semibold\">$2,500 - $4,000 MXN</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Bono por desempeño:</span>\r\n                    <span className=\"text-green-400 font-semibold\">Hasta $1,500 MXN</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span>Bono por casos complejos:</span>\r\n                    <span className=\"text-green-400 font-semibold\">$50 - $200 MXN</span>\r\n                  </div>\r\n                  <div className=\"mt-3 pt-2 border-t border-white/10\">\r\n                    <p className=\"text-xs text-white/60\">\r\n                      * Pagos quincenales vía transferencia bancaria\r\n                    </p>\r\n                    <p className=\"text-xs text-white/60\">\r\n                      * Incrementos basados en evaluaciones trimestrales\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-white/5 rounded-lg p-4\">\r\n                <h3 className=\"text-white font-semibold mb-3 flex items-center gap-2\">\r\n                  <User className=\"h-5 w-5 text-blue-400\" />\r\n                  Perfil Ideal del Moderador\r\n                </h3>\r\n                <ul className=\"text-white/70 text-sm space-y-2\">\r\n                  <li>• <strong>Edad:</strong> Mayor de 21 años (preferible)</li>\r\n                  <li>• <strong>Disponibilidad:</strong> Mínimo 8-10 horas semanales</li>\r\n                  <li>• <strong>Experiencia:</strong> Moderación online, atención al cliente o psicología</li>\r\n                  <li>• <strong>Habilidades:</strong> Comunicación empática y toma de decisiones</li>\r\n                  <li>• <strong>Compromiso:</strong> Mínimo 6 meses en el programa</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Beneficios y compensación */}\r\n            <div className=\"bg-gradient-to-r from-green-500/10 to-blue-500/10 rounded-lg p-4 border border-green-400/20\">\r\n              <h3 className=\"text-white font-semibold mb-3 flex items-center gap-2\">\r\n                <Badge className=\"h-5 w-5 text-yellow-400\" />\r\n                Beneficios del Programa\r\n              </h3>\r\n              <div className=\"grid md:grid-cols-3 gap-4 text-sm\">\r\n                <div>\r\n                  <h4 className=\"text-green-300 font-medium mb-1\">Compensación</h4>\r\n                  <p className=\"text-white/70\">Tokens CMPX mensuales según horas dedicadas</p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-blue-300 font-medium mb-1\">Acceso Premium</h4>\r\n                  <p className=\"text-white/70\">Funciones exclusivas mientras seas moderador activo</p>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-purple-300 font-medium mb-1\">Experiencia</h4>\r\n                  <p className=\"text-white/70\">Certificado de moderación y referencias profesionales</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Proceso de selección */}\r\n            <div className=\"bg-white/5 rounded-lg p-4\">\r\n              <h3 className=\"text-white font-semibold mb-3 flex items-center gap-2\">\r\n                <Clock className=\"h-5 w-5 text-orange-400\" />\r\n                Proceso de Selección\r\n              </h3>\r\n              <div className=\"grid md:grid-cols-4 gap-3 text-xs\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-2 text-white font-bold\">1</div>\r\n                  <p className=\"text-white/70\">Solicitud</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-2 text-white font-bold\">2</div>\r\n                  <p className=\"text-white/70\">Revisión (2-3 días)</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-2 text-white font-bold\">3</div>\r\n                  <p className=\"text-white/70\">Entrevista virtual</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center mx-auto mb-2 text-white font-bold\">4</div>\r\n                  <p className=\"text-white/70\">Capacitación</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Formulario */}\r\n        <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-white\">Formulario de Solicitud</CardTitle>\r\n            <CardDescription className=\"text-white/70\">\r\n              Completa todos los campos para enviar tu solicitud\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              {/* Información personal */}\r\n              <div className=\"space-y-4\">\r\n                <h3 className=\"text-white font-semibold flex items-center gap-2\">\r\n                  <User className=\"h-4 w-4\" />\r\n                  Información Personal\r\n                </h3>\r\n                \r\n                <div>\r\n                  <label className=\"text-white text-sm mb-2 block\">\r\n                    Nombre Completo *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"fullName\"\r\n                    value={formData.fullName}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50\"\r\n                    placeholder=\"Tu nombre completo\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"text-white text-sm mb-2 block\">\r\n                    Email *\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50\"\r\n                    placeholder=\"tu@email.com\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Experiencia */}\r\n              <div className=\"space-y-4\">\r\n                <h3 className=\"text-white font-semibold flex items-center gap-2\">\r\n                  <Clock className=\"h-4 w-4\" />\r\n                  Experiencia y Disponibilidad\r\n                </h3>\r\n\r\n                <div>\r\n                  <label className=\"text-white text-sm mb-2 block\">\r\n                    Experiencia Relevante\r\n                  </label>\r\n                  <textarea\r\n                    name=\"experience\"\r\n                    value={formData.experience}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50\"\r\n                    placeholder=\"Describe tu experiencia en moderación, administración de comunidades, atención al cliente, etc.\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"text-white text-sm mb-2 block\">\r\n                    Experiencia Previa en Moderación\r\n                  </label>\r\n                  <textarea\r\n                    name=\"previousModeration\"\r\n                    value={formData.previousModeration}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50\"\r\n                    placeholder=\"¿Has sido moderador en otras plataformas? Describe tu experiencia.\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"text-white text-sm mb-2 block\">\r\n                    Disponibilidad Semanal\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"availability\"\r\n                    value={formData.availability}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50\"\r\n                    placeholder=\"Ej: 10 horas/semana, tardes y fines de semana\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Motivación */}\r\n              <div className=\"space-y-4\">\r\n                <h3 className=\"text-white font-semibold flex items-center gap-2\">\r\n                  <MessageSquare className=\"h-4 w-4\" />\r\n                  Motivación\r\n                </h3>\r\n\r\n                <div>\r\n                  <label className=\"text-white text-sm mb-2 block\">\r\n                    ¿Por qué quieres ser moderador? *\r\n                  </label>\r\n                  <textarea\r\n                    name=\"motivation\"\r\n                    value={formData.motivation}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full p-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50\"\r\n                    placeholder=\"Explica tu motivación para unirte al equipo de moderación y cómo planeas contribuir a la comunidad.\"\r\n                    rows={4}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Términos */}\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-start gap-3\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"agreeToTerms\"\r\n                    checked={formData.agreeToTerms}\r\n                    onChange={handleInputChange}\r\n                    className=\"mt-1\"\r\n                    required\r\n                  />\r\n                  <label className=\"text-white/80 text-sm\">\r\n                    Acepto los términos y condiciones del programa de moderación. \r\n                    Entiendo que como moderador debo mantener la confidencialidad, \r\n                    actuar de manera imparcial y seguir las políticas de la comunidad. *\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Botón de envío */}\r\n              <div className=\"pt-4\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  disabled={loading || !formData.agreeToTerms}\r\n                  className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-semibold py-3\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                      Enviando Solicitud...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Mail className=\"h-4 w-4 mr-2\" />\r\n                      Enviar Solicitud\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n\r\n              <p className=\"text-white/60 text-xs text-center\">\r\n                * Campos obligatorios. Tu información será revisada por nuestro equipo.\r\n              </p>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModeratorRequest;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\News.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\NotFound.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'i' is defined but never used. Allowed unused args must match /^_/u.","line":23,"column":53,"nodeType":null,"messageId":"unusedVar","endLine":23,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Link, useLocation } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport { Home, Heart, Search, Sparkles, Zap, Star } from \"lucide-react\";\r\nimport { logger } from '@/lib/logger';\r\n\r\nconst NotFound = () => {\r\n  const location = useLocation();\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [sparklePositions, setSparklePositions] = useState<Array<{x: number, y: number, delay: number}>>([]);\r\n\r\n  useEffect(() => {\r\n    logger.error(\r\n      \"404 Error: User attempted to access non-existent route:\",\r\n      { pathname: location.pathname }\r\n    );\r\n    \r\n    // Trigger entrance animation\r\n    setTimeout(() => setIsVisible(true), 100);\r\n    \r\n    // Generate random sparkle positions\r\n    const sparkles = Array.from({ length: 12 }, (_, i) => ({\r\n      x: Math.random() * 100,\r\n      y: Math.random() * 100,\r\n      delay: Math.random() * 3\r\n    }));\r\n    setSparklePositions(sparkles);\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <main className=\"min-h-dvh grid place-items-center bg-gradient-to-br from-purple-900/30 via-pink-900/20 to-black relative overflow-hidden\">\r\n      {/* Animated Background Elements */}\r\n      <div className=\"absolute inset-0\">\r\n        <div className=\"absolute top-20 left-10 w-72 h-72 bg-pink-500/10 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\r\n        <div className=\"absolute top-40 right-10 w-72 h-72 bg-purple-500/10 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\r\n        <div className=\"absolute -bottom-8 left-20 w-72 h-72 bg-red-500/10 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\r\n        \r\n        {/* Floating Hearts */}\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          {[...Array(8)].map((_, i) => (\r\n            <Heart \r\n              key={`heart-${i}`}\r\n              className={`absolute text-pink-400/10 animate-float-slow`}\r\n              style={{\r\n                left: `${Math.random() * 100}%`,\r\n                top: `${Math.random() * 100}%`,\r\n                animationDelay: `${i * 2}s`,\r\n                fontSize: `${Math.random() * 25 + 20}px`\r\n              }}\r\n              fill=\"currentColor\"\r\n            />\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Animated Sparkles */}\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          {sparklePositions.map((sparkle, i) => (\r\n            <Sparkles\r\n              key={`sparkle-${i}`}\r\n              className=\"absolute text-yellow-300/20 animate-twinkle\"\r\n              style={{\r\n                left: `${sparkle.x}%`,\r\n                top: `${sparkle.y}%`,\r\n                animationDelay: `${sparkle.delay}s`,\r\n                fontSize: '16px'\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Lightning Effects */}\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          {[...Array(4)].map((_, i) => (\r\n            <Zap\r\n              key={`zap-${i}`}\r\n              className=\"absolute text-purple-400/15 animate-pulse-glow\"\r\n              style={{\r\n                left: `${20 + i * 25}%`,\r\n                top: `${10 + Math.random() * 80}%`,\r\n                animationDelay: `${i * 1.5}s`,\r\n                fontSize: '24px'\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"relative z-10 text-center space-y-8 p-8 max-w-2xl mx-auto\">\r\n        {/* Logo */}\r\n        <div className=\"animate-fade-in\">\r\n          <img \r\n            src=\"/compliceslogo.png\" \r\n            alt=\"ComplicesConecta\" \r\n            className=\"mx-auto h-16 opacity-90 mb-8\"\r\n            onError={(e) => {\r\n              e.currentTarget.style.display = 'none';\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* 404 Number with Animation */}\r\n        <div className={`transition-all duration-1000 ${isVisible ? 'animate-bounce-in' : 'opacity-0 scale-50'}`}>\r\n          <div className=\"relative\">\r\n            <h1 className=\"text-8xl md:text-9xl font-bold text-white/20 mb-4 select-none relative z-10\">\r\n              404\r\n            </h1>\r\n            {/* Glowing effect behind 404 */}\r\n            <div className=\"absolute inset-0 text-8xl md:text-9xl font-bold text-pink-500/30 blur-lg animate-pulse-slow\">\r\n              404\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content Card */}\r\n        <Card className={`bg-black/40 backdrop-blur-sm border-white/10 p-8 transition-all duration-1000 ${isVisible ? 'animate-slide-up' : 'opacity-0 translate-y-10'}`}>\r\n          <div className=\"space-y-6\">\r\n            <div className=\"animate-fade-in-delay\">\r\n              <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-4\">\r\n                Página no encontrada\r\n              </h2>\r\n              <p className=\"text-white/80 text-lg leading-relaxed max-w-prose mx-auto\">\r\n                Parece que este enlace se fue a una fiesta privada. No te preocupes, \r\n                te ayudamos a regresar al lugar correcto donde la diversión nunca se detiene.\r\n              </p>\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className={`flex flex-col sm:flex-row gap-4 justify-center items-center transition-all duration-1000 delay-700 ${isVisible ? 'animate-fade-in-delay-2' : 'opacity-0 translate-y-5'}`}>\r\n              <Button \r\n                asChild \r\n                size=\"lg\"\r\n                className=\"bg-gradient-to-r from-pink-500 to-purple-500 hover:from-pink-600 hover:to-purple-600 text-white rounded-2xl px-8 py-6 text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 hover:rotate-1 group\"\r\n              >\r\n                <Link to=\"/\">\r\n                  <Home className=\"mr-2 h-5 w-5 group-hover:animate-bounce\" />\r\n                  Volver al Inicio\r\n                </Link>\r\n              </Button>\r\n              \r\n              <Button \r\n                asChild \r\n                variant=\"outline\" \r\n                size=\"lg\"\r\n                className=\"border-white/20 text-white hover:bg-white/10 rounded-2xl px-8 py-6 text-lg backdrop-blur-sm hover:border-pink-400/50 transition-all duration-300 transform hover:scale-105 hover:-rotate-1 group\"\r\n              >\r\n                <Link to=\"/discover\">\r\n                  <Search className=\"mr-2 h-5 w-5 group-hover:animate-spin\" />\r\n                  Explorar Perfiles\r\n                </Link>\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Additional Info */}\r\n            <div className=\"text-white/60 text-sm animate-fade-in-delay-3\">\r\n              <p>¿Necesitas ayuda? Visita nuestro <Link to=\"/faq\" className=\"text-pink-400 hover:text-pink-300 underline\">Centro de Ayuda</Link></p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {/* Decorative Elements */}\r\n        <div className={`flex justify-center space-x-4 transition-all duration-1000 delay-1000 ${isVisible ? 'animate-fade-in-delay-4' : 'opacity-0'}`}>\r\n          {[...Array(5)].map((_, i) => (\r\n            <div \r\n              key={i}\r\n              className=\"relative\"\r\n            >\r\n              <Star \r\n                className=\"w-4 h-4 text-yellow-400/60 animate-twinkle\"\r\n                style={{ animationDelay: `${i * 0.3}s` }}\r\n                fill=\"currentColor\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Custom Styles */}\r\n      <style>{`\r\n        @keyframes blob {\r\n          0%, 100% { transform: translate(0px, 0px) scale(1); }\r\n          33% { transform: translate(30px, -50px) scale(1.1); }\r\n          66% { transform: translate(-20px, 20px) scale(0.9); }\r\n        }\r\n        \r\n        @keyframes float-slow {\r\n          0%, 100% { transform: translateY(0px) rotate(0deg); }\r\n          50% { transform: translateY(-30px) rotate(180deg); }\r\n        }\r\n        \r\n        @keyframes fade-in {\r\n          from { opacity: 0; transform: translateY(20px); }\r\n          to { opacity: 1; transform: translateY(0); }\r\n        }\r\n        \r\n        @keyframes bounce-in {\r\n          0% { opacity: 0; transform: scale(0.3) translateY(-100px); }\r\n          50% { opacity: 1; transform: scale(1.1) translateY(0); }\r\n          100% { opacity: 1; transform: scale(1) translateY(0); }\r\n        }\r\n        \r\n        @keyframes slide-up {\r\n          from { opacity: 0; transform: translateY(50px); }\r\n          to { opacity: 1; transform: translateY(0); }\r\n        }\r\n        \r\n        .animate-blob {\r\n          animation: blob 7s infinite;\r\n        }\r\n        \r\n        .animate-float-slow {\r\n          animation: float-slow 8s ease-in-out infinite;\r\n        }\r\n        \r\n        @keyframes twinkle {\r\n          0%, 100% { opacity: 0.3; transform: scale(1); }\r\n          50% { opacity: 1; transform: scale(1.2); }\r\n        }\r\n        \r\n        @keyframes pulse-glow {\r\n          0%, 100% { opacity: 0.1; transform: scale(1); }\r\n          50% { opacity: 0.3; transform: scale(1.1); }\r\n        }\r\n        \r\n        @keyframes pulse-slow {\r\n          0%, 100% { opacity: 0.3; }\r\n          50% { opacity: 0.6; }\r\n        }\r\n        \r\n        .animate-twinkle {\r\n          animation: twinkle 2s ease-in-out infinite;\r\n        }\r\n        \r\n        .animate-pulse-glow {\r\n          animation: pulse-glow 3s ease-in-out infinite;\r\n        }\r\n        \r\n        .animate-pulse-slow {\r\n          animation: pulse-slow 4s ease-in-out infinite;\r\n        }\r\n        \r\n        .animate-fade-in {\r\n          animation: fade-in 1s ease-out;\r\n        }\r\n        \r\n        .animate-bounce-in {\r\n          animation: bounce-in 1.2s ease-out;\r\n        }\r\n        \r\n        .animate-slide-up {\r\n          animation: slide-up 1s ease-out 0.3s both;\r\n        }\r\n        \r\n        .animate-fade-in-delay {\r\n          animation: fade-in 1s ease-out 0.6s both;\r\n        }\r\n        \r\n        .animate-fade-in-delay-2 {\r\n          animation: fade-in 1s ease-out 0.9s both;\r\n        }\r\n        \r\n        .animate-fade-in-delay-3 {\r\n          animation: fade-in 1s ease-out 1.2s both;\r\n        }\r\n        \r\n        .animate-fade-in-delay-4 {\r\n          animation: fade-in 1s ease-out 1.5s both;\r\n        }\r\n        \r\n        .animation-delay-2000 {\r\n          animation-delay: 2s;\r\n        }\r\n        \r\n        .animation-delay-4000 {\r\n          animation-delay: 4s;\r\n        }\r\n      `}</style>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Premium.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'userType' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":21,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":18},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDemoAuth' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":25,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":25,"endColumn":31},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDemoUser' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":26,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from \"react\";\r\nimport { Header } from \"@/components/Header\";\r\nimport { Footer } from \"@/components/Footer\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { ArrowLeft, Crown, Zap, Heart, Star, Shield, Calendar, Users, Coins, Lock, Sparkles, Gift } from \"lucide-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { PremiumFeatures } from \"@/components/premium/PremiumFeatures\";\r\nimport VIPEvents from \"@/components/premium/VIPEvents\";\r\nimport VirtualGifts from \"@/components/premium/VirtualGifts\";\r\nimport { ComingSoonModal } from \"@/components/modals/ComingSoonModal\";\r\nimport { logger } from '@/lib/logger';\r\nimport { usePersistedState } from '@/hooks/usePersistedState';\r\n\r\nconst Premium = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const [isDemoUser, setIsDemoUser] = useState(false);\r\n  const [userType, setUserType] = useState('');\r\n  const [showComingSoonModal, setShowComingSoonModal] = useState(false);\r\n  const [comingSoonTitle, setComingSoonTitle] = useState('');\r\n\r\n  const [demoAuth, setDemoAuth] = usePersistedState('demo_authenticated', 'false');\r\n  const [demoUser, setDemoUser] = usePersistedState<any>('demo_user', null);\r\n\r\n  useEffect(() => {\r\n    // Verificar autenticación (demo o real)\r\n    // Si hay sesión demo, usar esa\r\n    if (demoAuth === 'true' && demoUser) {\r\n      const user = typeof demoUser === 'string' ? JSON.parse(demoUser) : demoUser;\r\n      setIsDemoUser(true);\r\n      setUserType(user.accountType);\r\n      return;\r\n    }\r\n    \r\n    // Si no hay demo, verificar autenticación real\r\n    // Por ahora permitir acceso sin autenticación para usuarios reales\r\n    logger.info('🔓 Acceso a Premium sin autenticación requerida');\r\n  }, [navigate, demoAuth, demoUser]);\r\n\r\n  const handleComingSoon = (title: string) => {\r\n    setComingSoonTitle(title);\r\n    setShowComingSoonModal(true);\r\n  };\r\n\r\n  const premiumBenefits = [\r\n    {\r\n      icon: Heart,\r\n      title: \"Conexiones Ilimitadas\",\r\n      description: \"Intercambio sin límites con parejas verificadas\",\r\n      color: \"from-pink-500 to-rose-500\"\r\n    },\r\n    {\r\n      icon: Shield,\r\n      title: \"Verificación VIP\",\r\n      description: \"Acceso a perfiles ultra-verificados\",\r\n      color: \"from-purple-500 to-indigo-500\"\r\n    },\r\n    {\r\n      icon: Calendar,\r\n      title: \"Eventos Exclusivos\",\r\n      description: \"Fiestas privadas y orgías VIP\",\r\n      color: \"from-amber-500 to-orange-500\"\r\n    },\r\n    {\r\n      icon: Coins,\r\n      title: \"Tokens CMPX\",\r\n      description: \"Sistema de recompensas blockchain\",\r\n      color: \"from-emerald-500 to-teal-500\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen relative overflow-hidden\">\r\n      {/* Background decorativo */}\r\n      <div className=\"fixed inset-0 overflow-hidden pointer-events-none\">\r\n        <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\r\n        <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\r\n        <div className=\"absolute top-40 left-40 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\r\n      </div>\r\n\r\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\">\r\n        <Header />\r\n        \r\n        <main className=\"relative z-10 container mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6 lg:py-8 max-w-7xl\">\r\n          {/* Back Button */}\r\n          <div className=\"mb-6\">\r\n            <Button \r\n              variant=\"outline\" \r\n              onClick={() => navigate('/settings')}\r\n              className=\"bg-card/80 backdrop-blur-sm border-primary/20 hover:bg-primary/10 transition-all duration-300 text-white hover:text-white\"\r\n            >\r\n              <ArrowLeft className=\"mr-2 h-4 w-4\" />\r\n              Volver al Dashboard\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Hero Section */}\r\n          <div className=\"text-center mb-12\">\r\n            <div className=\"flex items-center justify-center mb-6\">\r\n              <Crown className=\"h-12 w-12 text-primary mr-3 animate-pulse-glow\" />\r\n              <h1 className=\"text-4xl md:text-5xl font-bold text-foreground\">\r\n                Premium Swinger\r\n              </h1>\r\n            </div>\r\n            <div className=\"bg-love-gradient bg-clip-text text-transparent text-2xl md:text-3xl font-bold mb-4\">\r\n              Experiencias Íntimas Exclusivas\r\n            </div>\r\n            <p className=\"text-xl text-white max-w-3xl mx-auto\">\r\n              Accede a la élite swinger con funciones premium, eventos VIP y el sistema de tokens CMPX. \r\n              <strong className=\"text-accent\"> Disponible después de la fase Beta.</strong>\r\n            </p>\r\n          </div>\r\n\r\n          {/* Donation Plans */}\r\n          <div className=\"mb-12\">\r\n            <div className=\"text-center mb-8\">\r\n              <h2 className=\"text-3xl font-bold text-foreground mb-4\">Apoya el Proyecto Beta</h2>\r\n              <p className=\"text-white max-w-2xl mx-auto\">\r\n                Ayúdanos a hacer ComplicesConecta la mejor plataforma swinger. Tu donación nos permite mejorar \r\n                la experiencia y agregar nuevas funciones exclusivas.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n              {/* Supporter Plan */}\r\n              <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10 hover:border-primary/30 transition-all duration-300 hover:scale-105\">\r\n                <CardHeader className=\"text-center\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-blue-500 to-cyan-500 flex items-center justify-center\">\r\n                    <Heart className=\"h-8 w-8 text-white\" />\r\n                  </div>\r\n                  <CardTitle className=\"text-xl\">Supporter</CardTitle>\r\n                  <div className=\"text-3xl font-bold text-primary\">$100 MXN</div>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-3\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge variant=\"secondary\" className=\"bg-blue-100 text-blue-800\">\r\n                      <Star className=\"h-3 w-3 mr-1\" />\r\n                      Badge de Supporter\r\n                    </Badge>\r\n                  </div>\r\n                  <p className=\"text-sm text-white\">• Acceso anticipado a noticias</p>\r\n                  <p className=\"text-sm text-white\">• Nuestro agradecimiento eterno</p>\r\n                  <p className=\"text-sm text-white\">• Reconocimiento en la comunidad</p>\r\n                  <Button \r\n                    asChild\r\n                    className=\"w-full mt-4 bg-gradient-to-r from-blue-500 to-cyan-500 hover:from-blue-600 hover:to-cyan-600\"\r\n                  >\r\n                    <a href=\"https://buy.stripe.com/bIY3fGdHKfWG5Gg9AA\" target=\"_blank\" rel=\"noopener noreferrer\">Seleccionar</a>\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Contributor Plan */}\r\n              <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10 hover:border-primary/30 transition-all duration-300 hover:scale-105\">\r\n                <CardHeader className=\"text-center\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center\">\r\n                    <Users className=\"h-8 w-8 text-white\" />\r\n                  </div>\r\n                  <CardTitle className=\"text-xl\">Contributor</CardTitle>\r\n                  <div className=\"text-3xl font-bold text-primary\">$300 MXN</div>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-3\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge variant=\"secondary\" className=\"bg-purple-100 text-purple-800\">\r\n                      <Crown className=\"h-3 w-3 mr-1\" />\r\n                      Badge Contributor\r\n                    </Badge>\r\n                  </div>\r\n                  <p className=\"text-sm text-white\">• Todo lo anterior</p>\r\n                  <p className=\"text-sm text-white\">• Acceso a contenido exclusivo</p>\r\n                  <p className=\"text-sm text-white\">• Participación en encuestas</p>\r\n                  <Button \r\n                    className=\"w-full mt-4 bg-gradient-to-r from-purple-500 to-indigo-500 hover:from-purple-600 hover:to-indigo-600\"\r\n                    onClick={() => {\r\n                      if (isDemoUser) {\r\n                        toast({\r\n                          title: \"¡Premium Activado! (Modo Demo)\",\r\n                          description: \"En modo demo tienes acceso completo a todas las funciones premium.\",\r\n                          duration: 3000,\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {isDemoUser ? \"Activado en Demo\" : \"Seleccionar\"}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* VIP Supporter Plan */}\r\n              <Card className=\"bg-card/80 backdrop-blur-sm border-2 border-amber-400/50 hover:border-amber-400 transition-all duration-300 hover:scale-105 relative\">\r\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\r\n                  <Badge className=\"bg-amber-500 text-white\">\r\n                    <Sparkles className=\"h-3 w-3 mr-1\" />\r\n                    Popular\r\n                  </Badge>\r\n                </div>\r\n                <CardHeader className=\"text-center\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-amber-500 to-orange-500 flex items-center justify-center\">\r\n                    <Shield className=\"h-8 w-8 text-white\" />\r\n                  </div>\r\n                  <CardTitle className=\"text-xl\">VIP Supporter</CardTitle>\r\n                  <div className=\"text-3xl font-bold text-primary\">$600 MXN</div>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-3\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge variant=\"secondary\" className=\"bg-amber-100 text-amber-800\">\r\n                      <Crown className=\"h-3 w-3 mr-1\" />\r\n                      Badge VIP Dorado\r\n                    </Badge>\r\n                  </div>\r\n                  <p className=\"text-sm text-white\">• Todo lo anterior</p>\r\n                  <p className=\"text-sm text-white\">• Acceso beta a nuevas funciones</p>\r\n                  <p className=\"text-sm text-white\">• Consulta directa con el equipo</p>\r\n                  <Button \r\n                    className=\"w-full mt-4 bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600\"\r\n                    onClick={() => {\r\n                      if (isDemoUser) {\r\n                        toast({\r\n                          title: \"¡Premium VIP Activado! (Modo Demo)\",\r\n                          description: \"En modo demo tienes acceso completo a todas las funciones VIP.\",\r\n                          duration: 3000,\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {isDemoUser ? \"VIP Activado en Demo\" : \"Seleccionar\"}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Founding Member Plan */}\r\n              <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10 hover:border-primary/30 transition-all duration-300 hover:scale-105\">\r\n                <CardHeader className=\"text-center\">\r\n                  <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-emerald-500 to-teal-500 flex items-center justify-center\">\r\n                    <Gift className=\"h-8 w-8 text-white\" />\r\n                  </div>\r\n                  <CardTitle className=\"text-xl\">Founding Member</CardTitle>\r\n                  <div className=\"text-3xl font-bold text-primary\">$1,000 MXN</div>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-3\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Badge variant=\"secondary\" className=\"bg-emerald-100 text-emerald-800\">\r\n                      <Star className=\"h-3 w-3 mr-1\" />\r\n                      Founding Member\r\n                    </Badge>\r\n                  </div>\r\n                  <p className=\"text-sm text-white\">• Todo lo anterior</p>\r\n                  <p className=\"text-sm text-white\">• Tu nombre en los créditos</p>\r\n                  <p className=\"text-sm text-white\">• Acceso de por vida a funciones premium</p>\r\n                  <Button \r\n                    className=\"w-full mt-4 bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-600 hover:to-teal-600\"\r\n                    onClick={() => {\r\n                      if (isDemoUser) {\r\n                        toast({\r\n                          title: \"¡Founding Member Activado! (Modo Demo)\",\r\n                          description: \"En modo demo tienes acceso completo a todas las funciones de miembro fundador.\",\r\n                          duration: 3000,\r\n                        });\r\n                      }\r\n                    }}\r\n                  >\r\n                    {isDemoUser ? \"Founding Member Demo\" : \"Seleccionar\"}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <p className=\"text-sm text-white mb-4\">\r\n                💳 Pagos seguros procesados por Stripe • 🔒 Transacciones encriptadas • 🇲🇽 Precios en pesos mexicanos\r\n              </p>\r\n              <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\r\n                <Shield className=\"h-3 w-3 mr-1\" />\r\n                Pagos 100% Seguros\r\n              </Badge>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Future Premium Features */}\r\n          <Card className=\"bg-gradient-to-r from-accent/20 to-primary/20 border border-accent/30 mb-12\">\r\n            <CardContent className=\"text-center py-8\">\r\n              <Lock className=\"h-12 w-12 text-accent mx-auto mb-4\" />\r\n              <h2 className=\"text-2xl font-bold text-foreground mb-2\">Funciones Premium - Post Beta</h2>\r\n              <p className=\"text-white mb-4\">\r\n                Las funciones Premium avanzadas se activarán al finalizar la fase beta. \r\n                Los donantes tendrán acceso prioritario y beneficios exclusivos.\r\n              </p>\r\n              <Badge variant=\"secondary\" className=\"bg-accent/20 text-accent\">\r\n                <Sparkles className=\"h-4 w-4 mr-1\" />\r\n                Próximamente\r\n              </Badge>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Benefits Preview */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\r\n            {premiumBenefits.map((benefit, index) => (\r\n              <Card key={index} className=\"bg-card/80 backdrop-blur-sm border border-primary/10 overflow-hidden\">\r\n                <CardContent className=\"p-6 text-center\">\r\n                  <div className={`w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r ${benefit.color} flex items-center justify-center`}>\r\n                    <benefit.icon className=\"h-8 w-8 text-white\" />\r\n                  </div>\r\n                  <h3 className=\"font-semibold text-foreground mb-2\">{benefit.title}</h3>\r\n                  <p className=\"text-sm text-white\">{benefit.description}</p>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Premium Features */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12\">\r\n            {/* Swinger Features */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Heart className=\"h-6 w-6 text-primary\" fill=\"currentColor\" />\r\n                  Funciones Swinger VIP\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-start gap-3\">\r\n                  <Users className=\"h-5 w-5 text-accent mt-1\" />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-foreground\">Parejas Verificadas Premium</h4>\r\n                    <p className=\"text-sm text-white\">Acceso a perfiles ultra-verificados con experiencia swinger comprobada</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-start gap-3\">\r\n                  <Calendar className=\"h-5 w-5 text-accent mt-1\" />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-foreground\">Eventos VIP Exclusivos</h4>\r\n                    <p className=\"text-sm text-white\">Invitaciones a fiestas privadas, orgías y clubs swinger de élite</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-start gap-3\">\r\n                  <Shield className=\"h-5 w-5 text-accent mt-1\" />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-foreground\">Privacidad Máxima</h4>\r\n                    <p className=\"text-sm text-white\">Modo incógnito y protección avanzada de identidad</p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Blockchain & Tokens */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Coins className=\"h-6 w-6 text-accent\" />\r\n                  Sistema de Tokens CMPX\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex items-start gap-3\">\r\n                  <Gift className=\"h-5 w-5 text-primary mt-1\" />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-foreground\">Recompensas por Actividad</h4>\r\n                    <p className=\"text-sm text-white\">Gana tokens CMPX por verificaciones, eventos y conexiones exitosas</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-start gap-3\">\r\n                  <Zap className=\"h-5 w-5 text-primary mt-1\" />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-foreground\">Intercambio de Tokens</h4>\r\n                    <p className=\"text-sm text-white\">Usa tokens para acceder a funciones premium y eventos exclusivos</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-start gap-3\">\r\n                  <Star className=\"h-5 w-5 text-primary mt-1\" />\r\n                  <div>\r\n                    <h4 className=\"font-medium text-foreground\">NFTs de Experiencias</h4>\r\n                    <p className=\"text-sm text-white\">Colecciona NFTs únicos de tus experiencias swinger más memorables</p>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Premium Features Components */}\r\n          <div className=\"mb-12\">\r\n            <PremiumFeatures />\r\n          </div>\r\n\r\n          {/* VIP Events */}\r\n          <div className=\"mb-12\">\r\n            <VIPEvents />\r\n          </div>\r\n\r\n          {/* Virtual Gifts */}\r\n          <div className=\"mb-12\">\r\n            <VirtualGifts />\r\n          </div>\r\n\r\n          {/* Call to Action */}\r\n          <Card className=\"bg-hero-gradient border-0 text-white\">\r\n            <CardContent className=\"text-center py-12\">\r\n              <Crown className=\"h-16 w-16 mx-auto mb-6 text-white\" />\r\n              <h2 className=\"text-3xl font-bold mb-4\">Únete a la Lista VIP</h2>\r\n              <p className=\"text-white/90 text-lg mb-8 max-w-2xl mx-auto\">\r\n                Sé de los primeros en acceder a las funciones Premium cuando finalice la beta. \r\n                Recibirás tokens CMPX gratuitos y acceso prioritario a eventos exclusivos.\r\n              </p>\r\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n                <Button \r\n                  size=\"lg\" \r\n                  className=\"bg-white text-primary hover:bg-white/90 font-semibold\"\r\n                  onClick={() => handleComingSoon(\"Planes de Suscripción Premium\")}\r\n                >\r\n                  <Crown className=\"mr-2 h-5 w-5\" />\r\n                  Ver Planes Premium\r\n                </Button>\r\n                <Button \r\n                  variant=\"outline\" \r\n                  size=\"lg\" \r\n                  className=\"bg-white/10 border-white/30 text-white hover:bg-white/20 backdrop-blur-sm\"\r\n                  onClick={() => handleComingSoon(\"Historias Premium\")}\r\n                >\r\n                  <Sparkles className=\"mr-2 h-5 w-5\" />\r\n                  Historias VIP\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </main>\r\n\r\n        <Footer />\r\n      </div>\r\n      \r\n      {/* Coming Soon Modal */}\r\n      <ComingSoonModal \r\n        isOpen={showComingSoonModal}\r\n        onClose={() => setShowComingSoonModal(false)}\r\n        title={comingSoonTitle}\r\n        description=\"Esta funcionalidad estará disponible después de la fase Beta. Los usuarios que apoyen el proyecto tendrán acceso prioritario.\"\r\n        feature=\"Premium\"\r\n      />\r\n      \r\n      {/* Custom Styles */}\r\n      <style>{`\r\n        @keyframes blob {\r\n          0%, 100% { transform: translate(0px, 0px) scale(1); }\r\n          33% { transform: translate(30px, -50px) scale(1.1); }\r\n          66% { transform: translate(-20px, 20px) scale(0.9); }\r\n        }\r\n        \r\n        @keyframes float-slow {\r\n          0%, 100% { transform: translateY(0px) rotate(0deg); }\r\n          50% { transform: translateY(-20px) rotate(180deg); }\r\n        }\r\n        \r\n        .animate-blob {\r\n          animation: blob 7s infinite;\r\n        }\r\n        \r\n        .animate-float-slow {\r\n          animation: float-slow 6s ease-in-out infinite;\r\n        }\r\n        \r\n        .animation-delay-2000 {\r\n          animation-delay: 2s;\r\n        }\r\n        \r\n        .animation-delay-4000 {\r\n          animation-delay: 4s;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Premium;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Privacy.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'navigate' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":11,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Shield, Eye, Database, Cookie, Mail, Lock } from 'lucide-react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Header } from '@/components/Header';\r\nimport { Footer } from '@/components/Footer';\r\nimport HeaderNav from '@/components/HeaderNav';\r\n\r\nconst Privacy = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"min-h-screen relative overflow-hidden\">\r\n      {/* Animated Background */}\r\n      <div className=\"fixed inset-0 z-0\">\r\n        <div className=\"absolute inset-0 bg-gradient-to-br from-background via-muted/30 to-secondary/20\"></div>\r\n        \r\n        {/* Animated Gradient Orbs */}\r\n        <div className=\"absolute top-20 left-10 w-96 h-96 bg-gradient-to-r from-primary/20 to-accent/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\r\n        <div className=\"absolute top-40 right-10 w-96 h-96 bg-gradient-to-r from-accent/20 to-secondary/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\r\n        <div className=\"absolute -bottom-32 left-20 w-96 h-96 bg-gradient-to-r from-secondary/20 to-primary/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\r\n      </div>\r\n      \r\n      <div className=\"relative z-10\">\r\n        <HeaderNav />\r\n        <Header />\r\n        \r\n        <main className=\"container mx-auto px-4 py-8\">\r\n\r\n          <div className=\"text-center mb-12\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\r\n              Política de Privacidad\r\n              <span className=\"block bg-love-gradient bg-clip-text text-transparent\">\r\n                ComplicesConecta\r\n              </span>\r\n            </h1>\r\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\r\n              Cómo protegemos y utilizamos su información personal\r\n            </p>\r\n            <Badge variant=\"secondary\" className=\"mt-4\">\r\n              <Shield className=\"h-4 w-4 mr-1\" />\r\n              Última actualización: Agosto 2025\r\n            </Badge>\r\n          </div>\r\n\r\n          <div className=\"max-w-4xl mx-auto space-y-8\">\r\n            {/* Introducción */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Eye className=\"h-5 w-5 text-primary\" />\r\n                  1. Introducción\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-muted-foreground\">\r\n                  En ComplicesConecta, valoramos profundamente su privacidad. Esta política explica cómo \r\n                  recopilamos, utilizamos y protegemos su información personal cuando utiliza nuestra plataforma \r\n                  de conexiones para adultos.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  Nos comprometemos a mantener la confidencialidad y seguridad de sus datos personales, \r\n                  especialmente considerando la naturaleza sensible de nuestra plataforma.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Información que Recopilamos */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Database className=\"h-5 w-5 text-primary\" />\r\n                  2. Información que Recopilamos\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div>\r\n                  <h4 className=\"font-semibold text-foreground mb-2\">Información de Registro:</h4>\r\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-1\">\r\n                    <li>Nombre, edad y ubicación</li>\r\n                    <li>Dirección de correo electrónico</li>\r\n                    <li>Preferencias y orientación</li>\r\n                    <li>Fotografías de perfil</li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold text-foreground mb-2\">Información de Uso:</h4>\r\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-1\">\r\n                    <li>Actividad en la plataforma</li>\r\n                    <li>Mensajes y comunicaciones</li>\r\n                    <li>Preferencias de búsqueda</li>\r\n                    <li>Datos de geolocalización (con su consentimiento)</li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"font-semibold text-foreground mb-2\">Información Técnica:</h4>\r\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-1\">\r\n                    <li>Dirección IP y datos del dispositivo</li>\r\n                    <li>Información del navegador</li>\r\n                    <li>Cookies y tecnologías similares</li>\r\n                  </ul>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Cómo Utilizamos su Información */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle>3. Cómo Utilizamos su Información</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Servicios de la plataforma:</strong> Para facilitar conexiones, mostrar perfiles \r\n                  compatibles y gestionar su cuenta.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Comunicación:</strong> Para enviar notificaciones importantes, actualizaciones \r\n                  del servicio y responder a sus consultas.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Seguridad:</strong> Para verificar identidades, prevenir fraudes y mantener \r\n                  un ambiente seguro.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Mejoras del servicio:</strong> Para analizar el uso de la plataforma y mejorar \r\n                  nuestras funcionalidades.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Cumplimiento legal:</strong> Cuando sea requerido por ley o para proteger \r\n                  nuestros derechos legales.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Compartir Información */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle>4. Compartir su Información</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Con otros usuarios:</strong> Su perfil e información básica son visibles para \r\n                  otros usuarios según sus configuraciones de privacidad.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Proveedores de servicios:</strong> Compartimos datos limitados con proveedores \r\n                  que nos ayudan a operar la plataforma (hosting, pagos, análisis).\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Cumplimiento legal:</strong> Podemos divulgar información cuando sea requerido \r\n                  por autoridades legales o para proteger la seguridad.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Nunca vendemos:</strong> No vendemos su información personal a terceros para \r\n                  fines comerciales.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Cookies */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Cookie className=\"h-5 w-5 text-primary\" />\r\n                  5. Cookies y Tecnologías Similares\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Cookies esenciales:</strong> Necesarias para el funcionamiento básico del sitio.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Cookies de rendimiento:</strong> Nos ayudan a entender cómo los usuarios \r\n                  interactúan con la plataforma.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Cookies de personalización:</strong> Permiten recordar sus preferencias y \r\n                  configuraciones.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  Puede gestionar sus preferencias de cookies en la configuración de su navegador.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Seguridad */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Lock className=\"h-5 w-5 text-primary\" />\r\n                  6. Seguridad de Datos\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Encriptación:</strong> Utilizamos encriptación SSL/TLS para proteger \r\n                  la transmisión de datos.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Acceso limitado:</strong> Solo el personal autorizado tiene acceso a \r\n                  información personal.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Monitoreo:</strong> Supervisamos continuamente nuestros sistemas para \r\n                  detectar vulnerabilidades.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Respaldo seguro:</strong> Sus datos se almacenan de forma segura con \r\n                  copias de seguridad regulares.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Sus Derechos */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle>7. Sus Derechos de Privacidad</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Acceso:</strong> Puede solicitar una copia de sus datos personales.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Corrección:</strong> Puede actualizar o corregir información inexacta.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Eliminación:</strong> Puede solicitar la eliminación de su cuenta y datos.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Portabilidad:</strong> Puede solicitar sus datos en un formato transferible.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Objeción:</strong> Puede oponerse al procesamiento de sus datos para \r\n                  ciertos fines.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Retención de Datos */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle>8. Retención de Datos</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-muted-foreground\">\r\n                  Conservamos su información personal solo durante el tiempo necesario para \r\n                  proporcionar nuestros servicios y cumplir con obligaciones legales.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Cuenta activa:</strong> Mientras mantenga su cuenta activa.\r\n                </p>\r\n                <p className=\"text-muted-foreground\">\r\n                  <strong>Después de la eliminación:</strong> Algunos datos pueden conservarse \r\n                  por razones legales o de seguridad hasta 7 años.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Contacto */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Mail className=\"h-5 w-5 text-primary\" />\r\n                  9. Contacto\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-muted-foreground\">\r\n                  Para preguntas sobre esta política de privacidad o para ejercer sus derechos:\r\n                </p>\r\n                <p className=\"text-muted-foreground mt-2\">\r\n                  <strong>Email:</strong> <a href=\"mailto:privacy@complicesconecta.com\" className=\"text-primary hover:underline\">privacy@complicesconecta.com</a><br />\r\n                  <strong>Responsable de Protección de Datos:</strong> <a href=\"mailto:dpo@complicesconecta.com\" className=\"text-primary hover:underline\">dpo@complicesconecta.com</a><br />\r\n                  <strong>Dirección:</strong> Madrid, España\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </main>\r\n\r\n        <Footer />\r\n      </div>\r\n      \r\n      {/* Custom Styles */}\r\n      <style>{`\r\n        @keyframes blob {\r\n          0%, 100% { transform: translate(0px, 0px) scale(1); }\r\n          33% { transform: translate(30px, -50px) scale(1.1); }\r\n          66% { transform: translate(-20px, 20px) scale(0.9); }\r\n        }\r\n        \r\n        .animate-blob {\r\n          animation: blob 7s infinite;\r\n        }\r\n        \r\n        .animation-delay-2000 {\r\n          animation-delay: 2s;\r\n        }\r\n        \r\n        .animation-delay-4000 {\r\n          animation-delay: 4s;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Privacy;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ProfileCouple.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'activeTab' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":21,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":19},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setActiveTab' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":21,"column":21,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":33},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDemoAuth' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":47,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":47,"endColumn":31},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDemoUser' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":48,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":48,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Heart, MapPin, Verified, Crown, Settings, Share2, Lock, Images, Flag } from \"lucide-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NavigationEnhanced from \"@/components/NavigationEnhanced\";\r\nimport { generateMockCoupleProfiles, type CoupleProfileWithPartners } from \"@/lib/coupleProfiles\";\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { logger } from '@/lib/logger';\r\nimport { usePersistedState } from '@/hooks/usePersistedState';\r\nimport { PrivateImageRequest } from '@/components/profile/PrivateImageRequest';\r\nimport { PrivateImageGallery } from '@/components/profile/PrivateImageGallery';\r\nimport { ReportDialog } from '@/components/swipe/ReportDialog';\r\nimport { ProfileNavTabs } from '@/components/profile/ProfileNavTabs';\r\n\r\nconst ProfileCouple: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [profile, setProfile] = useState<CoupleProfileWithPartners | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'couple' | 'individual'>('couple');\r\n  const [showPrivateImageRequest, setShowPrivateImageRequest] = useState(false);\r\n  const [privateImageAccess, setPrivateImageAccess] = useState<'none' | 'pending' | 'approved' | 'denied'>('none');\r\n  const [showReportDialog, setShowReportDialog] = useState(false);\r\n  const { isAuthenticated, user, profile: authProfile } = useAuth();\r\n  \r\n  // Determinar si es el perfil propio\r\n  const isOwnProfile = user?.id === profile?.id;\r\n\r\n  // Handlers para las acciones del perfil\r\n  const handleUploadImage = () => {\r\n    logger.info('Subir imagen solicitado');\r\n    // Implementar lógica de subida de imagen\r\n  };\r\n\r\n  const handleDeletePost = (postId: string) => {\r\n    logger.info('Eliminar post solicitado', { postId });\r\n    // Implementar lógica de eliminación de post\r\n  };\r\n\r\n  const handleCommentPost = (postId: string) => {\r\n    logger.info('Comentar post solicitado', { postId });\r\n    // Implementar lógica de comentario\r\n  };\r\n  \r\n  // Migración localStorage → usePersistedState\r\n  const [demoAuth, setDemoAuth] = usePersistedState('demo_authenticated', 'false');\r\n  const [demoUser, setDemoUser] = usePersistedState<any>('demo_user', null);\r\n\r\n  useEffect(() => {\r\n    const loadProfile = async () => {\r\n      try {\r\n        logger.info('🔍 ProfileCouple - Estado de autenticación:', {\r\n          isAuthenticated,\r\n          user: !!user,\r\n          authProfile: !!authProfile\r\n        });\r\n\r\n        // Verificar si hay sesión demo activa PRIMERO\r\n        if (demoAuth === 'true' && demoUser) {\r\n          try {\r\n            const parsedUser = typeof demoUser === 'string' ? JSON.parse(demoUser) : demoUser;\r\n            logger.info('🎭 Cargando perfil demo pareja:', parsedUser);\r\n            \r\n            // Usar el perfil demo o generar uno basado en los datos demo\r\n            const mockCoupleProfiles = generateMockCoupleProfiles();\r\n            const demoProfile = mockCoupleProfiles[0]; // Usar el primer perfil como demo\r\n            \r\n            setProfile(demoProfile);\r\n            setLoading(false);\r\n            return;\r\n          } catch (error) {\r\n            logger.error('Error parseando usuario demo pareja:', { error: String(error) });\r\n          }\r\n        }\r\n        \r\n        // Verificar autenticación usando useAuth\r\n        if (!isAuthenticated) {\r\n          logger.info('❌ No autenticado, redirigiendo a auth');\r\n          navigate('/auth', { replace: true });\r\n          return;\r\n        }\r\n        \r\n        // Simular carga de perfil de pareja real\r\n        setTimeout(() => {\r\n          const mockCoupleProfiles = generateMockCoupleProfiles();\r\n          const selectedProfile = mockCoupleProfiles[0];\r\n          \r\n          setProfile(selectedProfile);\r\n          setLoading(false);\r\n        }, 1500);\r\n        \r\n      } catch (error) {\r\n        logger.error('Error loading profile:', { error: String(error) });\r\n        // Fallback a perfil mock\r\n        const mockCoupleProfiles = generateMockCoupleProfiles();\r\n        setProfile(mockCoupleProfiles[0]);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadProfile();\r\n  }, [isAuthenticated, navigate]);\r\n\r\n  if (loading || !profile) {\r\n    return (\r\n      <div className=\"min-h-screen relative overflow-hidden bg-hero-gradient\">\r\n        <div className=\"fixed inset-0 z-0\">\r\n          <div className=\"absolute inset-0 opacity-40\">\r\n            <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-r from-primary/20 via-transparent to-accent/20 animate-gradient-x\"></div>\r\n            <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-b from-transparent via-secondary/10 to-primary/15 animate-gradient-y\"></div>\r\n          </div>\r\n          \r\n          <div className=\"absolute inset-0\">\r\n            <div className=\"absolute top-20 left-20 w-64 h-64 bg-primary/5 rounded-full blur-3xl animate-float-slow\"></div>\r\n            <div className=\"absolute top-40 right-32 w-48 h-48 bg-accent/8 rounded-full blur-2xl animate-float-reverse\"></div>\r\n            <div className=\"absolute bottom-32 left-1/3 w-80 h-80 bg-secondary/4 rounded-full blur-3xl animate-float-slow shape-delay-2\"></div>\r\n            <div className=\"absolute bottom-20 right-20 w-56 h-56 bg-primary/6 rounded-full blur-2xl animate-float shape-delay-1\"></div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"relative z-10 flex flex-col min-h-screen\">\r\n          <div className=\"bg-black/80 backdrop-blur-md border-b border-white/30 p-3 sm:p-4 shadow-lg flex-shrink-0\">\r\n            <div className=\"flex items-center justify-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-white\"></div>\r\n              <span className=\"ml-3 text-white\">Cargando perfil...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen relative overflow-hidden bg-hero-gradient\">\r\n      <div className=\"fixed inset-0 z-0\">\r\n        <div className=\"absolute inset-0 opacity-40\">\r\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-r from-primary/20 via-transparent to-accent/20 animate-gradient-x\"></div>\r\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-b from-transparent via-secondary/10 to-primary/15 animate-gradient-y\"></div>\r\n        </div>\r\n        \r\n        <div className=\"absolute inset-0\">\r\n          <div className=\"absolute top-20 left-20 w-64 h-64 bg-primary/5 rounded-full blur-3xl animate-float-slow\"></div>\r\n          <div className=\"absolute top-40 right-32 w-48 h-48 bg-accent/8 rounded-full blur-2xl animate-float-reverse\"></div>\r\n          <div className=\"absolute bottom-32 left-1/3 w-80 h-80 bg-secondary/4 rounded-full blur-3xl animate-float-slow shape-delay-2\"></div>\r\n          <div className=\"absolute bottom-20 right-20 w-56 h-56 bg-primary/6 rounded-full blur-2xl animate-float shape-delay-1\"></div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"relative z-10 flex flex-col min-h-screen\">\r\n        <div className=\"bg-black/80 backdrop-blur-md border-b border-white/30 p-3 sm:p-4 shadow-lg flex-shrink-0\">\r\n          <div className=\"flex items-center justify-between flex-wrap gap-2\">\r\n            <h1 className=\"text-base sm:text-lg md:text-xl font-bold text-white text-center flex-1 min-w-0 px-2 truncate\">\r\n              {profile ? profile.couple_name : 'Pareja'}\r\n            </h1>\r\n            <div className=\"flex gap-1 sm:gap-2\">\r\n              <Button \r\n                variant=\"ghost\" \r\n                size=\"sm\" \r\n                className=\"bg-white/10 hover:bg-white/20 p-2 transition-all duration-300 hover:scale-105\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  if (navigator.share) {\r\n                    navigator.share({\r\n                      title: `Perfil de ${profile ? profile.partner1_first_name : 'Ella'} y ${profile ? profile.partner2_first_name : 'Él'}`,\r\n                      text: `Conoce a esta pareja en ComplicesConecta`,\r\n                      url: window.location.href\r\n                    }).catch(console.error);\r\n                  } else {\r\n                    navigator.clipboard.writeText(window.location.href).then(() => \r\n                      alert('Enlace copiado al portapapeles')\r\n                    ).catch(console.error);\r\n                  }\r\n                }}\r\n              >\r\n                <Share2 className=\"h-4 w-4 text-white opacity-90\" />\r\n              </Button>\r\n              <Button \r\n                variant=\"ghost\" \r\n                size=\"sm\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  navigate('/edit-profile-couple');\r\n                }}\r\n                className=\"hover:bg-white/20 p-2 transition-all duration-300 hover:scale-105\"\r\n              >\r\n                <Settings className=\"h-4 w-4 text-white\" />\r\n              </Button>\r\n              <Button \r\n                variant=\"ghost\" \r\n                size=\"sm\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  e.stopPropagation();\r\n                  navigate('/tokens');\r\n                }}\r\n                className=\"hover:bg-white/20 p-2 transition-all duration-300 hover:scale-105\"\r\n              >\r\n                <Crown className=\"h-4 w-4 text-white\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex-1 overflow-y-auto custom-scrollbar\">\r\n          <div className=\"max-w-4xl mx-auto p-2 sm:p-4 space-y-4 sm:space-y-6\">\r\n            {/* Información principal de la pareja */}\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n              <CardContent className=\"p-4 sm:p-6\">\r\n                <div className=\"flex flex-col sm:flex-row items-center sm:items-start gap-4 sm:gap-6\">\r\n                  {/* Avatares de la pareja */}\r\n                  <div className=\"flex items-center gap-2 sm:gap-4 flex-shrink-0\">\r\n                    <div className=\"relative\">\r\n                      <div className=\"w-20 h-20 sm:w-24 sm:h-24 rounded-full bg-gradient-to-br from-pink-400 to-purple-600 flex items-center justify-center text-white text-lg sm:text-2xl font-bold\">\r\n                        {profile?.partner1_first_name?.[0]?.toUpperCase() || 'E'}\r\n                      </div>\r\n                      {profile?.is_verified && (\r\n                        <div className=\"absolute -top-1 -right-1 bg-blue-500 rounded-full p-1\">\r\n                          <Verified className=\"w-3 h-3 sm:w-4 sm:h-4 text-white\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <Heart className=\"w-5 h-5 sm:w-6 sm:h-6 text-pink-400 animate-pulse\" />\r\n                    <div className=\"relative\">\r\n                      <div className=\"w-20 h-20 sm:w-24 sm:h-24 rounded-full bg-gradient-to-br from-purple-400 to-pink-600 flex items-center justify-center text-white text-lg sm:text-2xl font-bold\">\r\n                        {profile?.partner2_first_name?.[0]?.toUpperCase() || 'É'}\r\n                      </div>\r\n                      {profile?.is_verified && (\r\n                        <div className=\"absolute -top-1 -right-1 bg-blue-500 rounded-full p-1\">\r\n                          <Verified className=\"w-3 h-3 sm:w-4 sm:h-4 text-white\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Información básica */}\r\n                  <div className=\"flex-1 text-center sm:text-left\">\r\n                    <h2 className=\"text-xl sm:text-2xl font-bold mb-2\">\r\n                      {profile?.partner1_first_name} & {profile?.partner2_first_name}\r\n                    </h2>\r\n                    <div className=\"flex flex-wrap gap-2 justify-center sm:justify-start mb-4\">\r\n                      <Badge variant=\"secondary\" className=\"bg-white/20 text-white border-white/30 text-xs sm:text-sm\">\r\n                        Pareja\r\n                      </Badge>\r\n                      <Badge variant=\"secondary\" className=\"bg-white/20 text-white border-white/30 flex items-center gap-1 text-xs sm:text-sm\">\r\n                        <MapPin className=\"w-3 h-3\" />\r\n                        {profile?.location || 'CDMX, México'}\r\n                      </Badge>\r\n                    </div>\r\n                    \r\n                    {/* Biografía */}\r\n                    <p className=\"text-white/90 mb-4 leading-relaxed text-sm sm:text-base\">\r\n                      Una pareja aventurera que busca nuevas experiencias y conexiones auténticas.\r\n                    </p>\r\n\r\n                    {/* Botones de acción */}\r\n                    <div className=\"flex flex-wrap gap-2 sm:gap-3 justify-center sm:justify-start\">\r\n                      <Button \r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          e.stopPropagation();\r\n                          navigate('/edit-profile-couple');\r\n                        }}\r\n                        className=\"bg-white/20 hover:bg-white/30 text-white border-white/30 flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <Settings className=\"w-4 h-4\" />\r\n                        <span className=\"hidden sm:inline\">Editar Perfil</span>\r\n                        <span className=\"sm:hidden\">Editar</span>\r\n                      </Button>\r\n                      \r\n                      <Button \r\n                        onClick={() => setShowReportDialog(true)}\r\n                        variant=\"outline\"\r\n                        className=\"bg-red-500/20 hover:bg-red-600/30 text-red-200 border-red-400/30 flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                        size=\"sm\"\r\n                      >\r\n                        <Flag className=\"w-4 h-4\" />\r\n                        <span className=\"hidden sm:inline\">Reportar</span>\r\n                        <span className=\"sm:hidden\">Report</span>\r\n                      </Button>\r\n                      \r\n                      {/* Botón para solicitar acceso a fotos privadas */}\r\n                      {privateImageAccess === 'none' && (\r\n                        <Button \r\n                          onClick={() => setShowPrivateImageRequest(true)}\r\n                          className=\"bg-purple-600/80 hover:bg-purple-700/80 text-white flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                          size=\"sm\"\r\n                        >\r\n                          <Lock className=\"w-4 h-4\" />\r\n                          <span className=\"hidden sm:inline\">Ver Fotos Privadas</span>\r\n                          <span className=\"sm:hidden\">Privadas</span>\r\n                        </Button>\r\n                      )}\r\n                      \r\n                      {/* Estado de solicitud pendiente */}\r\n                      {privateImageAccess === 'pending' && (\r\n                        <Button \r\n                          disabled\r\n                          className=\"bg-yellow-600/80 text-white flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                          size=\"sm\"\r\n                        >\r\n                          <Lock className=\"w-4 h-4\" />\r\n                          <span className=\"hidden sm:inline\">Solicitud Pendiente</span>\r\n                          <span className=\"sm:hidden\">Pendiente</span>\r\n                        </Button>\r\n                      )}\r\n                      \r\n                      {/* Acceso aprobado */}\r\n                      {privateImageAccess === 'approved' && (\r\n                        <Button \r\n                          onClick={() => {/* Mostrar galería privada */}}\r\n                          className=\"bg-green-600/80 hover:bg-green-700/80 text-white flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                          size=\"sm\"\r\n                        >\r\n                          <Images className=\"w-4 h-4\" />\r\n                          <span className=\"hidden sm:inline\">Fotos Privadas</span>\r\n                          <span className=\"sm:hidden\">Privadas</span>\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Profile Navigation Tabs - Estilo Twitter/Instagram */}\r\n            <ProfileNavTabs \r\n              isOwnProfile={isOwnProfile}\r\n              onUploadImage={handleUploadImage}\r\n              onDeletePost={handleDeletePost}\r\n              onCommentPost={handleCommentPost}\r\n            />\r\n\r\n            {/* Galería privada - solo si tiene acceso aprobado */}\r\n            {privateImageAccess === 'approved' && (\r\n              <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white mt-6\">\r\n                <CardContent className=\"p-4 sm:p-6\">\r\n                  <PrivateImageGallery \r\n                    profileId={profile?.id || ''}\r\n                    profileName={profile ? `${profile.partner1_first_name || ''} & ${profile.partner2_first_name || ''}` : 'Pareja'}\r\n                    profileType=\"couple\"\r\n                    isOwner={false}\r\n                    hasAccess={true}\r\n                    images={[\r\n                      {\r\n                        id: '1',\r\n                        url: '/src/assets/people/privado/coupleprivjpg.jpg',\r\n                        thumbnail: '/src/assets/people/privado/coupleprivjpg.jpg',\r\n                        uploadedAt: new Date()\r\n                      }\r\n                    ]}\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Navegación inferior fija */}\r\n        <div className=\"fixed bottom-0 left-0 right-0 z-50\">\r\n          <NavigationEnhanced />\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Modal de solicitud de acceso a fotos privadas */}\r\n      {showPrivateImageRequest && (\r\n        <PrivateImageRequest\r\n          isOpen={showPrivateImageRequest}\r\n          onClose={() => setShowPrivateImageRequest(false)}\r\n          profileId={profile?.id || ''}\r\n          profileName={profile ? `${profile.partner1_first_name || ''} & ${profile.partner2_first_name || ''}` : 'Pareja'}\r\n          profileType=\"couple\"\r\n          onRequestSent={() => {\r\n            setPrivateImageAccess('pending');\r\n            setShowPrivateImageRequest(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Modal de reporte */}\r\n      <ReportDialog\r\n        profileId={profile?.id || ''}\r\n        profileName={profile ? `${profile.partner1_first_name || ''} & ${profile.partner2_first_name || ''}` : 'Pareja'}\r\n        isOpen={showReportDialog}\r\n        onOpenChange={setShowReportDialog}\r\n        onReport={(reason) => {\r\n          console.log('Perfil reportado por:', reason);\r\n          // Aquí se implementará la lógica de reporte\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCouple;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ProfileDetail.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ProfileSingle.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDemoAuth' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":56,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":56,"endColumn":31},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDemoUser' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":57,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":57,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { \r\n  Camera, \r\n  Heart, \r\n  MapPin, \r\n  Edit, \r\n  Lock,\r\n  Flag,\r\n  CheckCircle,\r\n  Crown,\r\n  Images\r\n} from 'lucide-react';\r\nimport NavigationEnhanced from '@/components/NavigationEnhanced';\r\nimport { ProfileNavTabs } from '@/components/profile/ProfileNavTabs';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { logger } from '@/lib/logger';\r\nimport { usePersistedState } from '@/hooks/usePersistedState';\r\nimport type { Tables } from '@/integrations/supabase/types';\r\nimport { PrivateImageRequest } from '@/components/profile/PrivateImageRequest';\r\nimport { PrivateImageGallery } from '@/components/profile/PrivateImageGallery';\r\nimport { ReportDialog } from '@/components/swipe/ReportDialog';\r\n\r\nconst ProfileSingle: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { user, profile: authProfile, isAuthenticated } = useAuth();\r\n  const [profile, setProfile] = useState<Tables<'profiles'> | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showPrivateImageRequest, setShowPrivateImageRequest] = useState(false);\r\n  const [privateImageAccess, setPrivateImageAccess] = usePersistedState<'none' | 'pending' | 'approved' | 'denied'>('private_image_access', 'none');\r\n  const [showReportDialog, setShowReportDialog] = useState(false);\r\n  \r\n  // Determinar si es el perfil propio\r\n  const isOwnProfile = user?.id === profile?.user_id;\r\n\r\n  // Handlers para las acciones del perfil\r\n  const handleUploadImage = () => {\r\n    logger.info('Subir imagen solicitado');\r\n    // Implementar lógica de subida de imagen\r\n  };\r\n\r\n  const handleDeletePost = (postId: string) => {\r\n    logger.info('Eliminar post solicitado', { postId });\r\n    // Implementar lógica de eliminación de post\r\n  };\r\n\r\n  const handleCommentPost = (postId: string) => {\r\n    logger.info('Comentar post solicitado', { postId });\r\n    // Implementar lógica de comentario\r\n  };\r\n  \r\n  // Migración localStorage → usePersistedState\r\n  const [demoAuth, setDemoAuth] = usePersistedState('demo_authenticated', 'false');\r\n  const [demoUser, setDemoUser] = usePersistedState<any>('demo_user', null);\r\n\r\n  useEffect(() => {\r\n    const loadProfile = async () => {\r\n      try {\r\n        // Solo log una vez al montar el componente\r\n        if (!profile) {\r\n          logger.info('🔍 ProfileSingle - Estado de autenticación:', {\r\n            user: !!user,\r\n            authProfile: !!authProfile,\r\n            isDemo: authProfile?.is_demo,\r\n            userEmail: user?.email,\r\n            isAuthenticated,\r\n            demoAuth,\r\n            demoAuthType: typeof demoAuth,\r\n            demoUser: !!demoUser\r\n          });\r\n        }\r\n        \r\n        // Verificar si hay sesión demo activa PRIMERO - manejar tanto string como boolean\r\n        const isDemoActive = (String(demoAuth) === 'true') && demoUser;\r\n        if (isDemoActive && !profile) {\r\n          try {\r\n            const parsedUser = typeof demoUser === 'string' ? JSON.parse(demoUser) : demoUser;\r\n            \r\n            // Crear perfil demo estático una sola vez\r\n            const profileData: Tables<'profiles'> = {\r\n              id: parsedUser.id || 'demo-single-1',\r\n              name: parsedUser.first_name || 'Sofía',\r\n              user_id: parsedUser.id || 'demo-user-1',\r\n              age: 28,\r\n              bio: 'Explorando nuevas conexiones y experiencias auténticas. Me encanta viajar, la música y conocer personas interesantes.',\r\n              account_type: parsedUser.accountType || 'single',\r\n              age_range_max: null,\r\n              age_range_min: null,\r\n              avatar_url: '/placeholder.svg',\r\n              blocked_at: null,\r\n              blocked_reason: null,\r\n              created_at: new Date().toISOString(),\r\n              gender: 'female',\r\n              interested_in: null,\r\n              interests: ['Viajes', 'Música', 'Arte', 'Cocina', 'Fotografía'],\r\n              is_active: true,\r\n              is_blocked: false,\r\n              is_demo: true,\r\n              is_premium: false,\r\n              is_verified: true,\r\n              location: 'Ciudad de México, México',\r\n              looking_for: null,\r\n              max_distance: null,\r\n              suspension_end_date: null,\r\n              swinger_experience: null,\r\n              updated_at: new Date().toISOString(),\r\n              warnings_count: null\r\n            };\r\n            \r\n            setProfile(profileData);\r\n            setIsLoading(false);\r\n            return;\r\n          } catch (error) {\r\n            logger.error('Error parseando usuario demo:', { error: String(error) });\r\n          }\r\n        }\r\n        \r\n        // Si authProfile ya está disponible, usarlo directamente\r\n        if (authProfile && authProfile.id) {\r\n          logger.info('📄 Perfil cargado exitosamente:', { name: authProfile.name });\r\n          setProfile(authProfile);\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Si hay usuario pero no perfil, esperar a que se cargue\r\n        if (user && !authProfile) {\r\n          logger.info('⏳ Usuario autenticado, esperando carga del perfil...');\r\n          // Mantener loading state hasta que el perfil se cargue\r\n          return;\r\n        }\r\n        \r\n        // Si no hay autenticación válida Y no es demo, redirigir\r\n        if (!isAuthenticated && !(String(demoAuth) === 'true' && demoUser)) {\r\n          logger.info('❌ No hay autenticación válida, redirigiendo...');\r\n          navigate('/auth', { replace: true });\r\n          return;\r\n        }\r\n        \r\n        // Si llegamos aquí sin perfil ni usuario pero con demo, mostrar error\r\n        if (String(demoAuth) === 'true' && demoUser && !profile) {\r\n          logger.info('⚠️ Demo autenticado pero perfil no cargado, reintentando...');\r\n          // El perfil demo debería haberse cargado arriba, algo falló\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Estado inesperado final - solo log una vez\r\n        if (!profile) {\r\n          logger.info('⚠️ Estado inesperado: sin usuario ni perfil válido');\r\n        }\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        logger.error('Error cargando perfil:', { error: String(error) });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadProfile();\r\n  }, [user, authProfile, isAuthenticated, navigate, demoAuth, demoUser]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-500 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Cargando perfil...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!profile) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-purple-800 to-pink-800 flex items-center justify-center\">\r\n        <Card className=\"w-full max-w-md mx-4\">\r\n          <CardContent className=\"p-6 text-center\">\r\n            <h2 className=\"text-xl font-semibold mb-2\">Perfil no encontrado</h2>\r\n            <p className=\"text-white/80 mb-4\">No se pudo cargar la información del perfil.</p>\r\n            <Button onClick={() => navigate('/discover')} className=\"border border-white/30 bg-transparent text-white hover:bg-white/10\">\r\n              Volver al inicio\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-purple-800 to-pink-800\">\r\n      {/* Navegación superior */}\r\n      <NavigationEnhanced />\r\n      \r\n      {/* Header con navegación */}\r\n      <div className=\"relative\">\r\n        <div className=\"absolute inset-0 bg-black/20\" />\r\n        <div className=\"relative z-10 pt-8 pb-6 px-4\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold text-white mb-2\">\r\n              Mi Perfil - {profile.name}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Contenido principal con scroll personalizado */}\r\n      <div className=\"relative z-10 pb-20 px-2 sm:px-4 max-h-[calc(100vh-140px)] overflow-y-auto custom-scrollbar\">\r\n        <div className=\"max-w-4xl mx-auto space-y-4 sm:space-y-6\">\r\n          {/* Información principal del perfil */}\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n            <CardContent className=\"p-4 sm:p-6\">\r\n              <div className=\"flex flex-col sm:flex-row items-center sm:items-start gap-4 sm:gap-6\">\r\n                {/* Avatar */}\r\n                <div className=\"relative flex-shrink-0\">\r\n                  <div className=\"w-24 h-24 sm:w-32 sm:h-32 rounded-full bg-gradient-to-br from-pink-400 to-purple-600 flex items-center justify-center text-white text-2xl sm:text-4xl font-bold\">\r\n                    {profile.name?.[0]?.toUpperCase() || 'U'}\r\n                  </div>\r\n                  {profile.is_verified && (\r\n                    <div className=\"absolute -top-2 -right-2 bg-blue-500 rounded-full p-1\">\r\n                      <CheckCircle className=\"w-6 h-6 text-white\" />\r\n                    </div>\r\n                  )}\r\n                  {profile.is_premium && (\r\n                    <div className=\"absolute -bottom-2 -right-2 bg-yellow-500 rounded-full p-1\">\r\n                      <Crown className=\"w-6 h-6 text-white\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Información básica */}\r\n                <div className=\"flex-1 text-center sm:text-left\">\r\n                  <h2 className=\"text-xl sm:text-2xl font-bold mb-2\">\r\n                    {profile.name}\r\n                  </h2>\r\n                  <div className=\"flex flex-wrap gap-2 justify-center sm:justify-start mb-4\">\r\n                    <Badge className=\"bg-white/20 text-white border-white/30 text-xs sm:text-sm\">\r\n                      {profile.age} años\r\n                    </Badge>\r\n                    <Badge className=\"bg-white/20 text-white border-white/30 text-xs sm:text-sm\">\r\n                      {profile.gender || 'No especificado'}\r\n                    </Badge>\r\n                    <Badge className=\"bg-white/20 text-white border-white/30 flex items-center gap-1 text-xs sm:text-sm\">\r\n                      <MapPin className=\"w-3 h-3\" />\r\n                      {profile.location || 'CDMX, México'}\r\n                    </Badge>\r\n                  </div>\r\n                  \r\n                  {/* Biografía */}\r\n                  {profile.bio && (\r\n                    <p className=\"text-white/90 mb-4 leading-relaxed\">\r\n                      {profile.bio}\r\n                    </p>\r\n                  )}\r\n\r\n                  {/* Botones de acción */}\r\n                  <div className=\"flex flex-wrap gap-2 sm:gap-3 justify-center sm:justify-start\">\r\n                    <Button \r\n                      onClick={() => navigate('/edit-profile-single')}\r\n                      className=\"bg-white/20 hover:bg-white/30 text-white border-white/30 flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                    >\r\n                      <Edit className=\"w-4 h-4\" />\r\n                      <span className=\"hidden sm:inline\">Editar Perfil</span>\r\n                      <span className=\"sm:hidden\">Editar</span>\r\n                    </Button>\r\n                    \r\n                    <Button \r\n                      onClick={() => setShowReportDialog(true)}\r\n                      className=\"bg-red-500/20 hover:bg-red-600/30 text-red-200 border-red-400/30 flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2 border\"\r\n                    >\r\n                      <Flag className=\"w-4 h-4\" />\r\n                      <span className=\"hidden sm:inline\">Reportar</span>\r\n                      <span className=\"sm:hidden\">Report</span>\r\n                    </Button>\r\n                    \r\n                    {/* Botón para solicitar acceso a fotos privadas */}\r\n                    {privateImageAccess === 'none' && (\r\n                      <Button \r\n                        onClick={() => setShowPrivateImageRequest(true)}\r\n                        className=\"bg-purple-600/80 hover:bg-purple-700/80 text-white flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                      >\r\n                        <Lock className=\"w-4 h-4\" />\r\n                        <span className=\"hidden sm:inline\">Ver Fotos Privadas</span>\r\n                        <span className=\"sm:hidden\">Privadas</span>\r\n                      </Button>\r\n                    )}\r\n                    \r\n                    {/* Estado de solicitud pendiente */}\r\n                    {privateImageAccess === 'pending' && (\r\n                      <Button \r\n                        disabled\r\n                        className=\"bg-yellow-600/80 text-white flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                      >\r\n                        <Lock className=\"w-4 h-4\" />\r\n                        <span className=\"hidden sm:inline\">Solicitud Pendiente</span>\r\n                        <span className=\"sm:hidden\">Pendiente</span>\r\n                      </Button>\r\n                    )}\r\n                    \r\n                    {/* Acceso aprobado */}\r\n                    {privateImageAccess === 'approved' && (\r\n                      <Button \r\n                        onClick={() => {/* Mostrar galería privada */}}\r\n                        className=\"bg-green-600/80 hover:bg-green-700/80 text-white flex items-center gap-2 text-sm sm:text-base px-3 sm:px-4 py-2\"\r\n                      >\r\n                        <Images className=\"w-4 h-4\" />\r\n                        <span className=\"hidden sm:inline\">Fotos Privadas</span>\r\n                        <span className=\"sm:hidden\">Privadas</span>\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Estadísticas */}\r\n          <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-3 sm:gap-4\">\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n              <CardContent className=\"p-3 sm:p-4 text-center\">\r\n                <Heart className=\"w-6 h-6 sm:w-8 sm:h-8 mx-auto mb-2 text-pink-400\" />\r\n                <div className=\"text-lg sm:text-2xl font-bold\">{(profile as any).likes || 0}</div>\r\n                <div className=\"text-xs sm:text-sm text-white/70\">Likes</div>\r\n              </CardContent>\r\n            </Card>\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n              <CardContent className=\"p-3 sm:p-4 text-center\">\r\n                <div className=\"text-lg sm:text-2xl font-bold text-purple-400\">8</div>\r\n                <div className=\"text-xs sm:text-sm text-white/80\">Conversaciones</div>\r\n              </CardContent>\r\n            </Card>\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n              <CardContent className=\"p-3 sm:p-4 text-center\">\r\n                <div className=\"text-2xl font-bold text-blue-400\">156</div>\r\n                <div className=\"text-sm text-white/80\">Visitas</div>\r\n              </CardContent>\r\n            </Card>\r\n            <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n              <CardContent className=\"p-4 text-center\">\r\n                <div className=\"text-lg sm:text-2xl font-bold text-green-400\">95%</div>\r\n                <div className=\"text-xs sm:text-sm text-white/80\">Compatibilidad</div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Profile Navigation Tabs - Estilo Twitter/Instagram */}\r\n          <ProfileNavTabs \r\n            isOwnProfile={isOwnProfile}\r\n            onUploadImage={handleUploadImage}\r\n            onDeletePost={handleDeletePost}\r\n            onCommentPost={handleCommentPost}\r\n          />\r\n\r\n          {/* Intereses */}\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-white\">Mis Intereses</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {['Viajes', 'Música', 'Deportes', 'Cocina', 'Lectura', 'Cine', 'Arte', 'Naturaleza'].map((interest) => (\r\n                  <Badge \r\n                    key={interest} \r\n                    className=\"bg-gradient-to-r from-pink-500/20 to-purple-600/20 text-white border-pink-400/30 hover:bg-pink-500/30 transition-colors\"\r\n                  >\r\n                    {interest}\r\n                  </Badge>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Galería */}\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20 text-white\">\r\n            <CardHeader>\r\n              <CardTitle className=\"text-white flex items-center gap-2\">\r\n                <Images className=\"w-5 h-5\" />\r\n                Galería de Fotos\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {/* Mostrar mensaje de acceso denegado si corresponde */}\r\n              {privateImageAccess === 'denied' && (\r\n                <div className=\"text-center py-8\">\r\n                  <Lock className=\"w-12 h-12 mx-auto mb-4 text-red-400\" />\r\n                  <h3 className=\"text-lg font-semibold text-red-400 mb-2\">Acceso Denegado</h3>\r\n                  <p className=\"text-white/70\">Tu solicitud para ver las fotos privadas fue denegada.</p>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Galería pública siempre visible */}\r\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4 mb-6\">\r\n                <div className=\"aspect-square bg-gradient-to-br from-pink-400 to-purple-600 rounded-lg flex items-center justify-center overflow-hidden\">\r\n                  <img \r\n                    src=\"/src/assets/profile-1.jpg\" \r\n                    alt=\"Foto pública 1\"\r\n                    className=\"w-full h-full object-cover\"\r\n                    onError={(e) => {\r\n                      e.currentTarget.src = '/placeholder.svg';\r\n                    }}\r\n                  />\r\n                  <Camera className=\"w-8 h-8 text-white hidden\" />\r\n                </div>\r\n                <div className=\"aspect-square bg-gradient-to-br from-purple-400 to-blue-600 rounded-lg flex items-center justify-center overflow-hidden\">\r\n                  <img \r\n                    src=\"/placeholder.svg\" \r\n                    alt=\"Foto pública 2\"\r\n                    className=\"w-full h-full object-cover\"\r\n                    onError={(e) => {\r\n                      const target = e.target as HTMLImageElement;\r\n                      target.style.display = 'none';\r\n                      target.nextElementSibling?.classList.remove('hidden');\r\n                    }}\r\n                  />\r\n                  <Camera className=\"w-8 h-8 text-white hidden\" />\r\n                </div>\r\n                <div className=\"aspect-square bg-gradient-to-br from-blue-400 to-teal-600 rounded-lg flex items-center justify-center overflow-hidden\">\r\n                  <img \r\n                    src=\"/placeholder.svg\" \r\n                    alt=\"Foto pública 3\"\r\n                    className=\"w-full h-full object-cover\"\r\n                    onError={(e) => {\r\n                      const target = e.target as HTMLImageElement;\r\n                      target.style.display = 'none';\r\n                      target.nextElementSibling?.classList.remove('hidden');\r\n                    }}\r\n                  />\r\n                  <Camera className=\"w-8 h-8 text-white hidden\" />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Galería privada - visible solo para el dueño del perfil */}\r\n              <div className=\"mb-6\">\r\n                <h4 className=\"text-white font-semibold mb-3 flex items-center gap-2\">\r\n                  <Lock className=\"w-4 h-4\" />\r\n                  Fotos Privadas\r\n                </h4>\r\n                <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\r\n                  <div className=\"aspect-square rounded-lg overflow-hidden relative\">\r\n                    <img \r\n                      src=\"/placeholder.svg\" \r\n                      alt=\"Foto privada 1\"\r\n                      className={`w-full h-full object-cover ${(profile as any)?.isOwner ? '' : 'filter blur-md'}`}\r\n                    />\r\n                    {!(profile as any)?.isOwner && (\r\n                      <div className=\"absolute inset-0 bg-black/30 flex items-center justify-center\">\r\n                        <Lock className=\"w-8 h-8 text-white\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"aspect-square rounded-lg overflow-hidden relative\">\r\n                    <img \r\n                      src=\"/placeholder.svg\" \r\n                      alt=\"Foto privada 2\"\r\n                      className={`w-full h-full object-cover ${(profile as any)?.isOwner ? '' : 'filter blur-md'}`}\r\n                    />\r\n                    {!(profile as any)?.isOwner && (\r\n                      <div className=\"absolute inset-0 bg-black/30 flex items-center justify-center\">\r\n                        <Lock className=\"w-8 h-8 text-white\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"aspect-square rounded-lg overflow-hidden relative\">\r\n                    <img \r\n                      src=\"/placeholder.svg\" \r\n                      alt=\"Foto privada 3\"\r\n                      className={`w-full h-full object-cover ${(profile as any)?.isOwner ? '' : 'filter blur-md'}`}\r\n                    />\r\n                    {!(profile as any)?.isOwner && (\r\n                      <div className=\"absolute inset-0 bg-black/30 flex items-center justify-center\">\r\n                        <Lock className=\"w-8 h-8 text-white\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Galería privada - solo si tiene acceso aprobado */}\r\n              {privateImageAccess === 'approved' && (\r\n                <PrivateImageGallery \r\n                  profileId={profile?.id || ''}\r\n                  profileName={profile?.name || 'Usuario'}\r\n                  profileType=\"single\"\r\n                  isOwner={false}\r\n                  hasAccess={true}\r\n                  images={[\r\n                    {\r\n                      id: '1',\r\n                      url: '/src/assets/people/privado/erocpriv.jpg',\r\n                      thumbnail: '/src/assets/people/privado/erocpriv.jpg',\r\n                      uploadedAt: new Date()\r\n                    }\r\n                  ]}\r\n                />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Modal de solicitud de acceso a fotos privadas */}\r\n      {showPrivateImageRequest && (\r\n        <PrivateImageRequest\r\n          isOpen={showPrivateImageRequest}\r\n          onClose={() => setShowPrivateImageRequest(false)}\r\n          profileId={profile?.id || ''}\r\n          profileName={profile?.name || ''}\r\n          profileType=\"single\"\r\n          onRequestSent={() => {\r\n            setPrivateImageAccess('pending');\r\n            setShowPrivateImageRequest(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Modal de reporte */}\r\n      <ReportDialog\r\n        profileId={profile?.id || ''}\r\n        profileName={profile?.name || 'Usuario'}\r\n        isOpen={showReportDialog}\r\n        onOpenChange={setShowReportDialog}\r\n        onReport={(reason) => {\r\n          console.log('Perfil reportado por:', reason);\r\n          // Aquí se implementará la lógica de reporte\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSingle;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ProfileThemeDemo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Profiles.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'navigate' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":40,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":40,"endColumn":17},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'handleFilterChange' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":85,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":85,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport NavigationEnhanced from '@/components/NavigationEnhanced';\r\nimport { ContrastFixer } from '@/components/accessibility/ContrastFixer';\r\nimport { logger } from '@/lib/logger';\r\nimport { \r\n  Search, \r\n  Filter, \r\n  Brain, \r\n  Sparkles, \r\n  Heart, \r\n  MapPin \r\n} from 'lucide-react';\r\n\r\ninterface FilterState {\r\n  location: string;\r\n  ageRange: [number, number];\r\n  interests: string[];\r\n  onlineOnly: boolean;\r\n  searchQuery: string;\r\n}\r\n\r\ninterface Profile {\r\n  id: string;\r\n  name: string;\r\n  age: number;\r\n  location: string;\r\n  bio: string;\r\n  images: string[];\r\n  interests: string[];\r\n  isOnline: boolean;\r\n  verified: boolean;\r\n}\r\n\r\nconst Profiles: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [aiSuggestions, setAiSuggestions] = useState<string[]>([]);\r\n  const [aiSearchMode, setAiSearchMode] = useState(false);\r\n  const [filteredProfiles, setFilteredProfiles] = useState<Profile[]>([]);\r\n  const [allProfiles, setAllProfiles] = useState<Profile[]>([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const profilesPerPage = 9;\r\n\r\n  // Datos de ejemplo para evitar errores\r\n  const mockProfiles: Profile[] = [\r\n    {\r\n      id: \"1\",\r\n      name: \"Ana García\",\r\n      age: 28,\r\n      location: \"Ciudad de México\",\r\n      bio: \"Amante de los viajes y la aventura\",\r\n      images: [\"/placeholder.svg\"],\r\n      interests: [\"viajes\", \"música\", \"cocina\"],\r\n      isOnline: true,\r\n      verified: true\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setAllProfiles(mockProfiles);\r\n    setFilteredProfiles(mockProfiles);\r\n  }, []);\r\n\r\n  const handleAiSearch = async (query: string) => {\r\n    setIsSearching(true);\r\n    try {\r\n      // Simulación de búsqueda IA\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      setAiSearchMode(true);\r\n      setAiSuggestions([\"parejas aventureras\", \"lifestyle México\", \"eventos privados\"]);\r\n      logger.info('🤖 Búsqueda IA completada', { query });\r\n    } catch (error) {\r\n      logger.error('❌ Error en búsqueda IA:', { error });\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (filters: FilterState) => {\r\n    logger.info('🔍 Filtros aplicados', { filters });\r\n    // Lógica de filtrado simplificada\r\n    setFilteredProfiles(allProfiles);\r\n  };\r\n\r\n  // Paginación\r\n  const totalPages = Math.ceil(filteredProfiles.length / profilesPerPage);\r\n  const startIndex = (currentPage - 1) * profilesPerPage;\r\n  const currentProfiles = filteredProfiles.slice(startIndex, startIndex + profilesPerPage);\r\n\r\n  const ProfileCard: React.FC<{ profile: Profile; onOpenModal: () => void }> = ({ profile }) => (\r\n    <Card className=\"overflow-hidden hover:shadow-lg transition-shadow\">\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center gap-3 mb-3\">\r\n          <div className=\"w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white font-bold\">\r\n            {profile.name.charAt(0)}\r\n          </div>\r\n          <div>\r\n            <h3 className=\"font-semibold text-white\">{profile.name}</h3>\r\n            <p className=\"text-sm text-white/70\">{profile.age} años • {profile.location}</p>\r\n          </div>\r\n        </div>\r\n        <p className=\"text-sm text-white/80 mb-3\">{profile.bio}</p>\r\n        <div className=\"flex flex-wrap gap-1 mb-3\">\r\n          {profile.interests.slice(0, 3).map((interest, idx) => (\r\n            <Badge key={idx} className=\"text-xs bg-white/20 text-white border-white/30\">\r\n              {interest}\r\n            </Badge>\r\n          ))}\r\n        </div>\r\n        <Button className=\"w-full px-3 py-1.5 text-sm\">\r\n          Ver Perfil\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 p-4 sm:p-6 lg:p-8\">\r\n      <ContrastFixer enabled={true} level=\"AA\" />\r\n      \r\n      {/* Elementos decorativos */}\r\n      <Heart className=\"absolute bottom-1/3 right-1/4 w-5 h-5 text-accent/20 animate-pulse\" fill=\"currentColor\" />\r\n      <MapPin className=\"absolute top-1/2 right-1/6 w-7 h-7 text-secondary/15 animate-pulse\" />\r\n      \r\n      {/* Navegación */}\r\n      <NavigationEnhanced />\r\n      \r\n      <main className=\"container mx-auto px-4 py-8\">\r\n        {/* Encabezado de página */}\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl md:text-5xl font-bold text-white mb-4\">\r\n            Descubre\r\n            <span className=\"block bg-gradient-to-r from-pink-400 to-purple-400 bg-clip-text text-transparent\">\r\n              Tu Match Perfecto\r\n            </span>\r\n          </h1>\r\n          <p className=\"text-xl text-white/90 max-w-2xl mx-auto mb-8\">\r\n            Usa nuestra IA avanzada para encontrar personas compatibles basándose en personalidad, intereses y valores\r\n          </p>\r\n          \r\n          {/* Sección de búsqueda IA */}\r\n          <Card className=\"max-w-2xl mx-auto mb-8 bg-white/10 backdrop-blur-sm border-white/20\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Brain className=\"h-6 w-6 text-purple-400\" />\r\n                  <Sparkles className=\"h-5 w-5 text-pink-400 animate-pulse\" />\r\n                </div>\r\n                <h3 className=\"text-lg font-semibold text-white\">Búsqueda Inteligente por IA</h3>\r\n              </div>\r\n              \r\n              <div className=\"relative\">\r\n                <div className=\"flex gap-2\">\r\n                  <div className=\"relative flex-1\">\r\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-white/70\" />\r\n                    <Input\r\n                      placeholder=\"Busca parejas swinger, solteros lifestyle, eventos privados...\"\r\n                      value={searchQuery}\r\n                      onChange={(e) => setSearchQuery(e.target.value)}\r\n                      className=\"pl-10 pr-4 py-3 text-base bg-white/10 border-white/20 text-white placeholder:text-white/50\"\r\n                    />\r\n                  </div>\r\n                  <Button \r\n                    onClick={() => handleAiSearch(searchQuery)}\r\n                    disabled={isSearching || searchQuery.length < 3}\r\n                    className=\"px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700\"\r\n                  >\r\n                    {isSearching ? (\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\r\n                        Buscando...\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Sparkles className=\"h-4 w-4\" />\r\n                        Buscar\r\n                      </div>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n                \r\n                {/* Sugerencias de IA */}\r\n                {aiSuggestions.length > 0 && (\r\n                  <div className=\"mt-3\">\r\n                    <p className=\"text-sm text-white/90 mb-2\">Sugerencias de IA:</p>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                      {aiSuggestions.map((suggestion, index) => (\r\n                        <Badge \r\n                          key={index}\r\n                          className=\"cursor-pointer hover:bg-white/10 transition-colors border border-white/30 text-white bg-transparent\"\r\n                          onClick={() => {\r\n                            setSearchQuery(suggestion);\r\n                            handleAiSearch(suggestion);\r\n                          }}\r\n                        >\r\n                          {suggestion}\r\n                        </Badge>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {aiSearchMode && (\r\n                <div className=\"mt-4 p-3 bg-purple-500/20 rounded-lg\">\r\n                  <div className=\"flex items-center gap-2 text-sm text-purple-200\">\r\n                    <Brain className=\"h-4 w-4\" />\r\n                    <span>Resultados ordenados por compatibilidad de IA</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Sección de filtros */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center gap-2 mb-4\">\r\n            <Filter className=\"h-5 w-5 text-white/80\" />\r\n            <h3 className=\"text-lg font-semibold text-white\">Filtros Avanzados</h3>\r\n          </div>\r\n          {/* Filtros simplificados para evitar dependencias faltantes */}\r\n          <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\r\n            <CardContent className=\"p-4\">\r\n              <p className=\"text-white/70\">Filtros disponibles próximamente</p>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Resumen de resultados */}\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <p className=\"text-white/90\">\r\n              {filteredProfiles.length} perfiles encontrados\r\n            </p>\r\n            {aiSearchMode && (\r\n              <Badge className=\"bg-purple-500/20 text-purple-200 border border-purple-400/30\">\r\n                <Brain className=\"h-3 w-3 mr-1\" />\r\n                Ordenado por IA\r\n              </Badge>\r\n            )}\r\n          </div>\r\n          <Button \r\n            className=\"border border-white/30 text-white hover:bg-white/10 bg-transparent px-3 py-1.5 text-sm\"\r\n            onClick={() => {\r\n              setFilteredProfiles(allProfiles);\r\n              setAiSearchMode(false);\r\n              setSearchQuery(\"\");\r\n            }}\r\n          >\r\n            Limpiar filtros\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Grid de perfiles */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {currentProfiles.map((profile) => (\r\n            <ProfileCard key={profile.id} profile={profile} onOpenModal={() => {}} />\r\n          ))}\r\n        </div>\r\n\r\n        {/* Paginación */}\r\n        <div className=\"mt-8 flex justify-center\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n              disabled={currentPage === 1}\r\n              className=\"px-3 py-2 text-sm font-medium text-white bg-purple-600/80 border border-purple-400 rounded-md hover:bg-purple-700/80 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              Anterior\r\n            </button>\r\n            <span className=\"px-3 py-2 text-sm font-medium text-white\">\r\n              Página {currentPage} de {totalPages}\r\n            </span>\r\n            <button\r\n              onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\r\n              disabled={currentPage === totalPages}\r\n              className=\"px-3 py-2 text-sm font-medium text-white bg-purple-600/80 border border-purple-400 rounded-md hover:bg-purple-700/80 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              Siguiente\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profiles;","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\ProjectInfo.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'toast' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":17,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":17,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Checkbox } from '@/components/ui/checkbox';\r\nimport { ArrowLeft, FileText, GitBranch, Shield, Users, Send, Info, Lock, Code, Smartphone } from 'lucide-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { logger } from '@/lib/logger';\r\nimport { Header } from '@/components/Header';\r\n\r\nexport default function ProjectInfo() {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const [activeTab, setActiveTab] = useState<'readme' | 'releases' | 'moderators'>('readme');\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900\">\r\n      <Header />\r\n      \r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          {/* Header */}\r\n          <div className=\"flex items-center gap-4 mb-8\">\r\n            <Button\r\n              onClick={() => navigate(-1)}\r\n              className=\"text-white hover:bg-white/10 bg-transparent border-none px-3 py-1 text-sm\"\r\n            >\r\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\r\n              Volver\r\n            </Button>\r\n            <h1 className=\"text-3xl font-bold text-white\">Información del Proyecto</h1>\r\n          </div>\r\n\r\n          {/* Tabs */}\r\n          <div className=\"flex gap-2 mb-6 flex-wrap\">\r\n            <Button\r\n              variant={activeTab === 'readme' ? 'default' : 'ghost'}\r\n              onClick={() => setActiveTab('readme')}\r\n              className=\"text-white\"\r\n            >\r\n              <FileText className=\"h-4 w-4 mr-2\" />\r\n              README\r\n            </Button>\r\n            <Button\r\n              variant={activeTab === 'releases' ? 'default' : 'ghost'}\r\n              onClick={() => setActiveTab('releases')}\r\n              className=\"text-white\"\r\n            >\r\n              <GitBranch className=\"h-4 w-4 mr-2\" />\r\n              Notas de Versión\r\n            </Button>\r\n            <Button\r\n              variant={activeTab === 'moderators' ? 'default' : 'ghost'}\r\n              onClick={() => setActiveTab('moderators')}\r\n              className=\"text-white\"\r\n            >\r\n              <Shield className=\"h-4 w-4 mr-2\" />\r\n              Moderadores\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Content */}\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20\">\r\n            <CardContent className=\"p-8\">\r\n              {activeTab === 'readme' ? (\r\n                <div className=\"prose prose-invert max-w-none\">\r\n                  <h1 className=\"text-4xl font-bold text-white mb-6\">\r\n                    🎯 ComplicesConecta - Plataforma Swinger Premium v3.3.0\r\n                  </h1>\r\n                  \r\n                  <div className=\"bg-green-500/20 border border-green-500/30 rounded-lg p-4 mb-6\">\r\n                    <h2 className=\"text-2xl font-bold text-green-400 mb-2\">\r\n                      🏆 PERFECT SCORE ACHIEVED - Production Ready Enhanced\r\n                    </h2>\r\n                    <p className=\"text-white\">\r\n                      <strong>Estado:</strong> ✅ PRODUCTION READY ENHANCED - PERFECT SCORE 100/100 🏆<br/>\r\n                      <strong>Última Actualización:</strong> 23 de Septiembre, 2025 - 12:18 hrs<br/>\r\n                      <strong>Versión:</strong> 3.3.0 - Dashboard Administrativo y Monitoreo Avanzado\r\n                    </p>\r\n                  </div>\r\n\r\n                  <blockquote className=\"border-l-4 border-pink-500 pl-4 italic text-xl text-white/90 mb-8\">\r\n                    La plataforma de intercambio de parejas más exclusiva y segura de México +18\r\n                  </blockquote>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-white mb-4\">🎯 Misión y Visión</h2>\r\n                  <p className=\"text-white/90 mb-6\">\r\n                    ComplicesConecta es más que una aplicación de citas: es una plataforma integral \r\n                    diseñada específicamente para la comunidad swinger mexicana, ofreciendo un espacio \r\n                    seguro, verificado y discreto para intercambio de parejas y conexiones auténticas.\r\n                  </p>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-white mb-4\">✨ Características Revolucionarias</h2>\r\n                  \r\n                  <h3 className=\"text-xl font-semibold text-purple-400 mb-3\">🧠 Sistema de Matches Inteligente con IA</h3>\r\n                  <ul className=\"text-white/90 mb-4 space-y-2\">\r\n                    <li>• Algoritmo basado en Big Five + traits específicos swinger</li>\r\n                    <li>• Scoring de compatibilidad con análisis multifactorial</li>\r\n                    <li>• Geolocalización avanzada con fórmula de Haversine</li>\r\n                    <li>• Filtros por proximidad y preferencias</li>\r\n                    <li>• Matches mutuos y notificaciones en tiempo real</li>\r\n                  </ul>\r\n\r\n                  <h3 className=\"text-xl font-semibold text-blue-400 mb-3\">💕 Experiencia Social Premium</h3>\r\n                  <ul className=\"text-white/90 mb-4 space-y-2\">\r\n                    <li>• Chat en tiempo real con WebSockets</li>\r\n                    <li>• Video chat P2P con WebRTC</li>\r\n                    <li>• Push notifications nativas</li>\r\n                    <li>• Sistema de conexiones y privacidad</li>\r\n                    <li>• Galerías públicas y privadas</li>\r\n                    <li>• Perfiles de pareja avanzados</li>\r\n                    <li>• Eventos VIP exclusivos</li>\r\n                    <li>• Sistema de tokens CMPX y GTK</li>\r\n                  </ul>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-white mb-4\">📊 Métricas del Proyecto</h2>\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\r\n                    <div className=\"bg-white/5 rounded-lg p-4\">\r\n                      <div className=\"text-2xl font-bold text-pink-400\">220+</div>\r\n                      <div className=\"text-white/70\">Archivos</div>\r\n                    </div>\r\n                    <div className=\"bg-white/5 rounded-lg p-4\">\r\n                      <div className=\"text-2xl font-bold text-purple-400\">35,000+</div>\r\n                      <div className=\"text-white/70\">Líneas de Código</div>\r\n                    </div>\r\n                    <div className=\"bg-white/5 rounded-lg p-4\">\r\n                      <div className=\"text-2xl font-bold text-blue-400\">55+</div>\r\n                      <div className=\"text-white/70\">Componentes React</div>\r\n                    </div>\r\n                    <div className=\"bg-white/5 rounded-lg p-4\">\r\n                      <div className=\"text-2xl font-bold text-green-400\">20</div>\r\n                      <div className=\"text-white/70\">Tablas DB</div>\r\n                    </div>\r\n                    <div className=\"bg-white/5 rounded-lg p-4\">\r\n                      <div className=\"text-2xl font-bold text-yellow-400\">55+</div>\r\n                      <div className=\"text-white/70\">Políticas RLS</div>\r\n                    </div>\r\n                    <div className=\"bg-white/5 rounded-lg p-4\">\r\n                      <div className=\"text-2xl font-bold text-red-400\">100%</div>\r\n                      <div className=\"text-white/70\">Funcional</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : activeTab === 'releases' ? (\r\n                <div className=\"prose prose-invert max-w-none\">\r\n                  <h1 className=\"text-4xl font-bold text-white mb-6\">\r\n                    📋 Notas de Versión - ComplicesConecta\r\n                  </h1>\r\n                  \r\n                  <h2 className=\"text-2xl font-bold text-green-400 mb-4\">v3.3.0 - Dashboard Administrativo (Actual)</h2>\r\n                  <ul className=\"text-white/90 mb-6 space-y-2\">\r\n                    <li>• ✅ Dashboard administrativo completo</li>\r\n                    <li>• ✅ Sistema de monitoreo en tiempo real</li>\r\n                    <li>• ✅ Notificaciones push nativas</li>\r\n                    <li>• ✅ Analytics avanzados de tokens</li>\r\n                    <li>• ✅ Seguridad y auditoría mejorada</li>\r\n                    <li>• ✅ Optimización responsive completa</li>\r\n                  </ul>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-blue-400 mb-4\">v3.2.0 - Sistema de Matching IA</h2>\r\n                  <ul className=\"text-white/90 mb-6 space-y-2\">\r\n                    <li>• 🧠 Algoritmo de matching con IA</li>\r\n                    <li>• 📍 Geolocalización avanzada</li>\r\n                    <li>• 💬 Chat en tiempo real</li>\r\n                    <li>• 📹 Video chat P2P</li>\r\n                    <li>• 🔔 Sistema de notificaciones</li>\r\n                  </ul>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-purple-400 mb-4\">v3.1.0 - Perfiles Avanzados</h2>\r\n                  <ul className=\"text-white/90 mb-6 space-y-2\">\r\n                    <li>• 👫 Perfiles de pareja completos</li>\r\n                    <li>• 🖼️ Galerías públicas y privadas</li>\r\n                    <li>• 🔐 Sistema de verificación</li>\r\n                    <li>• 🎭 Eventos y experiencias</li>\r\n                  </ul>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-orange-400 mb-4\">v3.0.0 - Arquitectura Moderna</h2>\r\n                  <ul className=\"text-white/90 mb-6 space-y-2\">\r\n                    <li>• ⚛️ Migración a React 18</li>\r\n                    <li>• 🎨 Nuevo diseño con Tailwind CSS</li>\r\n                    <li>• 🗄️ Integración con Supabase</li>\r\n                    <li>• 📱 PWA y capacidades nativas</li>\r\n                  </ul>\r\n                </div>\r\n              ) : (\r\n                <div className=\"prose prose-invert max-w-none\">\r\n                  <h1 className=\"text-4xl font-bold text-white mb-6\">\r\n                    🛡️ Programa de Moderadores\r\n                  </h1>\r\n                  \r\n                  <div className=\"bg-blue-500/20 border border-blue-500/30 rounded-lg p-4 mb-6\">\r\n                    <h2 className=\"text-2xl font-bold text-blue-400 mb-2\">\r\n                      🚀 Únete al Equipo de Moderación\r\n                    </h2>\r\n                    <p className=\"text-white\">\r\n                      Ayúdanos a mantener ComplicesConecta como una comunidad segura y respetuosa.\r\n                    </p>\r\n                  </div>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-white mb-4\">👥 ¿Qué hace un Moderador?</h2>\r\n                  <ul className=\"text-white/90 mb-6 space-y-2\">\r\n                    <li>• Revisar reportes de usuarios y contenido</li>\r\n                    <li>• Mantener un ambiente seguro y respetuoso</li>\r\n                    <li>• Aplicar las políticas de la comunidad</li>\r\n                    <li>• Asistir a usuarios con dudas o problemas</li>\r\n                    <li>• Colaborar con el equipo de desarrollo</li>\r\n                  </ul>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-white mb-4\">✨ Beneficios</h2>\r\n                  <ul className=\"text-white/90 mb-6 space-y-2\">\r\n                    <li>• Acceso anticipado a nuevas funciones</li>\r\n                    <li>• Tokens CMPX adicionales mensuales</li>\r\n                    <li>• Badge especial de Moderador</li>\r\n                    <li>• Participación en decisiones de la comunidad</li>\r\n                    <li>• Experiencia en moderación de plataformas</li>\r\n                  </ul>\r\n\r\n                  <h2 className=\"text-2xl font-bold text-white mb-4\">📋 Requisitos</h2>\r\n                  <ul className=\"text-white/90 mb-6 space-y-2\">\r\n                    <li>• Mayor de 21 años</li>\r\n                    <li>• Usuario activo de la plataforma</li>\r\n                    <li>• Disponibilidad de al menos 10 horas semanales</li>\r\n                    <li>• Excelente comunicación y criterio</li>\r\n                    <li>• Compromiso con la seguridad de la comunidad</li>\r\n                  </ul>\r\n\r\n                  <div className=\"mt-8\">\r\n                    <ModeratorApplicationModal />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Información Sensible Protegida */}\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20 mt-6\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <Lock className=\"h-5 w-5 text-yellow-400\" />\r\n                  <span className=\"text-white font-medium\">Información Técnica Detallada</span>\r\n                </div>\r\n                <Dialog>\r\n                  <DialogTrigger asChild>\r\n                    <Button className=\"border border-white/20 text-white hover:bg-white/10 bg-transparent\">\r\n                      Ver Detalles\r\n                    </Button>\r\n                  </DialogTrigger>\r\n                  <DialogContent className=\"bg-gray-900 border-white/20 max-w-4xl max-h-[80vh] overflow-y-auto\">\r\n                    <DialogHeader>\r\n                      <DialogTitle className=\"text-white\">Información Técnica del Proyecto</DialogTitle>\r\n                    </DialogHeader>\r\n                    <div className=\"text-white/90 space-y-4\">\r\n                      <h3 className=\"text-lg font-semibold text-blue-400\">Stack Tecnológico</h3>\r\n                      <p>React 18.3.1, TypeScript, Tailwind CSS, Supabase, PostgreSQL</p>\r\n                      \r\n                      <h3 className=\"text-lg font-semibold text-green-400\">Métricas del Proyecto</h3>\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>Archivos: 220+</div>\r\n                        <div>Líneas de código: 35,000+</div>\r\n                        <div>Componentes: 55+</div>\r\n                        <div>Tablas DB: 20</div>\r\n                      </div>\r\n                      \r\n                      <h3 className=\"text-lg font-semibold text-purple-400\">Funcionalidades</h3>\r\n                      <ul className=\"list-disc list-inside space-y-1\">\r\n                        <li>Sistema de matching con IA</li>\r\n                        <li>Chat en tiempo real</li>\r\n                        <li>Video chat P2P</li>\r\n                        <li>Sistema de tokens CMPX/GTK</li>\r\n                        <li>Dashboard administrativo</li>\r\n                        <li>Notificaciones push</li>\r\n                      </ul>\r\n                    </div>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Quick Actions */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mt-6\">\r\n            <Card className=\"bg-gradient-to-r from-blue-900/80 to-purple-900/80 backdrop-blur-sm border border-blue-400/30\">\r\n              <CardContent className=\"p-6 text-center\">\r\n                <Code className=\"h-8 w-8 text-blue-400 mx-auto mb-3\" />\r\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Código Fuente</h3>\r\n                <p className=\"text-blue-200 text-sm mb-4\">\r\n                  Accede al repositorio completo en GitHub\r\n                </p>\r\n                <Button\r\n                  onClick={() => window.open('https://github.com/complicesconecta/conecta-social-comunidad', '_blank')}\r\n                  className=\"bg-blue-600 hover:bg-blue-700\"\r\n                >\r\n                  Ver en GitHub\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-gradient-to-r from-green-900/80 to-blue-900/80 backdrop-blur-sm border border-green-400/30\">\r\n              <CardContent className=\"p-6 text-center\">\r\n                <Smartphone className=\"h-8 w-8 text-green-400 mx-auto mb-3\" />\r\n                <h3 className=\"text-lg font-semibold text-white mb-2\">APK Android</h3>\r\n                <p className=\"text-green-200 text-sm mb-4\">\r\n                  Descarga la aplicación para Android\r\n                </p>\r\n                <Button\r\n                  onClick={() => window.open('https://github.com/complicesconecta/conecta-social-comunidad/releases', '_blank')}\r\n                  className=\"bg-green-600 hover:bg-green-700\"\r\n                >\r\n                  Descargar v1.3.3 (beta)\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"bg-gradient-to-r from-purple-900/80 to-pink-900/80 backdrop-blur-sm border border-purple-400/30\">\r\n              <CardContent className=\"p-6 text-center\">\r\n                <Info className=\"h-8 w-8 text-purple-400 mx-auto mb-3\" />\r\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Soporte</h3>\r\n                <p className=\"text-purple-200 text-sm mb-4\">\r\n                  Obtén ayuda y reporta problemas\r\n                </p>\r\n                <Button\r\n                  onClick={() => navigate('/support')}\r\n                  className=\"bg-purple-600 hover:bg-purple-700\"\r\n                >\r\n                  Contactar Soporte\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Componente del Modal de Solicitud de Moderador\r\nconst ModeratorApplicationModal = () => {\r\n  const { toast } = useToast();\r\n  const [formData, setFormData] = useState({\r\n    nombre: '',\r\n    correo: '',\r\n    telefono: '',\r\n    experiencia: '',\r\n    motivacion: '',\r\n    disponibilidad: '',\r\n    aceptaTerminos: false\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleInputChange = (field: string, value: string | boolean) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.aceptaTerminos) {\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Términos requeridos\",\r\n        description: \"Debes aceptar los términos y condiciones\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!formData.nombre || !formData.correo || !formData.experiencia || !formData.motivacion) {\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Campos requeridos\",\r\n        description: \"Por favor completa todos los campos obligatorios\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      logger.info('📝 Enviando solicitud de moderador:', { \r\n        nombre: formData.nombre, \r\n        correo: formData.correo \r\n      });\r\n\r\n      // Simular envío de solicitud (sin usar Supabase por ahora)\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      logger.info('✅ Solicitud de moderador enviada exitosamente (simulado)');\r\n\r\n      toast({\r\n        title: \"¡Solicitud enviada exitosamente!\",\r\n        description: `Tu solicitud para moderador ha sido registrada. Te contactaremos en las próximas 48 horas.`,\r\n        duration: 7000\r\n      });\r\n\r\n      // Limpiar formulario\r\n      setFormData({\r\n        nombre: '',\r\n        correo: '',\r\n        telefono: '',\r\n        experiencia: '',\r\n        motivacion: '',\r\n        disponibilidad: '',\r\n        aceptaTerminos: false\r\n      });\r\n\r\n    } catch (error: any) {\r\n      logger.error('❌ Error al enviar solicitud de moderador:', { error: error.message });\r\n      \r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Error al enviar solicitud\",\r\n        description: error.message || \"Hubo un problema al procesar tu solicitud.\"\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogTrigger asChild>\r\n        <Button className=\"bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white\">\r\n          <Users className=\"h-4 w-4 mr-2\" />\r\n          Solicitar ser Moderador\r\n        </Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"bg-gray-900 border-white/20 max-w-2xl max-h-[80vh] overflow-y-auto\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"text-white flex items-center gap-2\">\r\n            <Shield className=\"h-5 w-5\" />\r\n            Solicitud de Moderador\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <Label className=\"text-white\">Nombre Completo *</Label>\r\n              <Input\r\n                value={formData.nombre}\r\n                onChange={(e) => handleInputChange('nombre', e.target.value)}\r\n                className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50\"\r\n                placeholder=\"Tu nombre completo\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <Label className=\"text-white\">Correo Electrónico *</Label>\r\n              <Input\r\n                type=\"email\"\r\n                value={formData.correo}\r\n                onChange={(e) => handleInputChange('correo', e.target.value)}\r\n                className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50\"\r\n                placeholder=\"tu@email.com\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <Label className=\"text-white\">Teléfono</Label>\r\n            <Input\r\n              value={formData.telefono}\r\n              onChange={(e) => handleInputChange('telefono', e.target.value)}\r\n              className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50\"\r\n              placeholder=\"+52 55 1234 5678\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Label className=\"text-white\">Experiencia en Moderación *</Label>\r\n            <Textarea\r\n              value={formData.experiencia}\r\n              onChange={(e) => handleInputChange('experiencia', e.target.value)}\r\n              className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50 min-h-[80px]\"\r\n              placeholder=\"Describe tu experiencia previa en moderación o gestión de comunidades...\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Label className=\"text-white\">¿Por qué quieres ser moderador? *</Label>\r\n            <Textarea\r\n              value={formData.motivacion}\r\n              onChange={(e) => handleInputChange('motivacion', e.target.value)}\r\n              className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50 min-h-[80px]\"\r\n              placeholder=\"Cuéntanos tu motivación para ser parte del equipo de moderación...\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Label className=\"text-white\">Disponibilidad Semanal</Label>\r\n            <Input\r\n              value={formData.disponibilidad}\r\n              onChange={(e) => handleInputChange('disponibilidad', e.target.value)}\r\n              className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50\"\r\n              placeholder=\"Ej: 15 horas, horarios flexibles\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-start space-x-2\">\r\n            <Checkbox\r\n              id=\"terminos-mod\"\r\n              checked={formData.aceptaTerminos}\r\n              onCheckedChange={(checked) => handleInputChange('aceptaTerminos', checked)}\r\n              className=\"border-white/30\"\r\n            />\r\n            <Label htmlFor=\"terminos-mod\" className=\"text-white/90 text-sm leading-relaxed\">\r\n              Acepto los términos y condiciones del programa de moderadores. Entiendo que es una \r\n              posición de responsabilidad voluntaria y me comprometo a mantener la confidencialidad \r\n              y seguir las políticas de la comunidad.\r\n            </Label>\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n            className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white\"\r\n          >\r\n            {isSubmitting ? (\r\n              'Enviando solicitud...'\r\n            ) : (\r\n              <>\r\n                <Send className=\"h-4 w-4 mr-2\" />\r\n                Enviar Solicitud\r\n              </>\r\n            )}\r\n          </Button>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Requests.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDemoAuth' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":36,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":36,"endColumn":31},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'setDemoUser' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":37,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":37,"endColumn":31},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":201,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":201,"endColumn":19},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'pendingReceivedCount' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":236,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":236,"endColumn":29},{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'acceptedCount' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":237,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":237,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect, useCallback } from \"react\";\r\nimport { Header } from \"@/components/Header\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { \r\n  UserPlus, \r\n  UserCheck, \r\n  UserX, \r\n  Clock, // For photo access\r\n  GalleryHorizontal, // For gallery access\r\n  MessageSquare, // For chat access\r\n  MailQuestion,\r\n  Send\r\n} from \"lucide-react\";\r\nimport NavigationEnhanced from \"@/components/NavigationEnhanced\";\r\nimport { useFeatures } from \"@/hooks/useFeatures\";\r\nimport { invitationService, type Invitation } from \"@/lib/invitations\";\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { logger } from '@/lib/logger';\r\nimport { usePersistedState } from '@/hooks/usePersistedState';\r\n\r\nconst Requests = () => {\r\n  const { user, isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const { features } = useFeatures();\r\n  const [receivedInvitations, setReceivedInvitations] = useState<Invitation[]>([]);\r\n  const [sentInvitations, setSentInvitations] = useState<Invitation[]>([]);\r\n  const [activeTab, setActiveTab] = useState<'received' | 'sent'>('received');\r\n  \r\n  // Migración localStorage → usePersistedState\r\n  const [demoAuth, setDemoAuth] = usePersistedState('demo_authenticated', 'false');\r\n  const [demoUser, setDemoUser] = usePersistedState<any>('demo_user', null);\r\n\r\n  const [currentUserId, setCurrentUserId] = useState<string | null>(null);\r\n\r\n  const loadDemoInvitations = () => {\r\n    // Solicitudes demo recibidas\r\n    const demoReceived: Invitation[] = [\r\n      {\r\n        id: 'demo-inv-1',\r\n        from_profile: 'Anabella & Julio',\r\n        to_profile: 'Sofía',\r\n        type: 'chat',\r\n        status: 'pending',\r\n        message: '¡Hola! Nos encantaría conocerte mejor. ¿Te gustaría chatear con nosotros?',\r\n        created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), // 2 horas atrás\r\n        decided_at: null\r\n      },\r\n      {\r\n        id: 'demo-inv-2',\r\n        from_profile: 'Carmen & Roberto',\r\n        to_profile: 'Sofía',\r\n        type: 'gallery',\r\n        status: 'pending',\r\n        message: 'Hola guapa, nos gustó mucho tu perfil. ¿Nos permites ver tu galería privada?',\r\n        created_at: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString(), // 5 horas atrás\r\n        decided_at: null\r\n      },\r\n      {\r\n        id: 'demo-inv-3',\r\n        from_profile: 'Raúl',\r\n        to_profile: 'Sofía',\r\n        type: 'profile',\r\n        status: 'accepted',\r\n        message: '¿Qué tal si nos conocemos mejor?',\r\n        created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(), // 1 día atrás\r\n        decided_at: new Date(Date.now() - 20 * 60 * 60 * 1000).toISOString()\r\n      }\r\n    ];\r\n    \r\n    // Solicitudes demo enviadas\r\n    const demoSent: Invitation[] = [\r\n      {\r\n        id: 'demo-sent-1',\r\n        from_profile: 'Sofía',\r\n        to_profile: 'Miguel & Laura',\r\n        type: 'chat',\r\n        status: 'accepted',\r\n        message: 'Hola, me encantó su perfil. ¿Les gustaría platicar?',\r\n        created_at: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(), // 3 horas atrás\r\n        decided_at: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString()\r\n      },\r\n      {\r\n        id: 'demo-sent-2',\r\n        from_profile: 'Sofía',\r\n        to_profile: 'Carlos',\r\n        type: 'profile',\r\n        status: 'pending',\r\n        message: 'Hola, me pareces muy interesante. ¿Te gustaría conocernos?',\r\n        created_at: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(), // 6 horas atrás\r\n        decided_at: null\r\n      }\r\n    ];\r\n    \r\n    setReceivedInvitations(demoReceived);\r\n    setSentInvitations(demoSent);\r\n    logger.info('🎭 Solicitudes demo cargadas:', { received: demoReceived.length, sent: demoSent.length });\r\n  };\r\n  \r\n  const loadInvitations = useCallback(async () => {\r\n    if (!currentUserId) return;\r\n    \r\n    // Si es modo demo, no hacer llamadas reales\r\n    if (demoAuth === 'true') {\r\n      loadDemoInvitations();\r\n      return;\r\n    }\r\n    \r\n    const { received, sent } = await invitationService.getInvitations(currentUserId);\r\n    setReceivedInvitations(received);\r\n    setSentInvitations(sent);\r\n  }, [currentUserId, demoAuth]);\r\n\r\n  useEffect(() => {\r\n    if (currentUserId) {\r\n      loadInvitations();\r\n    }\r\n  }, [currentUserId, loadInvitations, navigate, demoAuth, demoUser]);\r\n\r\n  useEffect(() => {\r\n    // Detectar modo demo\r\n    const isDemoMode = demoAuth === 'true' && demoUser;\r\n    \r\n    if (isDemoMode) {\r\n      // Modo demo - usar datos mock\r\n      try {\r\n        const parsedDemoUser = typeof demoUser === 'string' ? JSON.parse(demoUser) : demoUser;\r\n        setCurrentUserId(parsedDemoUser.id || 'demo-user-1');\r\n        loadDemoInvitations();\r\n      } catch (error) {\r\n        console.error('Error parsing demo user:', error);\r\n        setCurrentUserId('demo-user-1');\r\n        loadDemoInvitations();\r\n      }\r\n      return;\r\n    }\r\n    \r\n    \r\n    // Verificar autenticación real - solo redirigir si realmente no está autenticado\r\n    try {\r\n      if (!isAuthenticated) {\r\n        logger.info('❌ Usuario no autenticado en Requests, redirigiendo a /auth');\r\n        navigate('/auth');\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      logger.error('❌ Error verificando autenticación en Requests:', { error });\r\n      // No redirigir automáticamente en caso de error, permitir que el usuario permanezca\r\n      toast({\r\n        title: \"Advertencia\",\r\n        description: \"Hubo un problema verificando la autenticación. Si persiste, intenta cerrar y abrir sesión.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n    \r\n    // Usuario real autenticado\r\n    const userId = user?.id;\r\n    if (userId) {\r\n      setCurrentUserId(userId);\r\n      logger.info('✅ Usuario real autenticado en Requests con ID:', { userId });\r\n    } else {\r\n      logger.info('❌ No se pudo obtener userId, redirigiendo a /auth');\r\n      navigate('/auth');\r\n    }\r\n  }, [demoAuth, demoUser, user]);\r\n\r\n  const handleInvitationAction = async (invitationId: string, action: 'accept' | 'decline') => {\r\n    try {\r\n      // Si es modo demo, simular la acción\r\n      if (demoAuth === 'true') {\r\n        // Actualizar el estado local para demo\r\n        setReceivedInvitations(prev => \r\n          prev.map(inv => \r\n            inv.id === invitationId \r\n              ? { ...inv, status: action === 'accept' ? 'accepted' : 'declined' as const }\r\n              : inv\r\n          )\r\n        );\r\n        \r\n        toast({\r\n          title: `Invitación ${action === 'accept' ? 'aceptada' : 'rechazada'}`,\r\n          description: `La invitación ha sido procesada correctamente (modo demo).`,\r\n        });\r\n        \r\n        logger.info('🎭 Acción demo en invitación:', { invitationId, action });\r\n        return;\r\n      }\r\n      \r\n      // Modo real\r\n      await invitationService.respondInvitation(invitationId, action);\r\n      toast({\r\n        title: `Invitación ${action === 'accept' ? 'aceptada' : 'rechazada'}`,\r\n        description: `La invitación ha sido procesada correctamente.`,\r\n      });\r\n      loadInvitations(); // Refresh the list\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"No se pudo procesar la solicitud. Inténtalo de nuevo.\",\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const getInvitationTypeIcon = (type: Invitation['type']) => {\r\n    switch (type) {\r\n      case 'gallery':\r\n        return <GalleryHorizontal className=\"h-4 w-4 mr-2\" />;\r\n      case 'chat':\r\n        return <MessageSquare className=\"h-4 w-4 mr-2\" />;\r\n      case 'profile':\r\n        return <UserPlus className=\"h-4 w-4 mr-2\" />;\r\n      default:\r\n        return <MailQuestion className=\"h-4 w-4 mr-2\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status: Invitation['status']) => {\r\n    switch (status) {\r\n      case 'pending':\r\n        return <Badge className=\"text-yellow-400 border border-yellow-400 bg-transparent\"><Clock className=\"h-3 w-3 mr-1\" />Pendiente</Badge>;\r\n      case 'accepted':\r\n        return <Badge className=\"text-green-400 border border-green-400 bg-transparent\"><UserCheck className=\"h-3 w-3 mr-1\" />Aceptada</Badge>;\r\n      case 'declined':\r\n        return <Badge className=\"text-red-400 border border-red-400 bg-transparent\"><UserX className=\"h-3 w-3 mr-1\" />Rechazada</Badge>;\r\n      case 'revoked':\r\n          return <Badge className=\"text-white border border-white/40 bg-transparent\"><UserX className=\"h-3 w-3 mr-1\" />Revocada</Badge>;\r\n    }\r\n  };\r\n\r\n  const pendingReceivedCount = receivedInvitations.filter(inv => inv.status === 'pending').length;\r\n  const acceptedCount = [...receivedInvitations, ...sentInvitations].filter(inv => inv.status === 'accepted').length;\r\n\r\n  if (!features.requests) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 flex items-center justify-center\">\r\n        <Card className=\"p-8 text-center bg-card/80 backdrop-blur-sm\">\r\n          <UserX className=\"h-16 w-16 mx-auto mb-4 text-muted-foreground\" />\r\n          <h2 className=\"text-xl font-semibold mb-2\">Función no disponible</h2>\r\n          <p className=\"text-muted-foreground\">Las solicitudes de conexión no están habilitadas en esta versión.</p>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-pink-900 to-red-900 relative overflow-hidden pb-20\">\r\n      {/* Animated Background */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        <div className=\"absolute top-1/4 left-1/4 w-96 h-96 bg-purple-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob\"></div>\r\n        <div className=\"absolute top-1/3 right-1/4 w-96 h-96 bg-pink-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000\"></div>\r\n        <div className=\"absolute bottom-1/4 left-1/3 w-96 h-96 bg-red-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-4000\"></div>\r\n      </div>\r\n\r\n      {/* Header removido para usuarios demo - solo NavigationLegacy */}\r\n      {demoAuth !== 'true' && <Header />}\r\n      \r\n      <div className=\"relative z-10 container mx-auto px-4 pt-20 pb-24\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          <div className=\"text-center mb-8\">\r\n            <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">Invitaciones</h1>\r\n            <p className=\"text-white/80 text-lg\">Gestiona tus invitaciones recibidas y enviadas</p>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-br from-purple-900/40 via-pink-900/30 to-red-900/40 backdrop-blur-sm rounded-xl border border-white/10 p-6\">\r\n            <Tabs value={activeTab} onValueChange={(value) => setActiveTab(value as 'received' | 'sent')} className=\"w-full\">\r\n              <TabsList className=\"grid w-full grid-cols-2 bg-white/10 backdrop-blur-sm rounded-lg mb-6\">\r\n                <TabsTrigger \r\n                  value=\"received\" \r\n                  className=\"data-[state=active]:bg-white/20 data-[state=active]:text-white text-white/80 hover:text-white flex items-center gap-2\"\r\n                >\r\n                  <MailQuestion className=\"h-4 w-4\" />\r\n                  Recibidas\r\n                  {receivedInvitations.length > 0 && (\r\n                    <Badge className=\"bg-red-500 text-white text-xs\">\r\n                      {receivedInvitations.length}\r\n                    </Badge>\r\n                  )}\r\n                </TabsTrigger>\r\n                <TabsTrigger \r\n                  value=\"sent\" \r\n                  className=\"data-[state=active]:bg-white/20 data-[state=active]:text-white text-white/80 hover:text-white flex items-center gap-2\"\r\n                >\r\n                  <Send className=\"h-4 w-4\" />\r\n                  Enviadas\r\n                  {sentInvitations.length > 0 && (\r\n                    <Badge className=\"bg-blue-500 text-white text-xs\">\r\n                      {sentInvitations.length}\r\n                    </Badge>\r\n                  )}\r\n                </TabsTrigger>\r\n              </TabsList>\r\n\r\n              <TabsContent value=\"received\" className=\"mt-6\">\r\n                <div className=\"space-y-4\">\r\n                  {receivedInvitations.length === 0 ? (\r\n                    <Card className=\"p-8 text-center bg-gradient-to-br from-purple-900/30 via-pink-900/20 to-red-900/30 backdrop-blur-sm border-white/10\">\r\n                      <UserPlus className=\"h-16 w-16 mx-auto mb-4 text-white/50\" />\r\n                      <h3 className=\"text-xl font-semibold text-white mb-2\">No hay invitaciones recibidas</h3>\r\n                      <p className=\"text-white/70\">Cuando alguien te envíe una invitación, aparecerá aquí.</p>\r\n                    </Card>\r\n                  ) : (\r\n                    receivedInvitations.map((inv) => (\r\n                      <Card key={inv.id} className=\"p-4 bg-gradient-to-br from-purple-900/30 via-pink-900/20 to-red-900/30 backdrop-blur-sm border-white/10 flex flex-col sm:flex-row items-start gap-4 card-accessible\">\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"flex justify-between items-start mb-2\">\r\n                            <div className=\"flex items-center text-sm text-white/80\">\r\n                              {getInvitationTypeIcon(inv.type)}\r\n                              <span>Invitación de <strong>{inv.from_profile}</strong></span>\r\n                            </div>\r\n                            {getStatusBadge(inv.status)}\r\n                          </div>\r\n                          {inv.message && <p className=\"text-sm text-white/70 bg-white/10 p-3 rounded-md mb-3\">\"{inv.message}\"</p>}\r\n                          <p className=\"text-xs text-white/50\">Recibido: {new Date(inv.created_at).toLocaleString()}</p>\r\n                        </div>\r\n                        {inv.status === 'pending' && (\r\n                          <div className=\"flex gap-2 self-stretch sm:self-center\">\r\n                            <Button onClick={() => handleInvitationAction(inv.id, 'accept')} className=\"bg-green-500 hover:bg-green-600 px-3 py-1 text-sm\">\r\n                              <UserCheck className=\"h-4 w-4 mr-1\" /> Aceptar\r\n                            </Button>\r\n                            <Button onClick={() => handleInvitationAction(inv.id, 'decline')} className=\"bg-red-500 hover:bg-red-600 text-white px-3 py-1 text-sm\">\r\n                              <UserX className=\"h-4 w-4 mr-1\" /> Rechazar\r\n                            </Button>\r\n                          </div>\r\n                        )}\r\n                      </Card>\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </TabsContent>\r\n\r\n              <TabsContent value=\"sent\" className=\"mt-6\">\r\n                <div className=\"space-y-4\">\r\n                  {sentInvitations.length === 0 ? (\r\n                    <Card className=\"p-8 text-center bg-gradient-to-br from-purple-900/30 via-pink-900/20 to-red-900/30 backdrop-blur-sm border-white/10\">\r\n                      <Send className=\"h-16 w-16 mx-auto mb-4 text-white/50\" />\r\n                      <h3 className=\"text-xl font-semibold text-white mb-2\">No has enviado invitaciones</h3>\r\n                      <p className=\"text-white/70\">Explora perfiles y envía invitaciones para conectar.</p>\r\n                    </Card>\r\n                  ) : (\r\n                    sentInvitations.map((inv) => (\r\n                      <Card key={inv.id} className=\"p-4 bg-gradient-to-br from-purple-900/30 via-pink-900/20 to-red-900/30 backdrop-blur-sm border-white/10 card-accessible\">\r\n                        <div className=\"flex justify-between items-start\">\r\n                          <div className=\"flex items-center text-sm text-white/80\">\r\n                            {getInvitationTypeIcon(inv.type)}\r\n                            <span>Invitación para <strong>{inv.to_profile}</strong></span>\r\n                          </div>\r\n                          {getStatusBadge(inv.status)}\r\n                        </div>\r\n                        {inv.message && <p className=\"text-sm text-white/70 bg-white/10 p-3 rounded-md my-3\">\"{inv.message}\"</p>}\r\n                        <p className=\"text-xs text-white/50\">Enviado: {new Date(inv.created_at).toLocaleString()}</p>\r\n                      </Card>\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </TabsContent>\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <NavigationEnhanced />\r\n      \r\n      <style>{`\r\n        @keyframes blob {\r\n          0%, 100% { transform: translate(0px, 0px) scale(1); }\r\n          33% { transform: translate(30px, -50px) scale(1.1); }\r\n          66% { transform: translate(-20px, 20px) scale(0.9); }\r\n        }\r\n        .animate-blob { animation: blob 7s infinite; }\r\n        .animation-delay-2000 { animation-delay: 2s; }\r\n        .animation-delay-4000 { animation-delay: 4s; }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Requests;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Security.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Settings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Stories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\StoriesInfo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Support.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'navigate' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":12,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { HelpCircle, Shield, MessageCircle, Mail, Clock, Search, ChevronDown, ChevronUp } from 'lucide-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Header } from '@/components/Header';\r\nimport HeaderNav from '@/components/HeaderNav';\r\n\r\nconst Support = () => {\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [expandedFaq, setExpandedFaq] = useState<number | null>(null);\r\n\r\n  const faqCategories = [\r\n    {\r\n      title: \"Cuenta y Perfil\",\r\n      icon: HelpCircle,\r\n      questions: [\r\n        {\r\n          q: \"¿Cómo creo una cuenta en ComplicesConecta?\",\r\n          a: \"Para crear una cuenta, haz clic en 'Crear Cuenta Gratis' en la página principal. Necesitarás verificar tu email y completar tu perfil con información básica.\"\r\n        },\r\n        {\r\n          q: \"¿Puedo cambiar mi información de perfil después de registrarme?\",\r\n          a: \"Sí, puedes editar tu perfil en cualquier momento desde la sección 'Configuración' en tu cuenta.\"\r\n        },\r\n        {\r\n          q: \"¿Cómo verifico mi perfil?\",\r\n          a: \"La verificación se realiza mediante nuestro sistema KYC avanzado. Sube una foto de tu identificación oficial y una selfie para completar el proceso.\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Seguridad y Privacidad\",\r\n      icon: Shield,\r\n      questions: [\r\n        {\r\n          q: \"¿Qué medidas de seguridad tienen implementadas?\",\r\n          a: \"Utilizamos verificación KYC, tecnología blockchain, cifrado end-to-end para mensajes y moderación 24/7 para garantizar un ambiente seguro.\"\r\n        },\r\n        {\r\n          q: \"¿Cómo reporto un perfil sospechoso?\",\r\n          a: \"Puedes reportar cualquier perfil usando el botón 'Reportar' en su perfil. Nuestro equipo revisará el reporte en menos de 24 horas.\"\r\n        },\r\n        {\r\n          q: \"¿Mis datos personales están protegidos?\",\r\n          a: \"Absolutamente. Cumplimos con todas las regulaciones de protección de datos y nunca compartimos información personal sin tu consentimiento.\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: \"Tokens y Funciones Premium\",\r\n      icon: MessageCircle,\r\n      questions: [\r\n        {\r\n          q: \"¿Qué son los tokens CMPX/GTK?\",\r\n          a: \"CMPX son tokens internos para funciones premium, mientras que GTK son tokens blockchain para el ecosistema completo. Ambos te dan acceso a funciones exclusivas.\"\r\n        },\r\n        {\r\n          q: \"¿Cómo puedo ganar tokens?\",\r\n          a: \"Puedes ganar tokens completando tu perfil, invitando amigos, participando en eventos y siendo activo en la comunidad.\"\r\n        },\r\n        {\r\n          q: \"¿Qué funciones premium están disponibles?\",\r\n          a: \"Con tokens premium puedes acceder a chat ilimitado, ver quién visitó tu perfil, acceso a eventos VIP y funciones de matching avanzadas.\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const contactMethods = [\r\n    {\r\n      icon: Mail,\r\n      title: \"Email\",\r\n      description: \"complicesconectasw@outlook.es\",\r\n      subtitle: \"Respuesta en 24 horas\"\r\n    },\r\n    {\r\n      icon: MessageCircle,\r\n      title: \"WhatsApp\",\r\n      description: \"Soporte WhatsApp\",\r\n      subtitle: \"Respuesta inmediata\"\r\n    },\r\n    {\r\n      icon: Clock,\r\n      title: \"Horario de Atención\",\r\n      description: \"Lun - Vie: 9:00 - 18:00\",\r\n      subtitle: \"Hora de México\"\r\n    }\r\n  ];\r\n\r\n  const filteredFaqs = faqCategories.map(category => ({\r\n    ...category,\r\n    questions: category.questions.filter(\r\n      q => q.q.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n           q.a.toLowerCase().includes(searchTerm.toLowerCase())\r\n    )\r\n  })).filter(category => category.questions.length > 0);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    alert(\"Mensaje enviado correctamente. Te contactaremos pronto.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-purple-800 to-indigo-900\">\r\n      <HeaderNav />\r\n      <Header />\r\n\r\n      <div className=\"max-w-6xl mx-auto px-4 py-8\">\r\n        {/* Hero Section */}\r\n        <div className=\"text-center mb-12\">\r\n          <div className=\"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-pink-500 to-purple-600 rounded-full mb-6\">\r\n            <HelpCircle className=\"w-10 h-10 text-white\" />\r\n          </div>\r\n          <h2 className=\"text-4xl font-bold text-white mb-4\">\r\n            ¿En qué podemos ayudarte?\r\n          </h2>\r\n          <p className=\"text-xl text-white font-medium max-w-2xl mx-auto mb-8\">\r\n            Encuentra respuestas rápidas a las preguntas más frecuentes o contáctanos directamente\r\n          </p>\r\n\r\n          {/* Search Bar */}\r\n          <div className=\"relative max-w-md mx-auto\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-300 w-5 h-5\" />\r\n            <Input\r\n              placeholder=\"Buscar en preguntas frecuentes...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10 py-3 text-lg\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Contact Methods */}\r\n        <div className=\"grid md:grid-cols-3 gap-6 mb-12\">\r\n          {contactMethods.map((method, index) => (\r\n            <Card key={index} className=\"bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-sm border-purple-300/30 hover:shadow-lg transition-shadow\">\r\n              <CardContent className=\"p-6 text-center\">\r\n                <div className=\"w-12 h-12 bg-gradient-to-br from-purple-400/30 to-pink-400/30 rounded-xl flex items-center justify-center mx-auto mb-4 border border-purple-300/20\">\r\n                  <method.icon className=\"w-6 h-6 text-purple-200\" />\r\n                </div>\r\n                <h3 className=\"text-lg font-semibold text-white mb-2\">{method.title}</h3>\r\n                <p className=\"text-white font-medium mb-1\">{method.description}</p>\r\n                <p className=\"text-sm text-white font-medium\">{method.subtitle}</p>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n\r\n        {/* FAQ Section */}\r\n        <div className=\"mb-12\">\r\n          <h3 className=\"text-3xl font-bold text-center text-white mb-8\">\r\n            Preguntas Frecuentes\r\n          </h3>\r\n          \r\n          {filteredFaqs.length > 0 ? (\r\n            <div className=\"space-y-6\">\r\n              {filteredFaqs.map((category, categoryIndex) => (\r\n                <Card key={categoryIndex} className=\"bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-sm border-purple-300/30\">\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-3 text-white\">\r\n                      <div className=\"w-10 h-10 bg-gradient-to-br from-purple-400/30 to-pink-400/30 rounded-lg flex items-center justify-center border border-purple-300/20\">\r\n                        <category.icon className=\"w-5 h-5 text-purple-200\" />\r\n                      </div>\r\n                      {category.title}\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                      {category.questions.map((faq, faqIndex) => {\r\n                        const globalIndex = categoryIndex * 100 + faqIndex;\r\n                        return (\r\n                          <div key={faqIndex} className=\"border-b border-purple-300/20 last:border-b-0 pb-4 last:pb-0\">\r\n                            <button\r\n                              onClick={() => setExpandedFaq(expandedFaq === globalIndex ? null : globalIndex)}\r\n                              className=\"w-full text-left flex items-center justify-between py-2 hover:text-pink-600 transition-colors\"\r\n                            >\r\n                              <span className=\"font-medium text-white\">{faq.q}</span>\r\n                              {expandedFaq === globalIndex ? \r\n                                <ChevronUp className=\"w-5 h-5 text-pink-600\" /> : \r\n                                <ChevronDown className=\"w-5 h-5 text-purple-300\" />\r\n                              }\r\n                            </button>\r\n                            {expandedFaq === globalIndex && (\r\n                              <div className=\"mt-2 text-white font-medium leading-relaxed\">\r\n                                {faq.a}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-8\">\r\n              <p className=\"text-white font-medium\">No se encontraron preguntas que coincidan con tu búsqueda.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Contact Form */}\r\n        <Card className=\"bg-gradient-to-br from-purple-500/20 to-pink-500/20 backdrop-blur-sm border-purple-300/30\">\r\n          <CardHeader>\r\n            <CardTitle className=\"text-center text-white\">¿No encontraste lo que buscabas?</CardTitle>\r\n            <p className=\"text-center text-white font-medium\">Envíanos un mensaje y te ayudaremos personalmente</p>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4 max-w-2xl mx-auto\">\r\n              <div className=\"grid md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-white mb-1\">Nombre</label>\r\n                  <Input id=\"name\" placeholder=\"Tu nombre\" required />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-white mb-1\">Email</label>\r\n                  <Input id=\"email\" type=\"email\" placeholder=\"tu@email.com\" required />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"subject\" className=\"block text-sm font-medium text-white mb-1\">Asunto</label>\r\n                <Input id=\"subject\" placeholder=\"¿En qué podemos ayudarte?\" required />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"message\" className=\"block text-sm font-medium text-white mb-1\">Mensaje</label>\r\n                <Textarea id=\"message\" placeholder=\"Describe tu consulta con detalle...\" required rows={6} />\r\n              </div>\r\n              <Button \r\n                type=\"submit\" \r\n                className=\"w-full bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white py-3\"\r\n              >\r\n                Enviar Mensaje\r\n              </Button>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Support;\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\TemplateDemo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Terms.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'navigate' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":10,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":10,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Shield, Users, Heart, Lock, FileText } from 'lucide-react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Header } from '@/components/Header';\r\nimport { Footer } from '@/components/Footer';\r\n\r\nconst Terms = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"min-h-screen relative overflow-hidden\">\r\n      {/* Animated Background */}\r\n      <div className=\"fixed inset-0 z-0\">\r\n        <div className=\"absolute inset-0 bg-gradient-to-br from-background via-muted/30 to-secondary/20\"></div>\r\n        \r\n        {/* Animated Gradient Orbs */}\r\n        <div className=\"absolute top-20 left-10 w-96 h-96 bg-gradient-to-r from-primary/20 to-accent/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\r\n        <div className=\"absolute top-40 right-10 w-96 h-96 bg-gradient-to-r from-accent/20 to-secondary/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\r\n        <div className=\"absolute -bottom-32 left-20 w-96 h-96 bg-gradient-to-r from-secondary/20 to-primary/20 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\r\n      </div>\r\n      \r\n      <div className=\"relative z-10\">\r\n        <Header />\r\n        \r\n        <main className=\"container mx-auto px-4 py-8\">\r\n\r\n          <div className=\"text-center mb-12\">\r\n            <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\r\n              Términos y Condiciones\r\n              <span className=\"block bg-love-gradient bg-clip-text text-transparent\">\r\n                ComplicesConecta\r\n              </span>\r\n            </h1>\r\n            <p className=\"text-xl text-white font-medium max-w-2xl mx-auto\">\r\n              Condiciones de uso para nuestra plataforma de conexiones para adultos\r\n            </p>\r\n            <Badge className=\"mt-4 bg-gray-200 text-gray-800\">\r\n              <FileText className=\"h-4 w-4 mr-1\" />\r\n              Última actualización: Agosto 2024\r\n            </Badge>\r\n          </div>\r\n\r\n          <div className=\"max-w-4xl mx-auto space-y-8\">\r\n            {/* Aceptación de Términos */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Shield className=\"h-5 w-5 text-primary\" />\r\n                  1. Aceptación de Términos\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-white/90\">\r\n                  Al acceder y utilizar ComplicesConecta, usted acepta estar sujeto a estos términos y condiciones. \r\n                  Si no está de acuerdo con alguna parte de estos términos, no debe utilizar nuestro servicio.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  Esta plataforma está destinada exclusivamente para adultos mayores de 18 años que buscan \r\n                  conexiones dentro del estilo de vida alternativo para parejas.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Elegibilidad */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Users className=\"h-5 w-5 text-primary\" />\r\n                  2. Elegibilidad y Registro\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-white/90\">\r\n                  <strong>Requisitos de edad:</strong> Debe tener al menos 18 años para usar este servicio.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Verificación:</strong> Nos reservamos el derecho de solicitar verificación de identidad \r\n                  y edad en cualquier momento.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Información veraz:</strong> Debe proporcionar información precisa y actualizada \r\n                  durante el registro.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Una cuenta por persona:</strong> No está permitido crear múltiples cuentas.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Conducta del Usuario */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Heart className=\"h-5 w-5 text-primary\" />\r\n                  3. Conducta del Usuario\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-white/90\">\r\n                  <strong>Respeto mutuo:</strong> Mantenga siempre un trato respetuoso hacia otros usuarios.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Consentimiento:</strong> Todas las interacciones deben ser consensuales. \r\n                  No se tolerará el acoso o comportamiento no deseado.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Contenido apropiado:</strong> No publique contenido ilegal, ofensivo o que viole \r\n                  los derechos de terceros.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Privacidad:</strong> Respete la privacidad de otros usuarios. No comparta información \r\n                  personal sin consentimiento.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Privacidad y Seguridad */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Lock className=\"h-5 w-5 text-primary\" />\r\n                  4. Privacidad y Seguridad\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-white/90\">\r\n                  <strong>Protección de datos:</strong> Implementamos medidas de seguridad para proteger \r\n                  su información personal.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Uso de información:</strong> Su información se utiliza únicamente para mejorar \r\n                  su experiencia en la plataforma.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Terceros:</strong> No vendemos ni compartimos su información personal con terceros \r\n                  sin su consentimiento explícito.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Cookies:</strong> Utilizamos cookies para mejorar la funcionalidad del sitio.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Servicios Premium */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle>5. Servicios Premium y Pagos</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-white/90\">\r\n                  <strong>Suscripciones:</strong> Los servicios premium requieren suscripción mensual o anual.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Tokens CMPX:</strong> Sistema de tokens para funciones especiales y eventos exclusivos.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Reembolsos:</strong> Las políticas de reembolso se aplican según las leyes locales.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  <strong>Cancelación:</strong> Puede cancelar su suscripción en cualquier momento desde su perfil.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Limitación de Responsabilidad */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle>6. Limitación de Responsabilidad</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-white/90\">\r\n                  ComplicesConecta actúa como plataforma de conexión. No somos responsables de:\r\n                </p>\r\n                <ul className=\"list-disc list-inside text-white/90 space-y-2\">\r\n                  <li>Encuentros o relaciones que se desarrollen fuera de la plataforma</li>\r\n                  <li>Verificación de la identidad de todos los usuarios</li>\r\n                  <li>Contenido generado por usuarios</li>\r\n                  <li>Problemas técnicos o interrupciones del servicio</li>\r\n                </ul>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Modificaciones */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle>7. Modificaciones de los Términos</CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <p className=\"text-white/90\">\r\n                  Nos reservamos el derecho de modificar estos términos en cualquier momento. \r\n                  Los cambios importantes serán notificados con al menos 30 días de anticipación.\r\n                </p>\r\n                <p className=\"text-white/90\">\r\n                  El uso continuado del servicio después de las modificaciones constituye \r\n                  la aceptación de los nuevos términos.\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Contacto */}\r\n            <Card className=\"bg-card/80 backdrop-blur-sm border border-primary/10\">\r\n              <CardHeader>\r\n                <CardTitle>8. Contacto</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-white/90\">\r\n                  Para preguntas sobre estos términos, contacte con nosotros a través de:\r\n                </p>\r\n                <p className=\"text-white/90 mt-2\">\r\n                  <strong>Email:</strong> <a href=\"mailto:legal@complicesconecta.com\" className=\"text-primary hover:underline\">legal@complicesconecta.com</a><br />\r\n                  <strong>Dirección:</strong> Madrid, España\r\n                </p>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </main>\r\n\r\n        <Footer />\r\n      </div>\r\n      \r\n      {/* Custom Styles */}\r\n      <style>{`\r\n        @keyframes blob {\r\n          0%, 100% { transform: translate(0px, 0px) scale(1); }\r\n          33% { transform: translate(30px, -50px) scale(1.1); }\r\n          66% { transform: translate(-20px, 20px) scale(0.9); }\r\n        }\r\n        \r\n        .animate-blob {\r\n          animation: blob 7s infinite;\r\n        }\r\n        \r\n        .animation-delay-2000 {\r\n          animation-delay: 2s;\r\n        }\r\n        \r\n        .animation-delay-4000 {\r\n          animation-delay: 4s;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Terms;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\Tokens.tsx","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'balance' is assigned a value but never used. Allowed unused vars must match /^_/u.","line":23,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":23,"endColumn":18}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Página principal de Tokens CMPX/GTK\r\n * Dashboard completo para gestión de tokens en fase Beta\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { ArrowLeft, Home, Coins, Info, ExternalLink, Bot, Heart, Sparkles, Star, Rocket, Users } from 'lucide-react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTokens } from '@/hooks/useTokens';\r\nimport { TokenDashboard } from '@/components/tokens/TokenDashboard';\r\nimport { StakingModal } from '@/components/tokens/StakingModal';\r\nimport { TokenChatBot } from '@/components/tokens/TokenChatBot';\r\nimport NavigationEnhanced from \"@/components/NavigationEnhanced\";\r\nimport Header from \"@/components/Header\";\r\nimport HeaderNav from '@/components/HeaderNav';\r\nimport { motion } from 'framer-motion';\r\nimport { AnimatedButton } from '@/components/ui/AnimatedButton';\r\n\r\nexport default function Tokens() {\r\n  const [showStakingModal, setShowStakingModal] = useState(false);\r\n  const { balance, getBalanceMessage, getStakingMessage, refreshTokens } = useTokens();\r\n  const navigate = useNavigate();\r\n\r\n  const handleGoHome = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen relative overflow-hidden bg-hero-gradient pb-20\">\r\n      <HeaderNav />\r\n      <Header />\r\n      {/* Advanced Animated Background - Same as Index */}\r\n      <div className=\"fixed inset-0 z-0\">\r\n        {/* Animated Mesh Gradient */}\r\n        <div className=\"absolute inset-0 opacity-40\">\r\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-r from-primary/20 via-transparent to-accent/20 animate-gradient-x\"></div>\r\n          <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-b from-transparent via-secondary/10 to-primary/15 animate-gradient-y\"></div>\r\n        </div>\r\n        \r\n        {/* Floating Geometric Shapes */}\r\n        <div className=\"absolute inset-0\">\r\n          <div className=\"absolute top-20 left-20 w-64 h-64 bg-primary/5 rounded-full blur-3xl animate-float-slow\"></div>\r\n          <div className=\"absolute top-40 right-32 w-48 h-48 bg-accent/8 rounded-full blur-2xl animate-float-reverse\"></div>\r\n          <div className=\"absolute bottom-32 left-1/3 w-80 h-80 bg-secondary/4 rounded-full blur-3xl animate-float-slow shape-delay-2\"></div>\r\n          <div className=\"absolute bottom-20 right-20 w-56 h-56 bg-primary/6 rounded-full blur-2xl animate-float shape-delay-1\"></div>\r\n          \r\n          {/* Hexagonal Patterns */}\r\n          <div className=\"absolute top-1/4 left-1/4 w-32 h-32 bg-gradient-to-br from-primary/10 to-accent/10 transform rotate-45 animate-spin-slow blur-xl\"></div>\r\n          <div className=\"absolute bottom-1/3 right-1/3 w-24 h-24 bg-gradient-to-br from-secondary/15 to-primary/10 transform rotate-12 animate-pulse blur-lg\"></div>\r\n        </div>\r\n        \r\n        {/* Particle Effects */}\r\n        <div className=\"absolute inset-0\">\r\n          {Array.from({ length: 20 }).map((_, i) => (\r\n            <div\r\n              key={i}\r\n              className={`absolute w-2 h-2 bg-primary/20 rounded-full animate-float particle-${i + 1}`}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Glowing Icons */}\r\n        <Heart className=\"absolute top-32 left-1/4 w-8 h-8 text-primary/20 animate-float icon-delay-1\" fill=\"currentColor\" />\r\n        <Sparkles className=\"absolute top-1/3 right-1/4 w-6 h-6 text-accent/25 animate-float icon-delay-2\" />\r\n        <Star className=\"absolute bottom-1/3 left-1/5 w-7 h-7 text-secondary/20 animate-float icon-delay-3\" />\r\n        <Rocket className=\"absolute bottom-1/4 right-1/5 w-9 h-9 text-primary/15 animate-float icon-delay-4\" />\r\n        <Users className=\"absolute top-1/2 left-1/6 w-8 h-8 text-accent/20 animate-float icon-delay-5\" />\r\n      </div>\r\n      <div className=\"container mx-auto px-4 py-6 max-w-4xl relative z-10\">\r\n        {/* Enhanced Header with Navigation Buttons */}\r\n        <div className=\"bg-gradient-to-r from-purple-900/90 to-pink-900/90 backdrop-blur-md border-b border-purple-300/30 p-3 sm:p-4 shadow-lg flex-shrink-0 rounded-t-xl mb-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <AnimatedButton\r\n              onClick={handleGoBack}\r\n              className=\"text-white hover:bg-white/20 flex items-center gap-2 btn-accessible bg-transparent border-none\"\r\n            >\r\n              <ArrowLeft className=\"h-4 w-4\" />\r\n              <span className=\"hidden sm:inline truncate\">Regresar al Inicio</span>\r\n              <span className=\"sm:hidden\">Inicio</span>\r\n            </AnimatedButton>\r\n            \r\n            <h1 className=\"text-base sm:text-lg md:text-xl font-bold text-white text-center\">\r\n              🪙 Tokens CMPX & GTK\r\n            </h1>\r\n            \r\n            <Button\r\n              onClick={handleGoHome}\r\n              className=\"text-white hover:bg-white/20 flex items-center gap-2 hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3\"\r\n            >\r\n              <Home className=\"h-4 w-4\" />\r\n              <span className=\"hidden sm:inline\">Inicio</span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Main Content Header */}\r\n        <div className=\"text-center mb-8 px-4\">\r\n          <div className=\"flex items-center gap-3 justify-center mb-4\">\r\n            <Coins className=\"h-6 w-6 sm:h-8 sm:w-8 text-white animate-pulse\" />\r\n            <h2 className=\"text-xl sm:text-2xl md:text-3xl font-bold text-white text-shadow\">Sistema de Tokens</h2>\r\n          </div>\r\n          <p className=\"text-white/80 max-w-2xl mx-auto text-sm sm:text-base leading-relaxed\">\r\n            Gestiona tus tokens, participa en staking y reclama recompensas. \r\n            Durante la fase Beta, todas las funciones premium se pueden adquirir con tokens CMPX.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Información de fase Beta */}\r\n        <Card className=\"mb-6 bg-white/10 backdrop-blur-md border-white/20 shadow-xl\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2 text-white\">\r\n              <Info className=\"h-5 w-5\" />\r\n              🚀 Fase Beta - Sistema de Tokens\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n              <div>\r\n                <h4 className=\"font-semibold mb-2 text-white\">🪙 Cómo obtener CMPX:</h4>\r\n                <ul className=\"space-y-1 text-white/90\">\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>100 CMPX → Verificar World ID</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>50 CMPX → Por cada referido exitoso</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>25 CMPX → Completar perfil</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>20 CMPX → Feedback beta</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>5 CMPX → Login diario</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-semibold mb-2 text-white\">🔒 Beneficios del Staking:</h4>\r\n                <ul className=\"space-y-1 text-white/90\">\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>+10% recompensa en 30 días</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>Apoyas la red ComplicesConecta</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>Tokens seguros durante el período</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-purple-600\">•</span>\r\n                    <span>Recompensa automática al finalizar</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4 p-3 bg-white/20 rounded-lg border border-white/30\">\r\n              <p className=\"text-xs text-white\">\r\n                💡 <strong>Límite Beta:</strong> Máximo 500 CMPX por usuario al mes. \r\n                En la versión final no habrá límites y podrás convertir CMPX a GTK (ERC20).\r\n              </p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Asistente IA Interactivo */}\r\n        <div className=\"mb-8\">\r\n          <Card className=\"bg-white/10 backdrop-blur-md border-white/20 shadow-xl\">\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2 text-white\">\r\n                <Bot className=\"h-5 w-5\" />\r\n                🤖 Asistente IA de Tokens\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <p className=\"text-sm text-white/90 mb-4\">\r\n                Tu guía personal paso a paso para gestionar tokens CMPX/GTK. \r\n                Pregúntame sobre tu balance, cómo reclamar recompensas o activar staking.\r\n              </p>\r\n              <TokenChatBot />\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Dashboard principal */}\r\n        <TokenDashboard />\r\n\r\n        {/* Botones de acción rápida */}\r\n        <motion.div \r\n          className=\"mt-8 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3, duration: 0.5 }}\r\n        >\r\n          <motion.div\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            <Button\r\n              onClick={() => setShowStakingModal(true)}\r\n              className=\"h-16 w-full flex flex-col items-center justify-center gap-1 bg-white/10 backdrop-blur-md border-white/20 hover:bg-white/20 text-white hover:text-purple-200 transition-all duration-300\"\r\n              disabled={false}\r\n            >\r\n              <span className=\"text-lg\">🔒</span>\r\n              <span className=\"text-sm font-medium truncate\">Iniciar Staking</span>\r\n            </Button>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            <Button\r\n              onClick={refreshTokens}\r\n              className=\"h-16 w-full flex flex-col items-center justify-center gap-1 bg-white/10 backdrop-blur-md border-white/20 hover:bg-white/20 text-white hover:text-green-200 transition-all duration-300\"\r\n            >\r\n              <span className=\"text-lg\">🔄</span>\r\n              <span className=\"text-sm font-medium truncate\">Actualizar Balance</span>\r\n            </Button>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            <Button\r\n              onClick={() => navigate('/tokens-info')}\r\n              className=\"h-16 w-full flex flex-col items-center justify-center gap-1 bg-white/10 backdrop-blur-md border-white/20 hover:bg-white/20 text-white hover:text-blue-200 transition-all duration-300\"\r\n            >\r\n              <span className=\"text-lg\">📚</span>\r\n              <span className=\"text-sm font-medium truncate\">Guía de Tokens</span>\r\n            </Button>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            <Button\r\n              onClick={() => navigate('/tokens-terms')}\r\n              className=\"h-16 w-full flex flex-col items-center justify-center gap-1 bg-white/10 backdrop-blur-md border-white/20 hover:bg-white/20 text-white hover:text-yellow-200 transition-all duration-300\"\r\n            >\r\n              <span className=\"text-lg\">📋</span>\r\n              <span className=\"text-sm font-medium truncate\">Términos</span>\r\n            </Button>\r\n          </motion.div>\r\n        </motion.div>\r\n\r\n        {/* Información adicional */}\r\n        <Card className=\"mt-6 bg-white/10 backdrop-blur-md border-white/20 shadow-xl\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2 text-white\">\r\n              <ExternalLink className=\"h-5 w-5\" />\r\n              💡 Ejemplos del Asistente IA\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"bg-white/20 p-3 sm:p-4 rounded-lg border border-white/30\">\r\n                <p className=\"text-sm text-white mb-2\">\r\n                  <strong>Pregunta a la IA:</strong> \"¿Cuántos tokens tengo?\" o \"¿Qué es staking?\"\r\n                </p>\r\n                <div className=\"text-xs text-white/90 space-y-1\">\r\n                  <p>🪙 <strong>Ejemplo de respuesta:</strong></p>\r\n                  <div className=\"bg-white/90 p-2 rounded border ml-2 sm:ml-4\">\r\n                    <p className=\"break-words text-gray-900\">{getBalanceMessage()}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"bg-white/20 p-3 sm:p-4 rounded-lg border border-white/30\">\r\n                <p className=\"text-sm text-white mb-2\">\r\n                  <strong>Explicación de staking:</strong>\r\n                </p>\r\n                <div className=\"text-xs text-white/90\">\r\n                  <div className=\"bg-white/90 p-2 rounded border ml-2 sm:ml-4\">\r\n                    <p className=\"break-words text-gray-900\">{getStakingMessage()}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Modal de staking */}\r\n        <StakingModal \r\n          isOpen={showStakingModal}\r\n          onClose={() => setShowStakingModal(false)}\r\n        />\r\n      </div>\r\n      \r\n      {/* Navigation Menu */}\r\n      <NavigationEnhanced />\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\TokensInfo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\TokensLegal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\TokensPrivacy.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\pages\\TokensTerms.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\scripts\\cleanup-docs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\scripts\\comprehensive-test.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\scripts\\debug-tests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\scripts\\replace-console-logs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\scripts\\setup-github-ai.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\scripts\\test-lint.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\scripts\\test-type-check.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\scripts\\verify-token.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\ContentModerationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\PerformanceMonitoringService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\ProfileReportService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\PushNotificationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\ReportService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\SecurityService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\SmartMatchingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\TokenAnalyticsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\services\\postsService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\components\\Chat.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\components\\EditProfileSingle.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\components\\ProfileSingle.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\components\\TokenDashboard.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\accessibility.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\admin-login.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\auth-flow.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\auth.e2e.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\critical-flows.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\cross-browser.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\images.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\navigation.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\profile-management.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\realtime-chat.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\registration.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\e2e\\requests.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\integration\\send-email.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\integration\\supabase-integration.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\integration\\system-integration.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\mocks\\hcaptcha.mock.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\mocks\\supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\security\\biometric-auth.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\security\\media-access.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\setup\\playwright-setup.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"use\" is called in function \"page\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","line":65,"column":11,"nodeType":"Identifier","endLine":65,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\setup\\test-utils.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\PerformanceMonitoringService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\ProfileReportService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\ProfileReportsPanel.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\PushNotificationService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\ReportService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\TokenAnalyticsService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\auth.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\emailService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\invitations.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\localStorage-migration.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\matching.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\profile-cache.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\profiles.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\realtime-chat.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\roles.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\useToast.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\tests\\unit\\zod-validation.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\types\\database.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\types\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\types\\supabase-messages.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\types\\supabase.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\types\\theme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\androidSecurity.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\androidSecurity.ts","messages":[{"ruleId":"unused-imports/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":301,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":301,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Utilidades de seguridad para Android APK\r\n * Detecta root, modo desarrollador y otras amenazas de seguridad\r\n */\r\n\r\n// Extender la interfaz Window para incluir Capacitor\r\ndeclare global {\r\n  interface Window {\r\n    Capacitor?: {\r\n      Plugins: Record<string, unknown>;\r\n      isNativePlatform(): boolean;\r\n      getPlatform(): string;\r\n    };\r\n  }\r\n}\r\n\r\nexport interface SecurityCheck {\r\n  isRooted: boolean;\r\n  isDeveloperMode: boolean;\r\n  isDebuggable: boolean;\r\n  isEmulator: boolean;\r\n  threats: string[];\r\n}\r\n\r\nexport class AndroidSecurityManager {\r\n  private static instance: AndroidSecurityManager;\r\n  private securityChecks: SecurityCheck = {\r\n    isRooted: false,\r\n    isDeveloperMode: false,\r\n    isDebuggable: false,\r\n    isEmulator: false,\r\n    threats: []\r\n  };\r\n\r\n  public static getInstance(): AndroidSecurityManager {\r\n    if (!AndroidSecurityManager.instance) {\r\n      AndroidSecurityManager.instance = new AndroidSecurityManager();\r\n    }\r\n    return AndroidSecurityManager.instance;\r\n  }\r\n\r\n  /**\r\n   * Ejecuta todas las verificaciones de seguridad\r\n   */\r\n  public async performSecurityCheck(): Promise<SecurityCheck> {\r\n    this.securityChecks = {\r\n      isRooted: await this.checkRootAccess(),\r\n      isDeveloperMode: await this.checkDeveloperMode(),\r\n      isDebuggable: await this.checkDebuggableApp(),\r\n      isEmulator: await this.checkEmulator(),\r\n      threats: []\r\n    };\r\n\r\n    // Agregar amenazas detectadas\r\n    if (this.securityChecks.isRooted) {\r\n      this.securityChecks.threats.push('ROOT_DETECTED');\r\n    }\r\n    if (this.securityChecks.isDeveloperMode) {\r\n      this.securityChecks.threats.push('DEVELOPER_MODE_ENABLED');\r\n    }\r\n    if (this.securityChecks.isDebuggable) {\r\n      this.securityChecks.threats.push('DEBUG_MODE_ENABLED');\r\n    }\r\n    if (this.securityChecks.isEmulator) {\r\n      this.securityChecks.threats.push('EMULATOR_DETECTED');\r\n    }\r\n\r\n    return this.securityChecks;\r\n  }\r\n\r\n  /**\r\n   * Verifica si el dispositivo tiene acceso root\r\n   */\r\n  private async checkRootAccess(): Promise<boolean> {\r\n    try {\r\n      // Verificar archivos comunes de root\r\n      const rootFiles = [\r\n        '/system/app/Superuser.apk',\r\n        '/sbin/su',\r\n        '/system/bin/su',\r\n        '/system/xbin/su',\r\n        '/data/local/xbin/su',\r\n        '/data/local/bin/su',\r\n        '/system/sd/xbin/su',\r\n        '/system/bin/failsafe/su',\r\n        '/data/local/su',\r\n        '/su/bin/su'\r\n      ];\r\n\r\n      // En Capacitor, verificar si está disponible sin imports dinámicos\r\n      if (typeof window !== 'undefined' && window.Capacitor) {\r\n        // Intentar verificar archivos usando métodos disponibles en Capacitor\r\n        try {\r\n          // Usar fetch para intentar acceder a archivos del sistema\r\n          for (const file of rootFiles) {\r\n            try {\r\n              const response = await fetch(`file://${file}`);\r\n              if (response.ok) {\r\n                return true; // Archivo de root encontrado\r\n              }\r\n            } catch {\r\n              // Archivo no accesible, continuar\r\n            }\r\n          }\r\n        } catch {\r\n          // Método no disponible, continuar con otras verificaciones\r\n        }\r\n      }\r\n\r\n      // Verificar propiedades del sistema que indican root\r\n      const userAgent = navigator.userAgent.toLowerCase();\r\n      if (userAgent.includes('rooted') || userAgent.includes('superuser')) {\r\n        return true;\r\n      }\r\n\r\n      // Verificar comandos de root disponibles\r\n      if (await this.canExecuteRootCommand()) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.warn('Error checking root access:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si el modo desarrollador está habilitado\r\n   */\r\n  private async checkDeveloperMode(): Promise<boolean> {\r\n    try {\r\n      if (typeof window !== 'undefined' && window.Capacitor) {\r\n        // Verificar propiedades específicas del dispositivo en Capacitor\r\n        try {\r\n          // Usar métodos nativos disponibles en Capacitor para detectar modo dev\r\n          const isNative = window.Capacitor.isNativePlatform();\r\n          if (isNative) {\r\n            // En modo desarrollador, el rendimiento es típicamente más lento\r\n            const start = performance.now();\r\n            for (let i = 0; i < 10000; i++) {\r\n              Math.random();\r\n            }\r\n            const end = performance.now();\r\n            \r\n            // Si toma más de 50ms, posible modo desarrollador\r\n            if (end - start > 50) {\r\n              return true;\r\n            }\r\n          }\r\n        } catch {\r\n          // Método no disponible, continuar\r\n        }\r\n      }\r\n\r\n      // Verificar si WebView permite debugging\r\n      const windowWithChrome = window as Window & { chrome?: { runtime?: unknown } };\r\n      if (windowWithChrome.chrome && windowWithChrome.chrome.runtime) {\r\n        return true;\r\n      }\r\n\r\n      // Verificar timing attacks (los dispositivos con modo dev son más lentos)\r\n      const start = performance.now();\r\n      for (let i = 0; i < 1000; i++) {\r\n        Math.random();\r\n      }\r\n      const end = performance.now();\r\n      \r\n      // Si toma más de 10ms, posible modo desarrollador\r\n      if (end - start > 10) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.warn('Error checking developer mode:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si la aplicación es debuggeable\r\n   */\r\n  private async checkDebuggableApp(): Promise<boolean> {\r\n    try {\r\n      // En producción, estas propiedades no deberían estar disponibles\r\n      if (typeof window !== 'undefined') {\r\n        // Verificar si hay herramientas de desarrollo disponibles\r\n        const windowWithDevTools = window as Window & {\r\n          __REACT_DEVTOOLS_GLOBAL_HOOK__?: unknown;\r\n          __VUE_DEVTOOLS_GLOBAL_HOOK__?: unknown;\r\n          eruda?: unknown;\r\n          vConsole?: unknown;\r\n        };\r\n        \r\n        if (windowWithDevTools.__REACT_DEVTOOLS_GLOBAL_HOOK__ ||\r\n            windowWithDevTools.__VUE_DEVTOOLS_GLOBAL_HOOK__ ||\r\n            windowWithDevTools.eruda ||\r\n            windowWithDevTools.vConsole) {\r\n          return true;\r\n        }\r\n\r\n        // Verificar si console está disponible y modificado\r\n        if (window.console && typeof window.console.clear === 'function') {\r\n          const originalClear = window.console.clear;\r\n          let isDebuggable = false;\r\n          \r\n          window.console.clear = function() {\r\n            isDebuggable = true;\r\n            return originalClear.call(this);\r\n          };\r\n          \r\n          try {\r\n            window.console.clear();\r\n          } catch {\r\n            // Ignorar errores\r\n          }\r\n          \r\n          window.console.clear = originalClear;\r\n          return isDebuggable;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.warn('Error checking debuggable app:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica si se está ejecutando en un emulador\r\n   */\r\n  private async checkEmulator(): Promise<boolean> {\r\n    try {\r\n      if (typeof window !== 'undefined' && window.Capacitor) {\r\n        // Verificar propiedades típicas de emuladores usando user agent\r\n        const userAgent = navigator.userAgent.toLowerCase();\r\n        const emulatorIndicators = [\r\n          'generic', 'unknown', 'emulator', 'simulator',\r\n          'genymotion', 'bluestacks', 'android sdk'\r\n        ];\r\n        \r\n        for (const indicator of emulatorIndicators) {\r\n          if (userAgent.includes(indicator)) {\r\n            return true;\r\n          }\r\n        }\r\n\r\n        // Verificar características del navegador en Capacitor\r\n        try {\r\n          const platform = window.Capacitor.getPlatform();\r\n          if (platform.toLowerCase().includes('simulator') || \r\n              platform.toLowerCase().includes('emulator')) {\r\n            return true;\r\n          }\r\n        } catch {\r\n          // Método no disponible, continuar\r\n        }\r\n      }\r\n\r\n      // Verificar características del navegador que indican emulador\r\n      const userAgent = navigator.userAgent.toLowerCase();\r\n      if (userAgent.includes('emulator') || \r\n          userAgent.includes('simulator') ||\r\n          userAgent.includes('genymotion')) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.warn('Error checking emulator:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Intenta ejecutar un comando que requiere root\r\n   */\r\n  private async canExecuteRootCommand(): Promise<boolean> {\r\n    try {\r\n      // En un entorno web/Capacitor, esto es limitado\r\n      // Pero podemos verificar si ciertas APIs están disponibles\r\n      if (typeof window !== 'undefined' && window.Capacitor) {\r\n        // Verificar si hay plugins no estándar que requieren root\r\n        const plugins = window.Capacitor.Plugins;\r\n        \r\n        // Plugins que típicamente requieren root\r\n        const rootRequiredPlugins = [\r\n          'RootChecker', 'SuperUser', 'SystemSettings', 'DeviceAdmin'\r\n        ];\r\n        \r\n        for (const plugin of rootRequiredPlugins) {\r\n          if (plugins[plugin]) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Muestra el modal de advertencia de seguridad\r\n   */\r\n  public showSecurityWarning(threats: string[]): void {\r\n    const threatMessages: Record<string, string> = {\r\n      ROOT_DETECTED: 'Se ha detectado acceso ROOT en el dispositivo',\r\n      DEVELOPER_MODE_ENABLED: 'El modo desarrollador está habilitado',\r\n      DEBUG_MODE_ENABLED: 'El modo debug está activo',\r\n      EMULATOR_DETECTED: 'Se detectó que la app se ejecuta en un emulador'\r\n    };\r\n\r\n    const messages = threats.map(threat => threatMessages[threat] || threat);\r\n    \r\n    const warningHtml = `\r\n      <div style=\"\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: rgba(0, 0, 0, 0.9);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 10000;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n      \">\r\n        <div style=\"\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          padding: 2rem;\r\n          border-radius: 20px;\r\n          max-width: 400px;\r\n          text-align: center;\r\n          color: white;\r\n          box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\r\n        \">\r\n          <div style=\"font-size: 3rem; margin-bottom: 1rem;\">🔒</div>\r\n          <h2 style=\"margin-bottom: 1rem; font-size: 1.5rem;\">Advertencia de Seguridad</h2>\r\n          <p style=\"margin-bottom: 1.5rem; line-height: 1.6;\">\r\n            Por motivos de seguridad, ComplicesConecta no puede ejecutarse en este dispositivo:\r\n          </p>\r\n          <ul style=\"text-align: left; margin-bottom: 1.5rem; padding-left: 1rem;\">\r\n            ${messages.map(msg => `<li style=\"margin-bottom: 0.5rem;\">• ${msg}</li>`).join('')}\r\n          </ul>\r\n          <p style=\"margin-bottom: 1.5rem; font-size: 0.9rem; opacity: 0.9;\">\r\n            Para utilizar la aplicación, desactive el modo desarrollador y/o root en su dispositivo.\r\n          </p>\r\n          <button onclick=\"window.close()\" style=\"\r\n            background: rgba(255, 255, 255, 0.2);\r\n            border: 1px solid rgba(255, 255, 255, 0.3);\r\n            color: white;\r\n            padding: 0.75rem 1.5rem;\r\n            border-radius: 25px;\r\n            cursor: pointer;\r\n            font-size: 1rem;\r\n          \">\r\n            Cerrar Aplicación\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.body.insertAdjacentHTML('beforeend', warningHtml);\r\n  }\r\n\r\n  /**\r\n   * Verifica la seguridad y bloquea la app si es necesario\r\n   */\r\n  public async checkAndEnforceSecurity(): Promise<boolean> {\r\n    const securityCheck = await this.performSecurityCheck();\r\n    \r\n    // Si hay amenazas críticas, bloquear la aplicación\r\n    const criticalThreats = securityCheck.threats.filter(threat => \r\n      threat === 'ROOT_DETECTED' || threat === 'DEVELOPER_MODE_ENABLED'\r\n    );\r\n\r\n    if (criticalThreats.length > 0) {\r\n      this.showSecurityWarning(criticalThreats);\r\n      return false; // Bloquear aplicación\r\n    }\r\n\r\n    return true; // Permitir acceso\r\n  }\r\n}\r\n\r\n// Instancia singleton\r\nexport const androidSecurity = AndroidSecurityManager.getInstance();\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\clearStorage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\dynamicImports.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\emailService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\emailValidation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\hcaptcha-verify.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\imageOptimization.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\imageProcessing.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\lazyComponents.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\mobile.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\mobile.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\preloading.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\reactFallbacks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\safeLayoutEffect.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\safeWalletInit.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\testDebugger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\validation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\walletProtection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\wallets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\webVitals.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\utils\\webVitals.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\conej\\Documents\\conecta-social-comunidad-main\\src\\vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]