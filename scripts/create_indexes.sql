-- =====================================================
-- üöÄ SISTEMA AUTOM√ÅTICO DE √çNDICES OPTIMIZADOS
-- ComplicesConecta v2.1.2 - Optimizaci√≥n de Performance
-- Fecha: 06 de septiembre, 2025 - 05:32 hrs
-- =====================================================

-- ü§ñ AUDITOR Y REPARADOR AUTOM√ÅTICO DE √çNDICES
-- Crea √≠ndices optimizados para m√°xima performance
-- Scripts idempotentes - seguros para ejecutar m√∫ltiples veces

DO $$
BEGIN
    RAISE NOTICE 'üöÄ INICIANDO SISTEMA AUTOM√ÅTICO DE √çNDICES OPTIMIZADOS';
    RAISE NOTICE '‚è∞ Fecha: %', NOW();
    RAISE NOTICE 'üìä Creando √≠ndices de performance...';
END $$;

-- üìä √çNDICES PARA TABLA PROFILES
-- =====================================================

-- √çndice √∫nico para email
CREATE UNIQUE INDEX IF NOT EXISTS idx_profiles_email_unique 
ON public.profiles(email) WHERE email IS NOT NULL;

-- √çndice compuesto para b√∫squedas activas
CREATE INDEX IF NOT EXISTS idx_profiles_active_search 
ON public.profiles(is_active, is_demo, age) WHERE is_active = true AND is_demo = false;

-- √çndice GIN para intereses (b√∫squedas de array)
CREATE INDEX IF NOT EXISTS idx_profiles_interests_gin 
ON public.profiles USING GIN(interests);

-- √çndice GIN para looking_for (b√∫squedas de array)
CREATE INDEX IF NOT EXISTS idx_profiles_looking_for_gin 
ON public.profiles USING GIN(looking_for);

-- √çndice para tipo de perfil
CREATE INDEX IF NOT EXISTS idx_profiles_type 
ON public.profiles(profile_type) WHERE profile_type IS NOT NULL;

-- √çndice para experiencia swinger
CREATE INDEX IF NOT EXISTS idx_profiles_experience 
ON public.profiles(swinger_experience) WHERE swinger_experience IS NOT NULL;

-- üîê √çNDICES PARA TABLA USER_ROLES
-- =====================================================

-- √çndice √∫nico para user_id
CREATE UNIQUE INDEX IF NOT EXISTS idx_user_roles_user_id_unique 
ON public.user_roles(user_id);

-- √çndice para rol
CREATE INDEX IF NOT EXISTS idx_user_roles_role 
ON public.user_roles(role);

-- üíå √çNDICES PARA TABLA INVITATIONS
-- =====================================================

-- √çndice compuesto para b√∫squedas de invitaciones
CREATE INDEX IF NOT EXISTS idx_invitations_from_to 
ON public.invitations(from_profile, to_profile);

-- √çndice para estado de invitaciones
CREATE INDEX IF NOT EXISTS idx_invitations_status 
ON public.invitations(status, created_at);

-- √çndice para tipo de invitaci√≥n
CREATE INDEX IF NOT EXISTS idx_invitations_type 
ON public.invitations(type, status);

-- √çndice √∫nico compuesto para evitar duplicados
CREATE UNIQUE INDEX IF NOT EXISTS idx_invitations_unique_type 
ON public.invitations(from_profile, to_profile, type);

-- üñºÔ∏è √çNDICES PARA TABLA IMAGES
-- =====================================================

-- √çndice para perfil propietario
CREATE INDEX IF NOT EXISTS idx_images_profile_id 
ON public.images(profile_id, created_at DESC);

-- √çndice para im√°genes p√∫blicas
CREATE INDEX IF NOT EXISTS idx_images_public 
ON public.images(is_public, type) WHERE is_public = true;

-- √çndice para tipo de imagen
CREATE INDEX IF NOT EXISTS idx_images_type 
ON public.images(type, created_at DESC);

-- üîë √çNDICES PARA TABLA IMAGE_PERMISSIONS
-- =====================================================

-- √çndice √∫nico para evitar duplicados
CREATE UNIQUE INDEX IF NOT EXISTS idx_image_permissions_unique 
ON public.image_permissions(image_id, granted_to);

-- √çndice para permisos otorgados por usuario
CREATE INDEX IF NOT EXISTS idx_image_permissions_granted_by 
ON public.image_permissions(granted_by, granted_at DESC);

-- √çndice para permisos recibidos por usuario
CREATE INDEX IF NOT EXISTS idx_image_permissions_granted_to 
ON public.image_permissions(granted_to, granted_at DESC);

-- üìã √çNDICES PARA TABLA GALLERY_ACCESS_REQUESTS
-- =====================================================

-- √çndice √∫nico para evitar duplicados
CREATE UNIQUE INDEX IF NOT EXISTS idx_gallery_requests_unique 
ON public.gallery_access_requests(requester_id, target_profile_id);

-- √çndice para solicitudes por estado
CREATE INDEX IF NOT EXISTS idx_gallery_requests_status 
ON public.gallery_access_requests(status, created_at DESC);

-- √çndice para solicitudes recibidas
CREATE INDEX IF NOT EXISTS idx_gallery_requests_target 
ON public.gallery_access_requests(target_profile_id, status);

-- üí¨ √çNDICES PARA TABLA CHAT_ROOMS
-- =====================================================

-- √çndice para salas p√∫blicas
CREATE INDEX IF NOT EXISTS idx_chat_rooms_public 
ON public.chat_rooms(is_public, created_at DESC) WHERE is_public = true;

-- √çndice para creador de sala
CREATE INDEX IF NOT EXISTS idx_chat_rooms_created_by 
ON public.chat_rooms(created_by, created_at DESC);

-- üë• √çNDICES PARA TABLA CHAT_MEMBERS
-- =====================================================

-- √çndice √∫nico para evitar duplicados
CREATE UNIQUE INDEX IF NOT EXISTS idx_chat_members_unique 
ON public.chat_members(room_id, profile_id);

-- √çndice para miembros por sala
CREATE INDEX IF NOT EXISTS idx_chat_members_room 
ON public.chat_members(room_id, joined_at DESC);

-- √çndice para salas de usuario
CREATE INDEX IF NOT EXISTS idx_chat_members_profile 
ON public.chat_members(profile_id, joined_at DESC);

-- üí¨ √çNDICES PARA TABLA MESSAGES
-- =====================================================

-- √çndice compuesto para mensajes de sala
CREATE INDEX IF NOT EXISTS idx_messages_room_time 
ON public.messages(room_id, created_at DESC);

-- √çndice para mensajes por remitente
CREATE INDEX IF NOT EXISTS idx_messages_sender 
ON public.messages(sender_id, created_at DESC);

-- √çndice para tipo de mensaje
CREATE INDEX IF NOT EXISTS idx_messages_type 
ON public.messages(message_type, created_at DESC);

-- üíï √çNDICES PARA TABLA USER_LIKES
-- =====================================================

-- √çndice √∫nico para evitar duplicados
CREATE UNIQUE INDEX IF NOT EXISTS idx_user_likes_unique 
ON public.user_likes(user_id, liked_user_id);

-- √çndice para likes dados
CREATE INDEX IF NOT EXISTS idx_user_likes_given 
ON public.user_likes(user_id, liked, created_at DESC);

-- √çndice para likes recibidos
CREATE INDEX IF NOT EXISTS idx_user_likes_received 
ON public.user_likes(liked_user_id, liked, created_at DESC);

-- üéØ √çNDICES PARA TABLA MATCHES
-- =====================================================

-- √çndice √∫nico para evitar duplicados (bidireccional)
CREATE UNIQUE INDEX IF NOT EXISTS idx_matches_users_unique 
ON public.matches(LEAST(user1_id, user2_id), GREATEST(user1_id, user2_id));

-- √çndice para matches de usuario1
CREATE INDEX IF NOT EXISTS idx_matches_user1 
ON public.matches(user1_id, status, created_at DESC);

-- √çndice para matches de usuario2
CREATE INDEX IF NOT EXISTS idx_matches_user2 
ON public.matches(user2_id, status, created_at DESC);

-- √çndice para matches activos
CREATE INDEX IF NOT EXISTS idx_matches_active 
ON public.matches(status, compatibility_score DESC) WHERE status = 'active';

-- üîÑ √çNDICES PARA TABLA MATCH_INTERACTIONS
-- =====================================================

-- √çndice compuesto para interacciones de match
CREATE INDEX IF NOT EXISTS idx_match_interactions_match_user 
ON public.match_interactions(match_id, user_id, created_at DESC);

-- √çndice para tipo de interacci√≥n
CREATE INDEX IF NOT EXISTS idx_match_interactions_type 
ON public.match_interactions(interaction_type, created_at DESC);

-- üîê √çNDICES PARA TABLA GALLERY_PERMISSIONS
-- =====================================================

-- √çndice √∫nico para evitar duplicados
CREATE UNIQUE INDEX IF NOT EXISTS idx_gallery_permissions_unique 
ON public.gallery_permissions(profile_id, granted_to);

-- √çndice para permisos por perfil
CREATE INDEX IF NOT EXISTS idx_gallery_permissions_profile 
ON public.gallery_permissions(profile_id, granted_at DESC);

-- √çndice para permisos otorgados
CREATE INDEX IF NOT EXISTS idx_gallery_permissions_granted_by 
ON public.gallery_permissions(granted_by, granted_at DESC);

-- üì® √çNDICES PARA TABLA CHAT_INVITATIONS
-- =====================================================

-- √çndice √∫nico para evitar duplicados
CREATE UNIQUE INDEX IF NOT EXISTS idx_chat_invitations_unique 
ON public.chat_invitations(room_id, invited_user);

-- √çndice para invitaciones por sala
CREATE INDEX IF NOT EXISTS idx_chat_invitations_room 
ON public.chat_invitations(room_id, status, created_at DESC);

-- √çndice para invitaciones recibidas
CREATE INDEX IF NOT EXISTS idx_chat_invitations_user 
ON public.chat_invitations(invited_user, status, created_at DESC);

-- üîç √çNDICES ADICIONALES PARA OPTIMIZACI√ìN
-- =====================================================

-- √çndice para b√∫squedas por rango de edad
CREATE INDEX IF NOT EXISTS idx_profiles_age_range 
ON public.profiles(age) WHERE is_active = true AND is_demo = false;

-- √çndice para fechas de creaci√≥n
CREATE INDEX IF NOT EXISTS idx_profiles_created_at 
ON public.profiles(created_at DESC);

-- √çndice para fechas de actualizaci√≥n
CREATE INDEX IF NOT EXISTS idx_profiles_updated_at 
ON public.profiles(updated_at DESC) WHERE is_active = true;

-- √çndice para matches por score de compatibilidad
CREATE INDEX IF NOT EXISTS idx_matches_compatibility 
ON public.matches(compatibility_score DESC) WHERE status = 'active';

DO $$
BEGIN
    RAISE NOTICE '‚úÖ √çNDICES OPTIMIZADOS CREADOS EXITOSAMENTE';
    RAISE NOTICE 'üöÄ Performance de base de datos maximizada';
    RAISE NOTICE 'üìä B√∫squedas y consultas optimizadas';
END $$;
