name: Análisis de Seguridad

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Cada domingo a medianoche
  workflow_dispatch:

jobs:
  escaneo-dependencias:
    runs-on: ubuntu-latest
    
    steps:
    - name: Obtener código
      uses: actions/checkout@v4
      
    - name: Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Ejecutar auditoría npm
      run: |
        npm audit --audit-level=high
      continue-on-error: true
        
  analisis-codigo-estatico:
    runs-on: ubuntu-latest
    
    steps:
    - name: Obtener código
      uses: actions/checkout@v4
      
    - name: Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Instalar dependencias
      run: |
        # Limpiar cache y reinstalar para evitar problemas con dependencias nativas
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --legacy-peer-deps --omit=optional
      
    - name: Ejecutar ESLint
      run: npm run lint
      continue-on-error: true
        
  seguridad-app-movil:
    runs-on: ubuntu-latest
    
    steps:
    - name: Obtener código
      uses: actions/checkout@v4
      
    - name: Configurar Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Análisis de seguridad MobSF
      uses: MobSF/mobsfscan@main
      continue-on-error: true
      with:
        args: --json --output resultados-mobsf.json android/
        
    - name: Subir resultados MobSF
      uses: actions/upload-artifact@v4
      with:
        name: resultados-mobsf
        path: resultados-mobsf.json
        
  escaneo-secretos:
    runs-on: ubuntu-latest
    
    steps:
    - name: Obtener código
      uses: actions/checkout@v4
      
    - name: Buscar secretos con TruffleHog
      uses: trufflesecurity/trufflehog@v3.63.2
      with:
        path: ./
        extra_args: --debug --only-verified --no-verification
      continue-on-error: true
        
  reporte-seguridad:
    needs: [escaneo-dependencias, analisis-codigo-estatico, seguridad-app-movil, escaneo-secretos]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Generar reporte de seguridad
      run: |
        echo "## Reporte de Seguridad ComplicesConecta" > reporte-seguridad.md
        echo "Generado el: $(date)" >> reporte-seguridad.md
        echo "" >> reporte-seguridad.md
        echo "### Escaneos de seguridad completados:" >> reporte-seguridad.md
        echo "- Escaneo de vulnerabilidades en dependencias" >> reporte-seguridad.md
        echo "- Análisis estático de código" >> reporte-seguridad.md
        echo "- Análisis de seguridad de aplicación móvil" >> reporte-seguridad.md
        echo "- Escaneo de secretos" >> reporte-seguridad.md
        echo "" >> reporte-seguridad.md
        echo "Reportes completos disponibles en la sección de artefactos de esta ejecución." >> reporte-seguridad.md
        
    - name: Subir reporte de seguridad
      uses: actions/upload-artifact@v4
      with:
        name: reporte-seguridad
        path: reporte-seguridad.md
