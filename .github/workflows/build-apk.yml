name: Construir y Distribuir APK

on:
  workflow_dispatch:  # Permite ejecutar manualmente
  push:
    branches: [ main ]
    paths:
      - 'apps/mobile/**'
      - 'packages/shared/**'
      - 'packages/ui/**'

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        lfs: true
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: npm install --no-frozen-lockfile
      
    - name: Setup Java
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Configure Gradle properties
      run: |
        mkdir -p ~/.gradle
        echo "org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> ~/.gradle/gradle.properties
        echo "android.useAndroidX=true" >> ~/.gradle/gradle.properties
        echo "android.enableJetifier=true" >> ~/.gradle/gradle.properties
        
    - name: Configure app build with security features
      run: |
        cat > apps/mobile/app/src/main/java/com/complicesconecta/SecurityConfig.java << 'EOL'
        package com.complicesconecta;
        
        public class SecurityConfig {
            public static final boolean DETECT_DEVELOPER_MODE = true;
            public static final boolean DETECT_ROOT = true;
            public static final boolean DETECT_EMULATOR = true;
            
            public static final String APP_VERSION = "${{ github.run_number }}";
        }
        EOL
      
    - name: Build debug APK
      run: |
        cd apps/mobile
        ./gradlew assembleDebug
        
    - name: Build release APK
      run: |
        cd apps/mobile
        ./gradlew assembleRelease
      env:
        DETECT_DEVELOPER_MODE: 'true'
        DETECT_ROOT: 'true'
        
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: ./apps/mobile/app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"
      continue-on-error: true
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: ComplicesConecta v${{ github.run_number }}
        draft: false
        prerelease: false
        body: |
          ## ComplicesConecta App v${{ github.run_number }}
          
          **Fecha de lanzamiento:** ${{ github.event.repository.updated_at }}
          
          ### Nuevas características
          
          - Basado en la rama ${{ github.ref_name }}
          - Mejoras de rendimiento y estabilidad
          - Incluye verificaciones de seguridad
          
          ### Instalación
          
          1. Descarga el APK
          2. Habilita "Fuentes desconocidas" en la configuración de tu dispositivo
          3. Instala la aplicación
          
          [Ver instrucciones detalladas](https://complicesconecta.app/downloads)
        
    - name: Track APK with Git LFS
      run: |
        # Asegurar que el APK será tratado como un archivo LFS
        echo "*.apk filter=lfs diff=lfs merge=lfs -text" >> .gitattributes
        git lfs track "*.apk"
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        
        # Guardar el APK en un directorio dedicado para artefactos
        mkdir -p artifacts/releases
        cp ${{ steps.sign_app.outputs.signedReleaseFile }} artifacts/releases/ComplicesConecta-v${{ github.run_number }}.apk
        
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
        asset_name: ComplicesConecta-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Create Download Page
      run: |
        VERSION="v${{ github.run_number }}"
        DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/$VERSION/ComplicesConecta-v${{ github.run_number }}.apk"
        
        mkdir -p public/downloads
        cat > public/downloads/index.html << EOL
        <!DOCTYPE html>
        <html>
        <head>
          <title>Descargar ComplicesConecta</title>
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
        </head>
        <body class="bg-gray-100 min-h-screen flex items-center justify-center p-4">
          <div class="bg-white rounded-lg shadow-xl p-8 max-w-md w-full">
            <h1 class="text-3xl font-bold text-center mb-6">ComplicesConecta</h1>
            <p class="mb-6 text-gray-700">Versión: $VERSION (Build ${{ github.run_number }})</p>
            <div class="mb-8">
              <h2 class="font-semibold text-lg mb-2">Instrucciones de instalación:</h2>
              <ol class="list-decimal pl-6 space-y-2 text-gray-700">
                <li>Descarga la aplicación usando el botón de abajo</li>
                <li>Abre el archivo APK en tu dispositivo Android</li>
                <li>Si se te solicita, habilita la instalación desde fuentes desconocidas</li>
                <li>Sigue las instrucciones en pantalla para completar la instalación</li>
                <li>¡Disfruta de ComplicesConecta!</li>
              </ol>
            </div>
            <a href="$DOWNLOAD_URL" class="block w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg text-center transition duration-300">
              Descargar APK
            </a>
            <p class="mt-4 text-xs text-gray-500 text-center">
              Fecha de compilación: $(date +'%d/%m/%Y %H:%M')
            </p>
          </div>
        </body>
        </html>
        EOL
        
    - name: Deploy Download Page
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_DOWNLOAD_PAGE_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./public
      continue-on-error: true
